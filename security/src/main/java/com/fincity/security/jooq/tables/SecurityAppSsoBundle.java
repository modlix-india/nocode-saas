/*
 * This file is generated by jOOQ.
 */
package com.fincity.security.jooq.tables;


import com.fincity.security.jooq.Keys;
import com.fincity.security.jooq.Security;
import com.fincity.security.jooq.tables.SecurityApp.SecurityAppPath;
import com.fincity.security.jooq.tables.SecurityAppSsoToken.SecurityAppSsoTokenPath;
import com.fincity.security.jooq.tables.SecurityBundledApp.SecurityBundledAppPath;
import com.fincity.security.jooq.tables.SecurityClient.SecurityClientPath;
import com.fincity.security.jooq.tables.records.SecurityAppSsoBundleRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.InverseForeignKey;
import org.jooq.Name;
import org.jooq.Path;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.Record;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SecurityAppSsoBundle extends TableImpl<SecurityAppSsoBundleRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>security.security_app_sso_bundle</code>
     */
    public static final SecurityAppSsoBundle SECURITY_APP_SSO_BUNDLE = new SecurityAppSsoBundle();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SecurityAppSsoBundleRecord> getRecordType() {
        return SecurityAppSsoBundleRecord.class;
    }

    /**
     * The column <code>security.security_app_sso_bundle.ID</code>. Primary key
     */
    public final TableField<SecurityAppSsoBundleRecord, ULong> ID = createField(DSL.name("ID"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "Primary key");

    /**
     * The column <code>security.security_app_sso_bundle.CLIENT_CODE</code>.
     * Client Code
     */
    public final TableField<SecurityAppSsoBundleRecord, String> CLIENT_CODE = createField(DSL.name("CLIENT_CODE"), SQLDataType.CHAR(8).nullable(false), this, "Client Code");

    /**
     * The column <code>security.security_app_sso_bundle.BUNDLE_NAME</code>. SSO
     * Bundle Name
     */
    public final TableField<SecurityAppSsoBundleRecord, String> BUNDLE_NAME = createField(DSL.name("BUNDLE_NAME"), SQLDataType.VARCHAR(255).nullable(false), this, "SSO Bundle Name");

    /**
     * The column <code>security.security_app_sso_bundle.CREATED_BY</code>. ID
     * of the user who created this row
     */
    public final TableField<SecurityAppSsoBundleRecord, ULong> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.BIGINTUNSIGNED, this, "ID of the user who created this row");

    /**
     * The column <code>security.security_app_sso_bundle.CREATED_AT</code>. Time
     * when this row is created
     */
    public final TableField<SecurityAppSsoBundleRecord, LocalDateTime> CREATED_AT = createField(DSL.name("CREATED_AT"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field(DSL.raw("CURRENT_TIMESTAMP"), SQLDataType.LOCALDATETIME)), this, "Time when this row is created");

    /**
     * The column <code>security.security_app_sso_bundle.UPDATED_BY</code>. ID
     * of the user who updated this row
     */
    public final TableField<SecurityAppSsoBundleRecord, ULong> UPDATED_BY = createField(DSL.name("UPDATED_BY"), SQLDataType.BIGINTUNSIGNED, this, "ID of the user who updated this row");

    /**
     * The column <code>security.security_app_sso_bundle.UPDATED_AT</code>. Time
     * when this row is updated
     */
    public final TableField<SecurityAppSsoBundleRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("UPDATED_AT"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field(DSL.raw("CURRENT_TIMESTAMP"), SQLDataType.LOCALDATETIME)), this, "Time when this row is updated");

    private SecurityAppSsoBundle(Name alias, Table<SecurityAppSsoBundleRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private SecurityAppSsoBundle(Name alias, Table<SecurityAppSsoBundleRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table(), where);
    }

    /**
     * Create an aliased <code>security.security_app_sso_bundle</code> table
     * reference
     */
    public SecurityAppSsoBundle(String alias) {
        this(DSL.name(alias), SECURITY_APP_SSO_BUNDLE);
    }

    /**
     * Create an aliased <code>security.security_app_sso_bundle</code> table
     * reference
     */
    public SecurityAppSsoBundle(Name alias) {
        this(alias, SECURITY_APP_SSO_BUNDLE);
    }

    /**
     * Create a <code>security.security_app_sso_bundle</code> table reference
     */
    public SecurityAppSsoBundle() {
        this(DSL.name("security_app_sso_bundle"), null);
    }

    public <O extends Record> SecurityAppSsoBundle(Table<O> path, ForeignKey<O, SecurityAppSsoBundleRecord> childPath, InverseForeignKey<O, SecurityAppSsoBundleRecord> parentPath) {
        super(path, childPath, parentPath, SECURITY_APP_SSO_BUNDLE);
    }

    /**
     * A subtype implementing {@link Path} for simplified path-based joins.
     */
    public static class SecurityAppSsoBundlePath extends SecurityAppSsoBundle implements Path<SecurityAppSsoBundleRecord> {

        private static final long serialVersionUID = 1L;
        public <O extends Record> SecurityAppSsoBundlePath(Table<O> path, ForeignKey<O, SecurityAppSsoBundleRecord> childPath, InverseForeignKey<O, SecurityAppSsoBundleRecord> parentPath) {
            super(path, childPath, parentPath);
        }
        private SecurityAppSsoBundlePath(Name alias, Table<SecurityAppSsoBundleRecord> aliased) {
            super(alias, aliased);
        }

        @Override
        public SecurityAppSsoBundlePath as(String alias) {
            return new SecurityAppSsoBundlePath(DSL.name(alias), this);
        }

        @Override
        public SecurityAppSsoBundlePath as(Name alias) {
            return new SecurityAppSsoBundlePath(alias, this);
        }

        @Override
        public SecurityAppSsoBundlePath as(Table<?> alias) {
            return new SecurityAppSsoBundlePath(alias.getQualifiedName(), this);
        }
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Security.SECURITY;
    }

    @Override
    public Identity<SecurityAppSsoBundleRecord, ULong> getIdentity() {
        return (Identity<SecurityAppSsoBundleRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<SecurityAppSsoBundleRecord> getPrimaryKey() {
        return Keys.KEY_SECURITY_APP_SSO_BUNDLE_PRIMARY;
    }

    @Override
    public List<UniqueKey<SecurityAppSsoBundleRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_SECURITY_APP_SSO_BUNDLE_UK1_APP_SSO_BUNDLE_CLIENT);
    }

    @Override
    public List<ForeignKey<SecurityAppSsoBundleRecord, ?>> getReferences() {
        return Arrays.asList(Keys.FK1_APP_SSO_BUNDLE_CLIENT_CODE);
    }

    private transient SecurityClientPath _securityClient;

    /**
     * Get the implicit join path to the <code>security.security_client</code>
     * table.
     */
    public SecurityClientPath securityClient() {
        if (_securityClient == null)
            _securityClient = new SecurityClientPath(this, Keys.FK1_APP_SSO_BUNDLE_CLIENT_CODE, null);

        return _securityClient;
    }

    private transient SecurityAppSsoTokenPath _securityAppSsoToken;

    /**
     * Get the implicit to-many join path to the
     * <code>security.security_app_sso_token</code> table
     */
    public SecurityAppSsoTokenPath securityAppSsoToken() {
        if (_securityAppSsoToken == null)
            _securityAppSsoToken = new SecurityAppSsoTokenPath(this, null, Keys.FK1_APP_SSO_BUNDLE_USER_ID.getInverseKey());

        return _securityAppSsoToken;
    }

    private transient SecurityBundledAppPath _securityBundledApp;

    /**
     * Get the implicit to-many join path to the
     * <code>security.security_bundled_app</code> table
     */
    public SecurityBundledAppPath securityBundledApp() {
        if (_securityBundledApp == null)
            _securityBundledApp = new SecurityBundledAppPath(this, null, Keys.FK1_BUNDLED_APP_BUNDLE_ID.getInverseKey());

        return _securityBundledApp;
    }

    /**
     * Get the implicit many-to-many join path to the
     * <code>security.security_app</code> table
     */
    public SecurityAppPath securityApp() {
        return securityBundledApp().securityApp();
    }

    @Override
    public SecurityAppSsoBundle as(String alias) {
        return new SecurityAppSsoBundle(DSL.name(alias), this);
    }

    @Override
    public SecurityAppSsoBundle as(Name alias) {
        return new SecurityAppSsoBundle(alias, this);
    }

    @Override
    public SecurityAppSsoBundle as(Table<?> alias) {
        return new SecurityAppSsoBundle(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public SecurityAppSsoBundle rename(String name) {
        return new SecurityAppSsoBundle(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SecurityAppSsoBundle rename(Name name) {
        return new SecurityAppSsoBundle(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public SecurityAppSsoBundle rename(Table<?> name) {
        return new SecurityAppSsoBundle(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public SecurityAppSsoBundle where(Condition condition) {
        return new SecurityAppSsoBundle(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public SecurityAppSsoBundle where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public SecurityAppSsoBundle where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public SecurityAppSsoBundle where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public SecurityAppSsoBundle where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public SecurityAppSsoBundle where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public SecurityAppSsoBundle where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public SecurityAppSsoBundle where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public SecurityAppSsoBundle whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public SecurityAppSsoBundle whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
