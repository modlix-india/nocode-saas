/*
 * This file is generated by jOOQ.
 */
package com.fincity.security.jooq.tables.records;


import com.fincity.security.jooq.enums.SecurityPlanLimitName;
import com.fincity.security.jooq.enums.SecurityPlanLimitStatus;
import com.fincity.security.jooq.tables.SecurityPlanLimit;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SecurityPlanLimitRecord extends UpdatableRecordImpl<SecurityPlanLimitRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>security.security_plan_limit.ID</code>. Primary key
     */
    public SecurityPlanLimitRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan_limit.ID</code>. Primary key
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>security.security_plan_limit.PLAN_ID</code>. Plan ID
     */
    public SecurityPlanLimitRecord setPlanId(ULong value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan_limit.PLAN_ID</code>. Plan ID
     */
    public ULong getPlanId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>security.security_plan_limit.NAME</code>. Name of the
     * limit
     */
    public SecurityPlanLimitRecord setName(SecurityPlanLimitName value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan_limit.NAME</code>. Name of the
     * limit
     */
    public SecurityPlanLimitName getName() {
        return (SecurityPlanLimitName) get(2);
    }

    /**
     * Setter for <code>security.security_plan_limit.CUSTOM_NAME</code>. Custom
     * name of the limit
     */
    public SecurityPlanLimitRecord setCustomName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan_limit.CUSTOM_NAME</code>. Custom
     * name of the limit
     */
    public String getCustomName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>security.security_plan_limit.LIMIT</code>. Limit of the
     * plan
     */
    public SecurityPlanLimitRecord setLimit(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan_limit.LIMIT</code>. Limit of the
     * plan
     */
    public Integer getLimit() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>security.security_plan_limit.STATUS</code>. Status of
     * the limit in a plan
     */
    public SecurityPlanLimitRecord setStatus(SecurityPlanLimitStatus value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan_limit.STATUS</code>. Status of
     * the limit in a plan
     */
    public SecurityPlanLimitStatus getStatus() {
        return (SecurityPlanLimitStatus) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SecurityPlanLimitRecord
     */
    public SecurityPlanLimitRecord() {
        super(SecurityPlanLimit.SECURITY_PLAN_LIMIT);
    }

    /**
     * Create a detached, initialised SecurityPlanLimitRecord
     */
    public SecurityPlanLimitRecord(ULong id, ULong planId, SecurityPlanLimitName name, String customName, Integer limit, SecurityPlanLimitStatus status) {
        super(SecurityPlanLimit.SECURITY_PLAN_LIMIT);

        setId(id);
        setPlanId(planId);
        setName(name);
        setCustomName(customName);
        setLimit(limit);
        setStatus(status);
        resetTouchedOnNotNull();
    }
}
