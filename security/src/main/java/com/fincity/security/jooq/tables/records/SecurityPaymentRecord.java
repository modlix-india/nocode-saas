/*
 * This file is generated by jOOQ.
 */
package com.fincity.security.jooq.tables.records;


import com.fincity.security.jooq.enums.SecurityPaymentPaymentMethod;
import com.fincity.security.jooq.enums.SecurityPaymentPaymentStatus;
import com.fincity.security.jooq.tables.SecurityPayment;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.Map;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SecurityPaymentRecord extends UpdatableRecordImpl<SecurityPaymentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>security.security_payment.ID</code>. Primary key
     */
    public SecurityPaymentRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>security.security_payment.ID</code>. Primary key
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>security.security_payment.INVOICE_ID</code>. Invoice ID
     */
    public SecurityPaymentRecord setInvoiceId(ULong value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>security.security_payment.INVOICE_ID</code>. Invoice ID
     */
    public ULong getInvoiceId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>security.security_payment.PAYMENT_DATE</code>. Payment
     * date
     */
    public SecurityPaymentRecord setPaymentDate(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>security.security_payment.PAYMENT_DATE</code>. Payment
     * date
     */
    public LocalDateTime getPaymentDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>security.security_payment.PAYMENT_AMOUNT</code>. Payment
     * amount
     */
    public SecurityPaymentRecord setPaymentAmount(BigDecimal value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>security.security_payment.PAYMENT_AMOUNT</code>. Payment
     * amount
     */
    public BigDecimal getPaymentAmount() {
        return (BigDecimal) get(3);
    }

    /**
     * Setter for <code>security.security_payment.PAYMENT_STATUS</code>. Payment
     * status
     */
    public SecurityPaymentRecord setPaymentStatus(SecurityPaymentPaymentStatus value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>security.security_payment.PAYMENT_STATUS</code>. Payment
     * status
     */
    public SecurityPaymentPaymentStatus getPaymentStatus() {
        return (SecurityPaymentPaymentStatus) get(4);
    }

    /**
     * Setter for <code>security.security_payment.PAYMENT_METHOD</code>. Payment
     * method
     */
    public SecurityPaymentRecord setPaymentMethod(SecurityPaymentPaymentMethod value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>security.security_payment.PAYMENT_METHOD</code>. Payment
     * method
     */
    public SecurityPaymentPaymentMethod getPaymentMethod() {
        return (SecurityPaymentPaymentMethod) get(5);
    }

    /**
     * Setter for <code>security.security_payment.PAYMENT_REFERENCE</code>.
     * Payment reference or trasaction id
     */
    public SecurityPaymentRecord setPaymentReference(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>security.security_payment.PAYMENT_REFERENCE</code>.
     * Payment reference or trasaction id
     */
    public String getPaymentReference() {
        return (String) get(6);
    }

    /**
     * Setter for <code>security.security_payment.PAYMENT_RESPONSE</code>.
     * Payment response or error message
     */
    public SecurityPaymentRecord setPaymentResponse(Map value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>security.security_payment.PAYMENT_RESPONSE</code>.
     * Payment response or error message
     */
    public Map getPaymentResponse() {
        return (Map) get(7);
    }

    /**
     * Setter for <code>security.security_payment.CREATED_BY</code>. ID of the
     * user who created this row
     */
    public SecurityPaymentRecord setCreatedBy(ULong value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>security.security_payment.CREATED_BY</code>. ID of the
     * user who created this row
     */
    public ULong getCreatedBy() {
        return (ULong) get(8);
    }

    /**
     * Setter for <code>security.security_payment.CREATED_AT</code>. Time when
     * this row is created
     */
    public SecurityPaymentRecord setCreatedAt(LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>security.security_payment.CREATED_AT</code>. Time when
     * this row is created
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>security.security_payment.UPDATED_BY</code>. ID of the
     * user who updated this row
     */
    public SecurityPaymentRecord setUpdatedBy(ULong value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>security.security_payment.UPDATED_BY</code>. ID of the
     * user who updated this row
     */
    public ULong getUpdatedBy() {
        return (ULong) get(10);
    }

    /**
     * Setter for <code>security.security_payment.UPDATED_AT</code>. Time when
     * this row is updated
     */
    public SecurityPaymentRecord setUpdatedAt(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>security.security_payment.UPDATED_AT</code>. Time when
     * this row is updated
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SecurityPaymentRecord
     */
    public SecurityPaymentRecord() {
        super(SecurityPayment.SECURITY_PAYMENT);
    }

    /**
     * Create a detached, initialised SecurityPaymentRecord
     */
    public SecurityPaymentRecord(ULong id, ULong invoiceId, LocalDateTime paymentDate, BigDecimal paymentAmount, SecurityPaymentPaymentStatus paymentStatus, SecurityPaymentPaymentMethod paymentMethod, String paymentReference, Map paymentResponse, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(SecurityPayment.SECURITY_PAYMENT);

        setId(id);
        setInvoiceId(invoiceId);
        setPaymentDate(paymentDate);
        setPaymentAmount(paymentAmount);
        setPaymentStatus(paymentStatus);
        setPaymentMethod(paymentMethod);
        setPaymentReference(paymentReference);
        setPaymentResponse(paymentResponse);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetTouchedOnNotNull();
    }
}
