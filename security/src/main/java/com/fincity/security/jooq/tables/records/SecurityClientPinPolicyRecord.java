/*
 * This file is generated by jOOQ.
 */
package com.fincity.security.jooq.tables.records;


import com.fincity.security.jooq.tables.SecurityClientPinPolicy;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;
import org.jooq.types.UShort;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SecurityClientPinPolicyRecord extends UpdatableRecordImpl<SecurityClientPinPolicyRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>security.security_client_pin_policy.ID</code>. Primary
     * key, unique identifier for each PIN policy entry
     */
    public SecurityClientPinPolicyRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>security.security_client_pin_policy.ID</code>. Primary
     * key, unique identifier for each PIN policy entry
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>security.security_client_pin_policy.CLIENT_ID</code>.
     * Identifier for the client to which this PIN policy belongs. References
     * security_client table
     */
    public SecurityClientPinPolicyRecord setClientId(ULong value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>security.security_client_pin_policy.CLIENT_ID</code>.
     * Identifier for the client to which this PIN policy belongs. References
     * security_client table
     */
    public ULong getClientId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>security.security_client_pin_policy.APP_ID</code>.
     * Identifier for the application to which this PIN policy belongs.
     * References security_app table
     */
    public SecurityClientPinPolicyRecord setAppId(ULong value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>security.security_client_pin_policy.APP_ID</code>.
     * Identifier for the application to which this PIN policy belongs.
     * References security_app table
     */
    public ULong getAppId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>security.security_client_pin_policy.LENGTH</code>.
     * Length of the PIN to be generated
     */
    public SecurityClientPinPolicyRecord setLength(UShort value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>security.security_client_pin_policy.LENGTH</code>.
     * Length of the PIN to be generated
     */
    public UShort getLength() {
        return (UShort) get(3);
    }

    /**
     * Setter for
     * <code>security.security_client_pin_policy.RE_LOGIN_AFTER_INTERVAL</code>.
     * Time interval in minutes after which re-login is required
     */
    public SecurityClientPinPolicyRecord setReLoginAfterInterval(ULong value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>security.security_client_pin_policy.RE_LOGIN_AFTER_INTERVAL</code>.
     * Time interval in minutes after which re-login is required
     */
    public ULong getReLoginAfterInterval() {
        return (ULong) get(4);
    }

    /**
     * Setter for
     * <code>security.security_client_pin_policy.EXPIRY_IN_DAYS</code>. Number
     * of days after which the PIN expires
     */
    public SecurityClientPinPolicyRecord setExpiryInDays(UShort value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>security.security_client_pin_policy.EXPIRY_IN_DAYS</code>. Number
     * of days after which the PIN expires
     */
    public UShort getExpiryInDays() {
        return (UShort) get(5);
    }

    /**
     * Setter for
     * <code>security.security_client_pin_policy.EXPIRY_WARN_IN_DAYS</code>.
     * Number of days before expiry to warn the user
     */
    public SecurityClientPinPolicyRecord setExpiryWarnInDays(UShort value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>security.security_client_pin_policy.EXPIRY_WARN_IN_DAYS</code>.
     * Number of days before expiry to warn the user
     */
    public UShort getExpiryWarnInDays() {
        return (UShort) get(6);
    }

    /**
     * Setter for
     * <code>security.security_client_pin_policy.PIN_HISTORY_COUNT</code>.
     * Remember how many pin
     */
    public SecurityClientPinPolicyRecord setPinHistoryCount(UShort value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>security.security_client_pin_policy.PIN_HISTORY_COUNT</code>.
     * Remember how many pin
     */
    public UShort getPinHistoryCount() {
        return (UShort) get(7);
    }

    /**
     * Setter for
     * <code>security.security_client_pin_policy.NO_FAILED_ATTEMPTS</code>.
     * Maximum number of failed attempts allowed before PIN login is blocked
     */
    public SecurityClientPinPolicyRecord setNoFailedAttempts(UShort value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for
     * <code>security.security_client_pin_policy.NO_FAILED_ATTEMPTS</code>.
     * Maximum number of failed attempts allowed before PIN login is blocked
     */
    public UShort getNoFailedAttempts() {
        return (UShort) get(8);
    }

    /**
     * Setter for
     * <code>security.security_client_pin_policy.USER_LOCK_TIME</code>. Time in
     * minutes for which user need to be locked it policy violates
     */
    public SecurityClientPinPolicyRecord setUserLockTime(ULong value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for
     * <code>security.security_client_pin_policy.USER_LOCK_TIME</code>. Time in
     * minutes for which user need to be locked it policy violates
     */
    public ULong getUserLockTime() {
        return (ULong) get(9);
    }

    /**
     * Setter for <code>security.security_client_pin_policy.CREATED_BY</code>.
     * ID of the user who created this row
     */
    public SecurityClientPinPolicyRecord setCreatedBy(ULong value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>security.security_client_pin_policy.CREATED_BY</code>.
     * ID of the user who created this row
     */
    public ULong getCreatedBy() {
        return (ULong) get(10);
    }

    /**
     * Setter for <code>security.security_client_pin_policy.CREATED_AT</code>.
     * Time when this row is created
     */
    public SecurityClientPinPolicyRecord setCreatedAt(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>security.security_client_pin_policy.CREATED_AT</code>.
     * Time when this row is created
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>security.security_client_pin_policy.UPDATED_BY</code>.
     * ID of the user who last updated this row
     */
    public SecurityClientPinPolicyRecord setUpdatedBy(ULong value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>security.security_client_pin_policy.UPDATED_BY</code>.
     * ID of the user who last updated this row
     */
    public ULong getUpdatedBy() {
        return (ULong) get(12);
    }

    /**
     * Setter for <code>security.security_client_pin_policy.UPDATED_AT</code>.
     * Time when this row is last updated
     */
    public SecurityClientPinPolicyRecord setUpdatedAt(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>security.security_client_pin_policy.UPDATED_AT</code>.
     * Time when this row is last updated
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SecurityClientPinPolicyRecord
     */
    public SecurityClientPinPolicyRecord() {
        super(SecurityClientPinPolicy.SECURITY_CLIENT_PIN_POLICY);
    }

    /**
     * Create a detached, initialised SecurityClientPinPolicyRecord
     */
    public SecurityClientPinPolicyRecord(ULong id, ULong clientId, ULong appId, UShort length, ULong reLoginAfterInterval, UShort expiryInDays, UShort expiryWarnInDays, UShort pinHistoryCount, UShort noFailedAttempts, ULong userLockTime, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(SecurityClientPinPolicy.SECURITY_CLIENT_PIN_POLICY);

        setId(id);
        setClientId(clientId);
        setAppId(appId);
        setLength(length);
        setReLoginAfterInterval(reLoginAfterInterval);
        setExpiryInDays(expiryInDays);
        setExpiryWarnInDays(expiryWarnInDays);
        setPinHistoryCount(pinHistoryCount);
        setNoFailedAttempts(noFailedAttempts);
        setUserLockTime(userLockTime);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
