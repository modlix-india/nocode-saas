/*
 * This file is generated by jOOQ.
 */
package com.fincity.security.jooq.tables.records;


import com.fincity.security.jooq.tables.SecurityClientPlan;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SecurityClientPlanRecord extends UpdatableRecordImpl<SecurityClientPlanRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>security.security_client_plan.ID</code>. Primary key
     */
    public SecurityClientPlanRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>security.security_client_plan.ID</code>. Primary key
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>security.security_client_plan.CLIENT_ID</code>. Client
     * ID
     */
    public SecurityClientPlanRecord setClientId(ULong value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>security.security_client_plan.CLIENT_ID</code>. Client
     * ID
     */
    public ULong getClientId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>security.security_client_plan.PLAN_ID</code>. Plan ID
     */
    public SecurityClientPlanRecord setPlanId(ULong value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>security.security_client_plan.PLAN_ID</code>. Plan ID
     */
    public ULong getPlanId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>security.security_client_plan.CYCLE_ID</code>. Cycle ID
     */
    public SecurityClientPlanRecord setCycleId(ULong value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>security.security_client_plan.CYCLE_ID</code>. Cycle ID
     */
    public ULong getCycleId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>security.security_client_plan.START_DATE</code>. Start
     * date of the plan
     */
    public SecurityClientPlanRecord setStartDate(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>security.security_client_plan.START_DATE</code>. Start
     * date of the plan
     */
    public LocalDateTime getStartDate() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>security.security_client_plan.END_DATE</code>. End date
     * of the plan
     */
    public SecurityClientPlanRecord setEndDate(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>security.security_client_plan.END_DATE</code>. End date
     * of the plan
     */
    public LocalDateTime getEndDate() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>security.security_client_plan.NEXT_INVOICE_DATE</code>.
     */
    public SecurityClientPlanRecord setNextInvoiceDate(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>security.security_client_plan.NEXT_INVOICE_DATE</code>.
     */
    public LocalDateTime getNextInvoiceDate() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SecurityClientPlanRecord
     */
    public SecurityClientPlanRecord() {
        super(SecurityClientPlan.SECURITY_CLIENT_PLAN);
    }

    /**
     * Create a detached, initialised SecurityClientPlanRecord
     */
    public SecurityClientPlanRecord(ULong id, ULong clientId, ULong planId, ULong cycleId, LocalDateTime startDate, LocalDateTime endDate, LocalDateTime nextInvoiceDate) {
        super(SecurityClientPlan.SECURITY_CLIENT_PLAN);

        setId(id);
        setClientId(clientId);
        setPlanId(planId);
        setCycleId(cycleId);
        setStartDate(startDate);
        setEndDate(endDate);
        setNextInvoiceDate(nextInvoiceDate);
        resetTouchedOnNotNull();
    }
}
