/*
 * This file is generated by jOOQ.
 */
package com.fincity.security.jooq.tables.records;


import com.fincity.security.jooq.enums.SecurityPlanStatus;
import com.fincity.security.jooq.tables.SecurityPlan;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SecurityPlanRecord extends UpdatableRecordImpl<SecurityPlanRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>security.security_plan.ID</code>. Primary key
     */
    public SecurityPlanRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan.ID</code>. Primary key
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>security.security_plan.CLIENT_ID</code>. URL Client ID
     * for which this plan belongs to
     */
    public SecurityPlanRecord setClientId(ULong value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan.CLIENT_ID</code>. URL Client ID
     * for which this plan belongs to
     */
    public ULong getClientId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>security.security_plan.APP_ID</code>.
     */
    public SecurityPlanRecord setAppId(ULong value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan.APP_ID</code>.
     */
    public ULong getAppId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>security.security_plan.NAME</code>. Name of the package
     */
    public SecurityPlanRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan.NAME</code>. Name of the package
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>security.security_plan.DESCRIPTION</code>. Description
     * of the package
     */
    public SecurityPlanRecord setDescription(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan.DESCRIPTION</code>. Description
     * of the package
     */
    public String getDescription() {
        return (String) get(4);
    }

    /**
     * Setter for <code>security.security_plan.PREPAID</code>.
     */
    public SecurityPlanRecord setPrepaid(Byte value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan.PREPAID</code>.
     */
    public Byte getPrepaid() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>security.security_plan.FEATURES</code>. Features of the
     * plan
     */
    public SecurityPlanRecord setFeatures(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan.FEATURES</code>. Features of the
     * plan
     */
    public String getFeatures() {
        return (String) get(6);
    }

    /**
     * Setter for <code>security.security_plan.STATUS</code>. Status of the plan
     */
    public SecurityPlanRecord setStatus(SecurityPlanStatus value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan.STATUS</code>. Status of the plan
     */
    public SecurityPlanStatus getStatus() {
        return (SecurityPlanStatus) get(7);
    }

    /**
     * Setter for <code>security.security_plan.CREATED_BY</code>. ID of the user
     * who created this row
     */
    public SecurityPlanRecord setCreatedBy(ULong value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan.CREATED_BY</code>. ID of the user
     * who created this row
     */
    public ULong getCreatedBy() {
        return (ULong) get(8);
    }

    /**
     * Setter for <code>security.security_plan.CREATED_AT</code>. Time when this
     * row is created
     */
    public SecurityPlanRecord setCreatedAt(LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan.CREATED_AT</code>. Time when this
     * row is created
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>security.security_plan.UPDATED_BY</code>. ID of the user
     * who updated this row
     */
    public SecurityPlanRecord setUpdatedBy(ULong value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan.UPDATED_BY</code>. ID of the user
     * who updated this row
     */
    public ULong getUpdatedBy() {
        return (ULong) get(10);
    }

    /**
     * Setter for <code>security.security_plan.UPDATED_AT</code>. Time when this
     * row is updated
     */
    public SecurityPlanRecord setUpdatedAt(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan.UPDATED_AT</code>. Time when this
     * row is updated
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>security.security_plan.FALL_BACK_PLAN_ID</code>.
     * Fallback plan ID
     */
    public SecurityPlanRecord setFallBackPlanId(ULong value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan.FALL_BACK_PLAN_ID</code>.
     * Fallback plan ID
     */
    public ULong getFallBackPlanId() {
        return (ULong) get(12);
    }

    /**
     * Setter for <code>security.security_plan.PLAN_CODE</code>. Plan code
     */
    public SecurityPlanRecord setPlanCode(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan.PLAN_CODE</code>. Plan code
     */
    public String getPlanCode() {
        return (String) get(13);
    }

    /**
     * Setter for <code>security.security_plan.FOR_REGISTRATION</code>.
     * Indicator if this plan is for registration
     */
    public SecurityPlanRecord setForRegistration(Byte value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan.FOR_REGISTRATION</code>.
     * Indicator if this plan is for registration
     */
    public Byte getForRegistration() {
        return (Byte) get(14);
    }

    /**
     * Setter for <code>security.security_plan.ORDER_NUMBER</code>. Order number
     * of the plan
     */
    public SecurityPlanRecord setOrderNumber(Integer value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan.ORDER_NUMBER</code>. Order number
     * of the plan
     */
    public Integer getOrderNumber() {
        return (Integer) get(15);
    }

    /**
     * Setter for <code>security.security_plan.DEFAULT_PLAN</code>. Indicator if
     * this plan is the default plan
     */
    public SecurityPlanRecord setDefaultPlan(Byte value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan.DEFAULT_PLAN</code>. Indicator if
     * this plan is the default plan
     */
    public Byte getDefaultPlan() {
        return (Byte) get(16);
    }

    /**
     * Setter for <code>security.security_plan.FOR_CLIENT_ID</code>. Client ID
     * for which this plan is applicable
     */
    public SecurityPlanRecord setForClientId(ULong value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>security.security_plan.FOR_CLIENT_ID</code>. Client ID
     * for which this plan is applicable
     */
    public ULong getForClientId() {
        return (ULong) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SecurityPlanRecord
     */
    public SecurityPlanRecord() {
        super(SecurityPlan.SECURITY_PLAN);
    }

    /**
     * Create a detached, initialised SecurityPlanRecord
     */
    public SecurityPlanRecord(ULong id, ULong clientId, ULong appId, String name, String description, Byte prepaid, String features, SecurityPlanStatus status, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt, ULong fallBackPlanId, String planCode, Byte forRegistration, Integer orderNumber, Byte defaultPlan, ULong forClientId) {
        super(SecurityPlan.SECURITY_PLAN);

        setId(id);
        setClientId(clientId);
        setAppId(appId);
        setName(name);
        setDescription(description);
        setPrepaid(prepaid);
        setFeatures(features);
        setStatus(status);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        setFallBackPlanId(fallBackPlanId);
        setPlanCode(planCode);
        setForRegistration(forRegistration);
        setOrderNumber(orderNumber);
        setDefaultPlan(defaultPlan);
        setForClientId(forClientId);
        resetTouchedOnNotNull();
    }
}
