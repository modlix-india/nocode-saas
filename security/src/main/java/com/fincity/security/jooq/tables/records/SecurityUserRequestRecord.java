/*
 * This file is generated by jOOQ.
 */
package com.fincity.security.jooq.tables.records;


import com.fincity.security.jooq.enums.SecurityUserRequestStatus;
import com.fincity.security.jooq.tables.SecurityUserRequest;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SecurityUserRequestRecord extends UpdatableRecordImpl<SecurityUserRequestRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>security.security_user_request.ID</code>. Primary key
     */
    public SecurityUserRequestRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_request.ID</code>. Primary key
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>security.security_user_request.REQUEST_ID</code>.
     * Request id for the user request
     */
    public SecurityUserRequestRecord setRequestId(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_request.REQUEST_ID</code>.
     * Request id for the user request
     */
    public String getRequestId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>security.security_user_request.CLIENT_ID</code>. Client
     * id for the user request
     */
    public SecurityUserRequestRecord setClientId(ULong value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_request.CLIENT_ID</code>. Client
     * id for the user request
     */
    public ULong getClientId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>security.security_user_request.USER_ID</code>. User id
     * for the user request
     */
    public SecurityUserRequestRecord setUserId(ULong value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_request.USER_ID</code>. User id
     * for the user request
     */
    public ULong getUserId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>security.security_user_request.APP_ID</code>. App id for
     * the user request
     */
    public SecurityUserRequestRecord setAppId(ULong value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_request.APP_ID</code>. App id for
     * the user request
     */
    public ULong getAppId() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>security.security_user_request.STATUS</code>. Status of
     * the user request
     */
    public SecurityUserRequestRecord setStatus(SecurityUserRequestStatus value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_request.STATUS</code>. Status of
     * the user request
     */
    public SecurityUserRequestStatus getStatus() {
        return (SecurityUserRequestStatus) get(5);
    }

    /**
     * Setter for <code>security.security_user_request.CREATED_BY</code>. ID of
     * the user who created this row
     */
    public SecurityUserRequestRecord setCreatedBy(ULong value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_request.CREATED_BY</code>. ID of
     * the user who created this row
     */
    public ULong getCreatedBy() {
        return (ULong) get(6);
    }

    /**
     * Setter for <code>security.security_user_request.CREATED_AT</code>. Time
     * when this row is created
     */
    public SecurityUserRequestRecord setCreatedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_request.CREATED_AT</code>. Time
     * when this row is created
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>security.security_user_request.UPDATED_BY</code>. ID of
     * the user who last updated this row
     */
    public SecurityUserRequestRecord setUpdatedBy(ULong value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_request.UPDATED_BY</code>. ID of
     * the user who last updated this row
     */
    public ULong getUpdatedBy() {
        return (ULong) get(8);
    }

    /**
     * Setter for <code>security.security_user_request.UPDATED_AT</code>. Time
     * when this row is last updated
     */
    public SecurityUserRequestRecord setUpdatedAt(LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_request.UPDATED_AT</code>. Time
     * when this row is last updated
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SecurityUserRequestRecord
     */
    public SecurityUserRequestRecord() {
        super(SecurityUserRequest.SECURITY_USER_REQUEST);
    }

    /**
     * Create a detached, initialised SecurityUserRequestRecord
     */
    public SecurityUserRequestRecord(ULong id, String requestId, ULong clientId, ULong userId, ULong appId, SecurityUserRequestStatus status, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(SecurityUserRequest.SECURITY_USER_REQUEST);

        setId(id);
        setRequestId(requestId);
        setClientId(clientId);
        setUserId(userId);
        setAppId(appId);
        setStatus(status);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
