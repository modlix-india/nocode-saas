/*
 * This file is generated by jOOQ.
 */
package com.fincity.security.jooq.tables.records;


import com.fincity.security.jooq.enums.SecurityAppRegAccessLevel;
import com.fincity.security.jooq.tables.SecurityAppRegAccess;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SecurityAppRegAccessRecord extends UpdatableRecordImpl<SecurityAppRegAccessRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>security.security_app_reg_access.ID</code>. Primary key
     */
    public SecurityAppRegAccessRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>security.security_app_reg_access.ID</code>. Primary key
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>security.security_app_reg_access.CLIENT_ID</code>.
     * Client ID
     */
    public SecurityAppRegAccessRecord setClientId(ULong value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>security.security_app_reg_access.CLIENT_ID</code>.
     * Client ID
     */
    public ULong getClientId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>security.security_app_reg_access.CLIENT_TYPE</code>.
     * Client type
     */
    public SecurityAppRegAccessRecord setClientType(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>security.security_app_reg_access.CLIENT_TYPE</code>.
     * Client type
     */
    public String getClientType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>security.security_app_reg_access.APP_ID</code>. App ID
     */
    public SecurityAppRegAccessRecord setAppId(ULong value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>security.security_app_reg_access.APP_ID</code>. App ID
     */
    public ULong getAppId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>security.security_app_reg_access.ALLOW_APP_ID</code>.
     * App ID of the dependent app
     */
    public SecurityAppRegAccessRecord setAllowAppId(ULong value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>security.security_app_reg_access.ALLOW_APP_ID</code>.
     * App ID of the dependent app
     */
    public ULong getAllowAppId() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>security.security_app_reg_access.WRITE_ACCESS</code>.
     */
    public SecurityAppRegAccessRecord setWriteAccess(Byte value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>security.security_app_reg_access.WRITE_ACCESS</code>.
     */
    public Byte getWriteAccess() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>security.security_app_reg_access.LEVEL</code>. Access
     * level
     */
    public SecurityAppRegAccessRecord setLevel(SecurityAppRegAccessLevel value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>security.security_app_reg_access.LEVEL</code>. Access
     * level
     */
    public SecurityAppRegAccessLevel getLevel() {
        return (SecurityAppRegAccessLevel) get(6);
    }

    /**
     * Setter for <code>security.security_app_reg_access.BUSINESS_TYPE</code>.
     * Business type
     */
    public SecurityAppRegAccessRecord setBusinessType(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>security.security_app_reg_access.BUSINESS_TYPE</code>.
     * Business type
     */
    public String getBusinessType() {
        return (String) get(7);
    }

    /**
     * Setter for <code>security.security_app_reg_access.CREATED_BY</code>. ID
     * of the user who created this row
     */
    public SecurityAppRegAccessRecord setCreatedBy(ULong value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>security.security_app_reg_access.CREATED_BY</code>. ID
     * of the user who created this row
     */
    public ULong getCreatedBy() {
        return (ULong) get(8);
    }

    /**
     * Setter for <code>security.security_app_reg_access.CREATED_AT</code>. Time
     * when this row is created
     */
    public SecurityAppRegAccessRecord setCreatedAt(LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>security.security_app_reg_access.CREATED_AT</code>. Time
     * when this row is created
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SecurityAppRegAccessRecord
     */
    public SecurityAppRegAccessRecord() {
        super(SecurityAppRegAccess.SECURITY_APP_REG_ACCESS);
    }

    /**
     * Create a detached, initialised SecurityAppRegAccessRecord
     */
    public SecurityAppRegAccessRecord(ULong id, ULong clientId, String clientType, ULong appId, ULong allowAppId, Byte writeAccess, SecurityAppRegAccessLevel level, String businessType, ULong createdBy, LocalDateTime createdAt) {
        super(SecurityAppRegAccess.SECURITY_APP_REG_ACCESS);

        setId(id);
        setClientId(clientId);
        setClientType(clientType);
        setAppId(appId);
        setAllowAppId(allowAppId);
        setWriteAccess(writeAccess);
        setLevel(level);
        setBusinessType(businessType);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        resetTouchedOnNotNull();
    }
}
