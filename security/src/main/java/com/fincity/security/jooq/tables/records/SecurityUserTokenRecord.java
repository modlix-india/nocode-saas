/*
 * This file is generated by jOOQ.
 */
package com.fincity.security.jooq.tables.records;


import com.fincity.security.jooq.tables.SecurityUserToken;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SecurityUserTokenRecord extends UpdatableRecordImpl<SecurityUserTokenRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>security.security_user_token.ID</code>. Primary key
     */
    public SecurityUserTokenRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_token.ID</code>. Primary key
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>security.security_user_token.USER_ID</code>. User id
     */
    public SecurityUserTokenRecord setUserId(ULong value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_token.USER_ID</code>. User id
     */
    public ULong getUserId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>security.security_user_token.TOKEN</code>. JWT token
     */
    public SecurityUserTokenRecord setToken(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_token.TOKEN</code>. JWT token
     */
    public String getToken() {
        return (String) get(2);
    }

    /**
     * Setter for <code>security.security_user_token.PART_TOKEN</code>. Part of
     * token to index
     */
    public SecurityUserTokenRecord setPartToken(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_token.PART_TOKEN</code>. Part of
     * token to index
     */
    public String getPartToken() {
        return (String) get(3);
    }

    /**
     * Setter for <code>security.security_user_token.EXPIRES_AT</code>. When the
     * token expires
     */
    public SecurityUserTokenRecord setExpiresAt(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_token.EXPIRES_AT</code>. When the
     * token expires
     */
    public LocalDateTime getExpiresAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>security.security_user_token.IP_ADDRESS</code>. User IP
     * from where he logged in
     */
    public SecurityUserTokenRecord setIpAddress(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_token.IP_ADDRESS</code>. User IP
     * from where he logged in
     */
    public String getIpAddress() {
        return (String) get(5);
    }

    /**
     * Setter for <code>security.security_user_token.CREATED_BY</code>. ID of
     * the user who created this row
     */
    public SecurityUserTokenRecord setCreatedBy(ULong value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_token.CREATED_BY</code>. ID of
     * the user who created this row
     */
    public ULong getCreatedBy() {
        return (ULong) get(6);
    }

    /**
     * Setter for <code>security.security_user_token.CREATED_AT</code>. Time
     * when this row is created
     */
    public SecurityUserTokenRecord setCreatedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>security.security_user_token.CREATED_AT</code>. Time
     * when this row is created
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SecurityUserTokenRecord
     */
    public SecurityUserTokenRecord() {
        super(SecurityUserToken.SECURITY_USER_TOKEN);
    }

    /**
     * Create a detached, initialised SecurityUserTokenRecord
     */
    public SecurityUserTokenRecord(ULong id, ULong userId, String token, String partToken, LocalDateTime expiresAt, String ipAddress, ULong createdBy, LocalDateTime createdAt) {
        super(SecurityUserToken.SECURITY_USER_TOKEN);

        setId(id);
        setUserId(userId);
        setToken(token);
        setPartToken(partToken);
        setExpiresAt(expiresAt);
        setIpAddress(ipAddress);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        resetTouchedOnNotNull();
    }
}
