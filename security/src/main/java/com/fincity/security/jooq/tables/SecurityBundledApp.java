/*
 * This file is generated by jOOQ.
 */
package com.fincity.security.jooq.tables;


import com.fincity.security.jooq.Keys;
import com.fincity.security.jooq.Security;
import com.fincity.security.jooq.tables.SecurityApp.SecurityAppPath;
import com.fincity.security.jooq.tables.SecurityAppSsoBundle.SecurityAppSsoBundlePath;
import com.fincity.security.jooq.tables.SecurityClientUrl.SecurityClientUrlPath;
import com.fincity.security.jooq.tables.records.SecurityBundledAppRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.InverseForeignKey;
import org.jooq.Name;
import org.jooq.Path;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.Record;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SecurityBundledApp extends TableImpl<SecurityBundledAppRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>security.security_bundled_app</code>
     */
    public static final SecurityBundledApp SECURITY_BUNDLED_APP = new SecurityBundledApp();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SecurityBundledAppRecord> getRecordType() {
        return SecurityBundledAppRecord.class;
    }

    /**
     * The column <code>security.security_bundled_app.ID</code>. Primary key
     */
    public final TableField<SecurityBundledAppRecord, ULong> ID = createField(DSL.name("ID"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "Primary key");

    /**
     * The column <code>security.security_bundled_app.BUNDLE_ID</code>. Bundle
     * ID
     */
    public final TableField<SecurityBundledAppRecord, ULong> BUNDLE_ID = createField(DSL.name("BUNDLE_ID"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "Bundle ID");

    /**
     * The column <code>security.security_bundled_app.APP_CODE</code>.
     * Application Code
     */
    public final TableField<SecurityBundledAppRecord, String> APP_CODE = createField(DSL.name("APP_CODE"), SQLDataType.CHAR(64).nullable(false), this, "Application Code");

    /**
     * The column <code>security.security_bundled_app.APP_URL_ID</code>.
     * Application URL ID
     */
    public final TableField<SecurityBundledAppRecord, ULong> APP_URL_ID = createField(DSL.name("APP_URL_ID"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "Application URL ID");

    /**
     * The column <code>security.security_bundled_app.CREATED_BY</code>. ID of
     * the user who created this row
     */
    public final TableField<SecurityBundledAppRecord, ULong> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.BIGINTUNSIGNED, this, "ID of the user who created this row");

    /**
     * The column <code>security.security_bundled_app.CREATED_AT</code>. Time
     * when this row is created
     */
    public final TableField<SecurityBundledAppRecord, LocalDateTime> CREATED_AT = createField(DSL.name("CREATED_AT"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field(DSL.raw("CURRENT_TIMESTAMP"), SQLDataType.LOCALDATETIME)), this, "Time when this row is created");

    private SecurityBundledApp(Name alias, Table<SecurityBundledAppRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private SecurityBundledApp(Name alias, Table<SecurityBundledAppRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table(), where);
    }

    /**
     * Create an aliased <code>security.security_bundled_app</code> table
     * reference
     */
    public SecurityBundledApp(String alias) {
        this(DSL.name(alias), SECURITY_BUNDLED_APP);
    }

    /**
     * Create an aliased <code>security.security_bundled_app</code> table
     * reference
     */
    public SecurityBundledApp(Name alias) {
        this(alias, SECURITY_BUNDLED_APP);
    }

    /**
     * Create a <code>security.security_bundled_app</code> table reference
     */
    public SecurityBundledApp() {
        this(DSL.name("security_bundled_app"), null);
    }

    public <O extends Record> SecurityBundledApp(Table<O> path, ForeignKey<O, SecurityBundledAppRecord> childPath, InverseForeignKey<O, SecurityBundledAppRecord> parentPath) {
        super(path, childPath, parentPath, SECURITY_BUNDLED_APP);
    }

    /**
     * A subtype implementing {@link Path} for simplified path-based joins.
     */
    public static class SecurityBundledAppPath extends SecurityBundledApp implements Path<SecurityBundledAppRecord> {

        private static final long serialVersionUID = 1L;
        public <O extends Record> SecurityBundledAppPath(Table<O> path, ForeignKey<O, SecurityBundledAppRecord> childPath, InverseForeignKey<O, SecurityBundledAppRecord> parentPath) {
            super(path, childPath, parentPath);
        }
        private SecurityBundledAppPath(Name alias, Table<SecurityBundledAppRecord> aliased) {
            super(alias, aliased);
        }

        @Override
        public SecurityBundledAppPath as(String alias) {
            return new SecurityBundledAppPath(DSL.name(alias), this);
        }

        @Override
        public SecurityBundledAppPath as(Name alias) {
            return new SecurityBundledAppPath(alias, this);
        }

        @Override
        public SecurityBundledAppPath as(Table<?> alias) {
            return new SecurityBundledAppPath(alias.getQualifiedName(), this);
        }
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : Security.SECURITY;
    }

    @Override
    public Identity<SecurityBundledAppRecord, ULong> getIdentity() {
        return (Identity<SecurityBundledAppRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<SecurityBundledAppRecord> getPrimaryKey() {
        return Keys.KEY_SECURITY_BUNDLED_APP_PRIMARY;
    }

    @Override
    public List<UniqueKey<SecurityBundledAppRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_SECURITY_BUNDLED_APP_UK1_APP_BUNDLE_APP);
    }

    @Override
    public List<ForeignKey<SecurityBundledAppRecord, ?>> getReferences() {
        return Arrays.asList(Keys.FK1_BUNDLED_APP_APP_CODE, Keys.FK1_BUNDLED_APP_BUNDLE_ID, Keys.FK1_BUNDLED_APP_URL_ID);
    }

    private transient SecurityAppPath _securityApp;

    /**
     * Get the implicit join path to the <code>security.security_app</code>
     * table.
     */
    public SecurityAppPath securityApp() {
        if (_securityApp == null)
            _securityApp = new SecurityAppPath(this, Keys.FK1_BUNDLED_APP_APP_CODE, null);

        return _securityApp;
    }

    private transient SecurityAppSsoBundlePath _securityAppSsoBundle;

    /**
     * Get the implicit join path to the
     * <code>security.security_app_sso_bundle</code> table.
     */
    public SecurityAppSsoBundlePath securityAppSsoBundle() {
        if (_securityAppSsoBundle == null)
            _securityAppSsoBundle = new SecurityAppSsoBundlePath(this, Keys.FK1_BUNDLED_APP_BUNDLE_ID, null);

        return _securityAppSsoBundle;
    }

    private transient SecurityClientUrlPath _securityClientUrl;

    /**
     * Get the implicit join path to the
     * <code>security.security_client_url</code> table.
     */
    public SecurityClientUrlPath securityClientUrl() {
        if (_securityClientUrl == null)
            _securityClientUrl = new SecurityClientUrlPath(this, Keys.FK1_BUNDLED_APP_URL_ID, null);

        return _securityClientUrl;
    }

    @Override
    public SecurityBundledApp as(String alias) {
        return new SecurityBundledApp(DSL.name(alias), this);
    }

    @Override
    public SecurityBundledApp as(Name alias) {
        return new SecurityBundledApp(alias, this);
    }

    @Override
    public SecurityBundledApp as(Table<?> alias) {
        return new SecurityBundledApp(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public SecurityBundledApp rename(String name) {
        return new SecurityBundledApp(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SecurityBundledApp rename(Name name) {
        return new SecurityBundledApp(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public SecurityBundledApp rename(Table<?> name) {
        return new SecurityBundledApp(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public SecurityBundledApp where(Condition condition) {
        return new SecurityBundledApp(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public SecurityBundledApp where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public SecurityBundledApp where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public SecurityBundledApp where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public SecurityBundledApp where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public SecurityBundledApp where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public SecurityBundledApp where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public SecurityBundledApp where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public SecurityBundledApp whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public SecurityBundledApp whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
