/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.message.jooq.tables.records;


import com.fincity.saas.message.jooq.tables.MessageMessageWebhooks;

import java.time.LocalDateTime;
import java.util.Map;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class MessageMessageWebhooksRecord extends UpdatableRecordImpl<MessageMessageWebhooksRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>message.message_message_webhooks.ID</code>. Primary key.
     */
    public MessageMessageWebhooksRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>message.message_message_webhooks.ID</code>. Primary key.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>message.message_message_webhooks.APP_CODE</code>. App
     * Code related to this message.
     */
    public MessageMessageWebhooksRecord setAppCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>message.message_message_webhooks.APP_CODE</code>. App
     * Code related to this message.
     */
    public String getAppCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>message.message_message_webhooks.CLIENT_CODE</code>.
     * Client Code related to this message.
     */
    public MessageMessageWebhooksRecord setClientCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>message.message_message_webhooks.CLIENT_CODE</code>.
     * Client Code related to this message.
     */
    public String getClientCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>message.message_message_webhooks.USER_ID</code>. ID of
     * the user associated with this message.
     */
    public MessageMessageWebhooksRecord setUserId(ULong value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>message.message_message_webhooks.USER_ID</code>. ID of
     * the user associated with this message.
     */
    public ULong getUserId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>message.message_message_webhooks.CODE</code>. Unique
     * Code to identify this row.
     */
    public MessageMessageWebhooksRecord setCode(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>message.message_message_webhooks.CODE</code>. Unique
     * Code to identify this row.
     */
    public String getCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>message.message_message_webhooks.PROVIDER</code>.
     * Provider of the message.
     */
    public MessageMessageWebhooksRecord setProvider(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>message.message_message_webhooks.PROVIDER</code>.
     * Provider of the message.
     */
    public String getProvider() {
        return (String) get(5);
    }

    /**
     * Setter for <code>message.message_message_webhooks.IS_PROCESSED</code>.
     * Flag to check if this message has been processed or not.
     */
    public MessageMessageWebhooksRecord setIsProcessed(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>message.message_message_webhooks.IS_PROCESSED</code>.
     * Flag to check if this message has been processed or not.
     */
    public Boolean getIsProcessed() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>message.message_message_webhooks.EVENT</code>. Message
     * Content
     */
    public MessageMessageWebhooksRecord setEvent(Map value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>message.message_message_webhooks.EVENT</code>. Message
     * Content
     */
    public Map getEvent() {
        return (Map) get(7);
    }

    /**
     * Setter for <code>message.message_message_webhooks.IS_ACTIVE</code>. Flag
     * to check if this message is active or not.
     */
    public MessageMessageWebhooksRecord setIsActive(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>message.message_message_webhooks.IS_ACTIVE</code>. Flag
     * to check if this message is active or not.
     */
    public Boolean getIsActive() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>message.message_message_webhooks.CREATED_BY</code>. ID
     * of the user who created this row.
     */
    public MessageMessageWebhooksRecord setCreatedBy(ULong value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>message.message_message_webhooks.CREATED_BY</code>. ID
     * of the user who created this row.
     */
    public ULong getCreatedBy() {
        return (ULong) get(9);
    }

    /**
     * Setter for <code>message.message_message_webhooks.CREATED_AT</code>. Time
     * when this record was created.
     */
    public MessageMessageWebhooksRecord setCreatedAt(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>message.message_message_webhooks.CREATED_AT</code>. Time
     * when this record was created.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>message.message_message_webhooks.UPDATED_BY</code>. ID
     * of the user who updated this row.
     */
    public MessageMessageWebhooksRecord setUpdatedBy(ULong value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>message.message_message_webhooks.UPDATED_BY</code>. ID
     * of the user who updated this row.
     */
    public ULong getUpdatedBy() {
        return (ULong) get(11);
    }

    /**
     * Setter for <code>message.message_message_webhooks.UPDATED_AT</code>. Time
     * when this record was last updated.
     */
    public MessageMessageWebhooksRecord setUpdatedAt(LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>message.message_message_webhooks.UPDATED_AT</code>. Time
     * when this record was last updated.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageMessageWebhooksRecord
     */
    public MessageMessageWebhooksRecord() {
        super(MessageMessageWebhooks.MESSAGE_MESSAGE_WEBHOOKS);
    }

    /**
     * Create a detached, initialised MessageMessageWebhooksRecord
     */
    public MessageMessageWebhooksRecord(ULong id, String appCode, String clientCode, ULong userId, String code, String provider, Boolean isProcessed, Map event, Boolean isActive, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(MessageMessageWebhooks.MESSAGE_MESSAGE_WEBHOOKS);

        setId(id);
        setAppCode(appCode);
        setClientCode(clientCode);
        setUserId(userId);
        setCode(code);
        setProvider(provider);
        setIsProcessed(isProcessed);
        setEvent(event);
        setIsActive(isActive);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
