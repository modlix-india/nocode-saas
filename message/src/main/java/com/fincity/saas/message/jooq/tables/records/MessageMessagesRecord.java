/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.message.jooq.tables.records;


import com.fincity.saas.message.enums.message.provider.whatsapp.cloud.MessageStatus;
import com.fincity.saas.message.jooq.tables.MessageMessages;

import java.time.LocalDateTime;
import java.util.Map;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class MessageMessagesRecord extends UpdatableRecordImpl<MessageMessagesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>message.message_messages.ID</code>. Primary key.
     */
    public MessageMessagesRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.ID</code>. Primary key.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>message.message_messages.APP_CODE</code>. App Code
     * related to this message.
     */
    public MessageMessagesRecord setAppCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.APP_CODE</code>. App Code
     * related to this message.
     */
    public String getAppCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>message.message_messages.CLIENT_CODE</code>. Client Code
     * related to this message.
     */
    public MessageMessagesRecord setClientCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.CLIENT_CODE</code>. Client Code
     * related to this message.
     */
    public String getClientCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>message.message_messages.USER_ID</code>. ID of the user
     * associated with this message.
     */
    public MessageMessagesRecord setUserId(ULong value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.USER_ID</code>. ID of the user
     * associated with this message.
     */
    public ULong getUserId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>message.message_messages.CODE</code>. Unique Code to
     * identify this row.
     */
    public MessageMessagesRecord setCode(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.CODE</code>. Unique Code to
     * identify this row.
     */
    public String getCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>message.message_messages.FROM_DIAL_CODE</code>. Dial
     * code of the sender's phone number.
     */
    public MessageMessagesRecord setFromDialCode(Short value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.FROM_DIAL_CODE</code>. Dial
     * code of the sender's phone number.
     */
    public Short getFromDialCode() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>message.message_messages.FROM_PHONE</code>. Phone number
     * of the sender.
     */
    public MessageMessagesRecord setFromPhone(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.FROM_PHONE</code>. Phone number
     * of the sender.
     */
    public String getFromPhone() {
        return (String) get(6);
    }

    /**
     * Setter for <code>message.message_messages.TO_DIAL_CODE</code>. Dial code
     * of the recipient's phone number.
     */
    public MessageMessagesRecord setToDialCode(Short value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.TO_DIAL_CODE</code>. Dial code
     * of the recipient's phone number.
     */
    public Short getToDialCode() {
        return (Short) get(7);
    }

    /**
     * Setter for <code>message.message_messages.TO_PHONE</code>. Phone number
     * of the recipient.
     */
    public MessageMessagesRecord setToPhone(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.TO_PHONE</code>. Phone number
     * of the recipient.
     */
    public String getToPhone() {
        return (String) get(8);
    }

    /**
     * Setter for <code>message.message_messages.CONNECTION_NAME</code>. Name of
     * the connection used for the message.
     */
    public MessageMessagesRecord setConnectionName(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.CONNECTION_NAME</code>. Name of
     * the connection used for the message.
     */
    public String getConnectionName() {
        return (String) get(9);
    }

    /**
     * Setter for <code>message.message_messages.MESSAGE_PROVIDER</code>. Name
     * of the message provider (e.g., WhatsApp or similar).
     */
    public MessageMessagesRecord setMessageProvider(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.MESSAGE_PROVIDER</code>. Name
     * of the message provider (e.g., WhatsApp or similar).
     */
    public String getMessageProvider() {
        return (String) get(10);
    }

    /**
     * Setter for <code>message.message_messages.IS_OUTBOUND</code>. Indicates
     * whether the message is outbound.
     */
    public MessageMessagesRecord setIsOutbound(Byte value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.IS_OUTBOUND</code>. Indicates
     * whether the message is outbound.
     */
    public Byte getIsOutbound() {
        return (Byte) get(11);
    }

    /**
     * Setter for <code>message.message_messages.MESSAGE_STATUS</code>. Status
     * of the message.
     */
    public MessageMessagesRecord setMessageStatus(MessageStatus value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.MESSAGE_STATUS</code>. Status
     * of the message.
     */
    public MessageStatus getMessageStatus() {
        return (MessageStatus) get(12);
    }

    /**
     * Setter for <code>message.message_messages.SENT_TIME</code>. Timestamp
     * when the message was sent.
     */
    public MessageMessagesRecord setSentTime(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.SENT_TIME</code>. Timestamp
     * when the message was sent.
     */
    public LocalDateTime getSentTime() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for <code>message.message_messages.DELIVERED_TIME</code>.
     * Timestamp when the message was delivered.
     */
    public MessageMessagesRecord setDeliveredTime(LocalDateTime value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.DELIVERED_TIME</code>.
     * Timestamp when the message was delivered.
     */
    public LocalDateTime getDeliveredTime() {
        return (LocalDateTime) get(14);
    }

    /**
     * Setter for <code>message.message_messages.READ_TIME</code>. Timestamp
     * when the message was read.
     */
    public MessageMessagesRecord setReadTime(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.READ_TIME</code>. Timestamp
     * when the message was read.
     */
    public LocalDateTime getReadTime() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>message.message_messages.WHATSAPP_MESSAGE_ID</code>. ID
     * of the associated WhatsApp message.
     */
    public MessageMessagesRecord setWhatsappMessageId(ULong value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.WHATSAPP_MESSAGE_ID</code>. ID
     * of the associated WhatsApp message.
     */
    public ULong getWhatsappMessageId() {
        return (ULong) get(16);
    }

    /**
     * Setter for <code>message.message_messages.METADATA</code>. Additional
     * metadata related to the message.
     */
    public MessageMessagesRecord setMetadata(Map value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.METADATA</code>. Additional
     * metadata related to the message.
     */
    public Map getMetadata() {
        return (Map) get(17);
    }

    /**
     * Setter for <code>message.message_messages.IS_ACTIVE</code>. Flag to check
     * if this message is active or not.
     */
    public MessageMessagesRecord setIsActive(Byte value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.IS_ACTIVE</code>. Flag to check
     * if this message is active or not.
     */
    public Byte getIsActive() {
        return (Byte) get(18);
    }

    /**
     * Setter for <code>message.message_messages.CREATED_BY</code>. ID of the
     * user who created this row.
     */
    public MessageMessagesRecord setCreatedBy(ULong value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.CREATED_BY</code>. ID of the
     * user who created this row.
     */
    public ULong getCreatedBy() {
        return (ULong) get(19);
    }

    /**
     * Setter for <code>message.message_messages.CREATED_AT</code>. Time when
     * this record was created.
     */
    public MessageMessagesRecord setCreatedAt(LocalDateTime value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.CREATED_AT</code>. Time when
     * this record was created.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(20);
    }

    /**
     * Setter for <code>message.message_messages.UPDATED_BY</code>. ID of the
     * user who updated this row.
     */
    public MessageMessagesRecord setUpdatedBy(ULong value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.UPDATED_BY</code>. ID of the
     * user who updated this row.
     */
    public ULong getUpdatedBy() {
        return (ULong) get(21);
    }

    /**
     * Setter for <code>message.message_messages.UPDATED_AT</code>. Time when
     * this record was last updated.
     */
    public MessageMessagesRecord setUpdatedAt(LocalDateTime value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>message.message_messages.UPDATED_AT</code>. Time when
     * this record was last updated.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(22);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageMessagesRecord
     */
    public MessageMessagesRecord() {
        super(MessageMessages.MESSAGE_MESSAGES);
    }

    /**
     * Create a detached, initialised MessageMessagesRecord
     */
    public MessageMessagesRecord(ULong id, String appCode, String clientCode, ULong userId, String code, Short fromDialCode, String fromPhone, Short toDialCode, String toPhone, String connectionName, String messageProvider, Byte isOutbound, MessageStatus messageStatus, LocalDateTime sentTime, LocalDateTime deliveredTime, LocalDateTime readTime, ULong whatsappMessageId, Map metadata, Byte isActive, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(MessageMessages.MESSAGE_MESSAGES);

        setId(id);
        setAppCode(appCode);
        setClientCode(clientCode);
        setUserId(userId);
        setCode(code);
        setFromDialCode(fromDialCode);
        setFromPhone(fromPhone);
        setToDialCode(toDialCode);
        setToPhone(toPhone);
        setConnectionName(connectionName);
        setMessageProvider(messageProvider);
        setIsOutbound(isOutbound);
        setMessageStatus(messageStatus);
        setSentTime(sentTime);
        setDeliveredTime(deliveredTime);
        setReadTime(readTime);
        setWhatsappMessageId(whatsappMessageId);
        setMetadata(metadata);
        setIsActive(isActive);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
