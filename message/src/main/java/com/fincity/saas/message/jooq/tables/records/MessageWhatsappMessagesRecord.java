/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.message.jooq.tables.records;


import com.fincity.saas.message.enums.message.provider.whatsapp.cloud.MessageStatus;
import com.fincity.saas.message.enums.message.provider.whatsapp.cloud.MessageType;
import com.fincity.saas.message.jooq.tables.MessageWhatsappMessages;
import com.fincity.saas.message.model.message.whatsapp.messages.Message;
import com.fincity.saas.message.model.message.whatsapp.messages.response.MessageResponse;
import com.fincity.saas.message.model.message.whatsapp.webhook.IMessage;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class MessageWhatsappMessagesRecord extends UpdatableRecordImpl<MessageWhatsappMessagesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>message.message_whatsapp_messages.ID</code>. Primary
     * key.
     */
    public MessageWhatsappMessagesRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.ID</code>. Primary
     * key.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.APP_CODE</code>. App
     * Code related to this WhatsApp message.
     */
    public MessageWhatsappMessagesRecord setAppCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.APP_CODE</code>. App
     * Code related to this WhatsApp message.
     */
    public String getAppCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.CLIENT_CODE</code>.
     * Client Code related to this WhatsApp message.
     */
    public MessageWhatsappMessagesRecord setClientCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.CLIENT_CODE</code>.
     * Client Code related to this WhatsApp message.
     */
    public String getClientCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.USER_ID</code>. ID of
     * the user associated with this WhatsApp message.
     */
    public MessageWhatsappMessagesRecord setUserId(ULong value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.USER_ID</code>. ID of
     * the user associated with this WhatsApp message.
     */
    public ULong getUserId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.CODE</code>. Unique
     * Code to identify this row.
     */
    public MessageWhatsappMessagesRecord setCode(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.CODE</code>. Unique
     * Code to identify this row.
     */
    public String getCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.MESSAGE_ID</code>.
     * WhatsApp message ID.
     */
    public MessageWhatsappMessagesRecord setMessageId(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.MESSAGE_ID</code>.
     * WhatsApp message ID.
     */
    public String getMessageId() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_messages.WHATSAPP_PHONE_NUMBER_ID</code>.
     * ID of the associated Business phone number.
     */
    public MessageWhatsappMessagesRecord setWhatsappPhoneNumberId(ULong value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_messages.WHATSAPP_PHONE_NUMBER_ID</code>.
     * ID of the associated Business phone number.
     */
    public ULong getWhatsappPhoneNumberId() {
        return (ULong) get(6);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.FROM_DIAL_CODE</code>.
     * Dial code of the sender's phone number.
     */
    public MessageWhatsappMessagesRecord setFromDialCode(Short value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.FROM_DIAL_CODE</code>.
     * Dial code of the sender's phone number.
     */
    public Short getFromDialCode() {
        return (Short) get(7);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.FROM</code>. Phone
     * number of the sender.
     */
    public MessageWhatsappMessagesRecord setFrom(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.FROM</code>. Phone
     * number of the sender.
     */
    public String getFrom() {
        return (String) get(8);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.TO_DIAL_CODE</code>.
     * Dial code of the recipient's phone number.
     */
    public MessageWhatsappMessagesRecord setToDialCode(Short value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.TO_DIAL_CODE</code>.
     * Dial code of the recipient's phone number.
     */
    public Short getToDialCode() {
        return (Short) get(9);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.TO</code>. Phone
     * number of the recipient.
     */
    public MessageWhatsappMessagesRecord setTo(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.TO</code>. Phone
     * number of the recipient.
     */
    public String getTo() {
        return (String) get(10);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.CUSTOMER_WA_ID</code>.
     * Customer Whatsapp ID
     */
    public MessageWhatsappMessagesRecord setCustomerWaId(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.CUSTOMER_WA_ID</code>.
     * Customer Whatsapp ID
     */
    public String getCustomerWaId() {
        return (String) get(11);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_messages.CUSTOMER_DIAL_CODE</code>. Dial
     * code of the customer phone number.
     */
    public MessageWhatsappMessagesRecord setCustomerDialCode(Short value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_messages.CUSTOMER_DIAL_CODE</code>. Dial
     * code of the customer phone number.
     */
    public Short getCustomerDialCode() {
        return (Short) get(12);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_messages.CUSTOMER_PHONE_NUMBER</code>.
     * Phone number of the customer.
     */
    public MessageWhatsappMessagesRecord setCustomerPhoneNumber(String value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_messages.CUSTOMER_PHONE_NUMBER</code>.
     * Phone number of the customer.
     */
    public String getCustomerPhoneNumber() {
        return (String) get(13);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.MESSAGE_TYPE</code>.
     * Type of the message (TEXT, IMAGE, VIDEO, etc.).
     */
    public MessageWhatsappMessagesRecord setMessageType(MessageType value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.MESSAGE_TYPE</code>.
     * Type of the message (TEXT, IMAGE, VIDEO, etc.).
     */
    public MessageType getMessageType() {
        return (MessageType) get(14);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.MESSAGE_STATUS</code>.
     * Status of the message.
     */
    public MessageWhatsappMessagesRecord setMessageStatus(MessageStatus value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.MESSAGE_STATUS</code>.
     * Status of the message.
     */
    public MessageStatus getMessageStatus() {
        return (MessageStatus) get(15);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.SENT_TIME</code>.
     * Timestamp when the message was sent.
     */
    public MessageWhatsappMessagesRecord setSentTime(LocalDateTime value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.SENT_TIME</code>.
     * Timestamp when the message was sent.
     */
    public LocalDateTime getSentTime() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.DELIVERED_TIME</code>.
     * Timestamp when the message was delivered.
     */
    public MessageWhatsappMessagesRecord setDeliveredTime(LocalDateTime value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.DELIVERED_TIME</code>.
     * Timestamp when the message was delivered.
     */
    public LocalDateTime getDeliveredTime() {
        return (LocalDateTime) get(17);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.READ_TIME</code>.
     * Timestamp when the message was read.
     */
    public MessageWhatsappMessagesRecord setReadTime(LocalDateTime value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.READ_TIME</code>.
     * Timestamp when the message was read.
     */
    public LocalDateTime getReadTime() {
        return (LocalDateTime) get(18);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.FAILED_TIME</code>.
     * Timestamp when the message failed.
     */
    public MessageWhatsappMessagesRecord setFailedTime(LocalDateTime value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.FAILED_TIME</code>.
     * Timestamp when the message failed.
     */
    public LocalDateTime getFailedTime() {
        return (LocalDateTime) get(19);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.FAILURE_REASON</code>.
     * Reason for message failure.
     */
    public MessageWhatsappMessagesRecord setFailureReason(String value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.FAILURE_REASON</code>.
     * Reason for message failure.
     */
    public String getFailureReason() {
        return (String) get(20);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.IS_OUTBOUND</code>.
     * Indicates whether the message is outbound.
     */
    public MessageWhatsappMessagesRecord setIsOutbound(Byte value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.IS_OUTBOUND</code>.
     * Indicates whether the message is outbound.
     */
    public Byte getIsOutbound() {
        return (Byte) get(21);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.MESSAGE</code>. Entire
     * Message object send by WhatsApp.
     */
    public MessageWhatsappMessagesRecord setMessage(Message value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.MESSAGE</code>. Entire
     * Message object send by WhatsApp.
     */
    public Message getMessage() {
        return (Message) get(22);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.IN_MESSAGE</code>.
     * Inbound message object
     */
    public MessageWhatsappMessagesRecord setInMessage(IMessage value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.IN_MESSAGE</code>.
     * Inbound message object
     */
    public IMessage getInMessage() {
        return (IMessage) get(23);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_messages.MESSAGE_RESPONSE</code>. Entire
     * Message Response object send by WhatsApp.
     */
    public MessageWhatsappMessagesRecord setMessageResponse(MessageResponse value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_messages.MESSAGE_RESPONSE</code>. Entire
     * Message Response object send by WhatsApp.
     */
    public MessageResponse getMessageResponse() {
        return (MessageResponse) get(24);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.IS_ACTIVE</code>. Flag
     * to check if this message is active or not.
     */
    public MessageWhatsappMessagesRecord setIsActive(Byte value) {
        set(25, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.IS_ACTIVE</code>. Flag
     * to check if this message is active or not.
     */
    public Byte getIsActive() {
        return (Byte) get(25);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.CREATED_BY</code>. ID
     * of the user who created this row.
     */
    public MessageWhatsappMessagesRecord setCreatedBy(ULong value) {
        set(26, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.CREATED_BY</code>. ID
     * of the user who created this row.
     */
    public ULong getCreatedBy() {
        return (ULong) get(26);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.CREATED_AT</code>.
     * Time when this record was created.
     */
    public MessageWhatsappMessagesRecord setCreatedAt(LocalDateTime value) {
        set(27, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.CREATED_AT</code>.
     * Time when this record was created.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(27);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.UPDATED_BY</code>. ID
     * of the user who updated this row.
     */
    public MessageWhatsappMessagesRecord setUpdatedBy(ULong value) {
        set(28, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.UPDATED_BY</code>. ID
     * of the user who updated this row.
     */
    public ULong getUpdatedBy() {
        return (ULong) get(28);
    }

    /**
     * Setter for <code>message.message_whatsapp_messages.UPDATED_AT</code>.
     * Time when this record was last updated.
     */
    public MessageWhatsappMessagesRecord setUpdatedAt(LocalDateTime value) {
        set(29, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_messages.UPDATED_AT</code>.
     * Time when this record was last updated.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(29);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageWhatsappMessagesRecord
     */
    public MessageWhatsappMessagesRecord() {
        super(MessageWhatsappMessages.MESSAGE_WHATSAPP_MESSAGES);
    }

    /**
     * Create a detached, initialised MessageWhatsappMessagesRecord
     */
    public MessageWhatsappMessagesRecord(ULong id, String appCode, String clientCode, ULong userId, String code, String messageId, ULong whatsappPhoneNumberId, Short fromDialCode, String from, Short toDialCode, String to, String customerWaId, Short customerDialCode, String customerPhoneNumber, MessageType messageType, MessageStatus messageStatus, LocalDateTime sentTime, LocalDateTime deliveredTime, LocalDateTime readTime, LocalDateTime failedTime, String failureReason, Byte isOutbound, Message message, IMessage inMessage, MessageResponse messageResponse, Byte isActive, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(MessageWhatsappMessages.MESSAGE_WHATSAPP_MESSAGES);

        setId(id);
        setAppCode(appCode);
        setClientCode(clientCode);
        setUserId(userId);
        setCode(code);
        setMessageId(messageId);
        setWhatsappPhoneNumberId(whatsappPhoneNumberId);
        setFromDialCode(fromDialCode);
        setFrom(from);
        setToDialCode(toDialCode);
        setTo(to);
        setCustomerWaId(customerWaId);
        setCustomerDialCode(customerDialCode);
        setCustomerPhoneNumber(customerPhoneNumber);
        setMessageType(messageType);
        setMessageStatus(messageStatus);
        setSentTime(sentTime);
        setDeliveredTime(deliveredTime);
        setReadTime(readTime);
        setFailedTime(failedTime);
        setFailureReason(failureReason);
        setIsOutbound(isOutbound);
        setMessage(message);
        setInMessage(inMessage);
        setMessageResponse(messageResponse);
        setIsActive(isActive);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
