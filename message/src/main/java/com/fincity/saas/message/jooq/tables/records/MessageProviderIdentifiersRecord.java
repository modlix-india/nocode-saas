/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.message.jooq.tables.records;


import com.fincity.saas.message.jooq.tables.MessageProviderIdentifiers;
import com.fincity.saas.message.oserver.core.enums.ConnectionSubType;
import com.fincity.saas.message.oserver.core.enums.ConnectionType;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class MessageProviderIdentifiersRecord extends UpdatableRecordImpl<MessageProviderIdentifiersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>message.message_provider_identifiers.ID</code>. Primary
     * key.
     */
    public MessageProviderIdentifiersRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>message.message_provider_identifiers.ID</code>. Primary
     * key.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>message.message_provider_identifiers.APP_CODE</code>.
     * App Code related to this message.
     */
    public MessageProviderIdentifiersRecord setAppCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>message.message_provider_identifiers.APP_CODE</code>.
     * App Code related to this message.
     */
    public String getAppCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>message.message_provider_identifiers.CLIENT_CODE</code>.
     * Client Code related to this message.
     */
    public MessageProviderIdentifiersRecord setClientCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>message.message_provider_identifiers.CLIENT_CODE</code>.
     * Client Code related to this message.
     */
    public String getClientCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>message.message_provider_identifiers.CODE</code>. Unique
     * Code to identify this row.
     */
    public MessageProviderIdentifiersRecord setCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>message.message_provider_identifiers.CODE</code>. Unique
     * Code to identify this row.
     */
    public String getCode() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>message.message_provider_identifiers.CONNECTION_TYPE</code>.
     * Connection type for this Identifier
     */
    public MessageProviderIdentifiersRecord setConnectionType(ConnectionType value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_provider_identifiers.CONNECTION_TYPE</code>.
     * Connection type for this Identifier
     */
    public ConnectionType getConnectionType() {
        return (ConnectionType) get(4);
    }

    /**
     * Setter for
     * <code>message.message_provider_identifiers.CONNECTION_SUB_TYPE</code>.
     * Connection Sub type for this Identifier
     */
    public MessageProviderIdentifiersRecord setConnectionSubType(ConnectionSubType value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_provider_identifiers.CONNECTION_SUB_TYPE</code>.
     * Connection Sub type for this Identifier
     */
    public ConnectionSubType getConnectionSubType() {
        return (ConnectionSubType) get(5);
    }

    /**
     * Setter for <code>message.message_provider_identifiers.IDENTIFIER</code>.
     * Identifier for this connection and connection sub type for the client.
     */
    public MessageProviderIdentifiersRecord setIdentifier(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>message.message_provider_identifiers.IDENTIFIER</code>.
     * Identifier for this connection and connection sub type for the client.
     */
    public String getIdentifier() {
        return (String) get(6);
    }

    /**
     * Setter for <code>message.message_provider_identifiers.IS_DEFAULT</code>.
     * Flag to check if this message is active or not.
     */
    public MessageProviderIdentifiersRecord setIsDefault(Byte value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>message.message_provider_identifiers.IS_DEFAULT</code>.
     * Flag to check if this message is active or not.
     */
    public Byte getIsDefault() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>message.message_provider_identifiers.IS_ACTIVE</code>.
     * Flag to check if this message is active or not.
     */
    public MessageProviderIdentifiersRecord setIsActive(Byte value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>message.message_provider_identifiers.IS_ACTIVE</code>.
     * Flag to check if this message is active or not.
     */
    public Byte getIsActive() {
        return (Byte) get(8);
    }

    /**
     * Setter for <code>message.message_provider_identifiers.CREATED_BY</code>.
     * ID of the user who created this row.
     */
    public MessageProviderIdentifiersRecord setCreatedBy(ULong value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>message.message_provider_identifiers.CREATED_BY</code>.
     * ID of the user who created this row.
     */
    public ULong getCreatedBy() {
        return (ULong) get(9);
    }

    /**
     * Setter for <code>message.message_provider_identifiers.CREATED_AT</code>.
     * Time when this record was created.
     */
    public MessageProviderIdentifiersRecord setCreatedAt(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>message.message_provider_identifiers.CREATED_AT</code>.
     * Time when this record was created.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>message.message_provider_identifiers.UPDATED_BY</code>.
     * ID of the user who updated this row.
     */
    public MessageProviderIdentifiersRecord setUpdatedBy(ULong value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>message.message_provider_identifiers.UPDATED_BY</code>.
     * ID of the user who updated this row.
     */
    public ULong getUpdatedBy() {
        return (ULong) get(11);
    }

    /**
     * Setter for <code>message.message_provider_identifiers.UPDATED_AT</code>.
     * Time when this record was last updated.
     */
    public MessageProviderIdentifiersRecord setUpdatedAt(LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>message.message_provider_identifiers.UPDATED_AT</code>.
     * Time when this record was last updated.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageProviderIdentifiersRecord
     */
    public MessageProviderIdentifiersRecord() {
        super(MessageProviderIdentifiers.MESSAGE_PROVIDER_IDENTIFIERS);
    }

    /**
     * Create a detached, initialised MessageProviderIdentifiersRecord
     */
    public MessageProviderIdentifiersRecord(ULong id, String appCode, String clientCode, String code, ConnectionType connectionType, ConnectionSubType connectionSubType, String identifier, Byte isDefault, Byte isActive, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(MessageProviderIdentifiers.MESSAGE_PROVIDER_IDENTIFIERS);

        setId(id);
        setAppCode(appCode);
        setClientCode(clientCode);
        setCode(code);
        setConnectionType(connectionType);
        setConnectionSubType(connectionSubType);
        setIdentifier(identifier);
        setIsDefault(isDefault);
        setIsActive(isActive);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
