/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.message.jooq.tables.records;


import com.fincity.saas.message.enums.message.provider.whatsapp.business.phone.type.CodeVerificationStatus;
import com.fincity.saas.message.enums.message.provider.whatsapp.business.phone.type.MessagingLimitTier;
import com.fincity.saas.message.enums.message.provider.whatsapp.business.phone.type.NameStatusType;
import com.fincity.saas.message.enums.message.provider.whatsapp.business.phone.type.PlatformType;
import com.fincity.saas.message.enums.message.provider.whatsapp.business.phone.type.QualityRatingType;
import com.fincity.saas.message.enums.message.provider.whatsapp.business.phone.type.Status;
import com.fincity.saas.message.jooq.tables.MessageWhatsappPhoneNumbers;
import com.fincity.saas.message.model.message.whatsapp.business.WebhookConfig;
import com.fincity.saas.message.model.message.whatsapp.phone.QualityScore;
import com.fincity.saas.message.model.message.whatsapp.phone.Throughput;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * WhatsApp Business phone numbers
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class MessageWhatsappPhoneNumbersRecord extends UpdatableRecordImpl<MessageWhatsappPhoneNumbersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>message.message_whatsapp_phone_numbers.ID</code>.
     * Primary key.
     */
    public MessageWhatsappPhoneNumbersRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_phone_numbers.ID</code>.
     * Primary key.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>message.message_whatsapp_phone_numbers.APP_CODE</code>.
     * App Code related to this WhatsApp phone number.
     */
    public MessageWhatsappPhoneNumbersRecord setAppCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_phone_numbers.APP_CODE</code>.
     * App Code related to this WhatsApp phone number.
     */
    public String getAppCode() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.CLIENT_CODE</code>. Client
     * Code related to this WhatsApp phone number.
     */
    public MessageWhatsappPhoneNumbersRecord setClientCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.CLIENT_CODE</code>. Client
     * Code related to this WhatsApp phone number.
     */
    public String getClientCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>message.message_whatsapp_phone_numbers.USER_ID</code>.
     * ID of the user associated with this WhatsApp phone number.
     */
    public MessageWhatsappPhoneNumbersRecord setUserId(ULong value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_phone_numbers.USER_ID</code>.
     * ID of the user associated with this WhatsApp phone number.
     */
    public ULong getUserId() {
        return (ULong) get(3);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.PRODUCT_ID</code>. Entity
     * Processor Product Id
     */
    public MessageWhatsappPhoneNumbersRecord setProductId(ULong value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.PRODUCT_ID</code>. Entity
     * Processor Product Id
     */
    public ULong getProductId() {
        return (ULong) get(4);
    }

    /**
     * Setter for <code>message.message_whatsapp_phone_numbers.CODE</code>.
     * Unique Code to identify this row.
     */
    public MessageWhatsappPhoneNumbersRecord setCode(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_phone_numbers.CODE</code>.
     * Unique Code to identify this row.
     */
    public String getCode() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.WHATSAPP_BUSINESS_ACCOUNT_ID</code>.
     * WhatsApp Business Account ID.
     */
    public MessageWhatsappPhoneNumbersRecord setWhatsappBusinessAccountId(ULong value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.WHATSAPP_BUSINESS_ACCOUNT_ID</code>.
     * WhatsApp Business Account ID.
     */
    public ULong getWhatsappBusinessAccountId() {
        return (ULong) get(6);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.DISPLAY_PHONE_NUMBER</code>.
     * Display phone number for WhatsApp Business.
     */
    public MessageWhatsappPhoneNumbersRecord setDisplayPhoneNumber(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.DISPLAY_PHONE_NUMBER</code>.
     * Display phone number for WhatsApp Business.
     */
    public String getDisplayPhoneNumber() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.QUALITY_RATING</code>.
     * Quality rating of the phone number.
     */
    public MessageWhatsappPhoneNumbersRecord setQualityRating(QualityRatingType value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.QUALITY_RATING</code>.
     * Quality rating of the phone number.
     */
    public QualityRatingType getQualityRating() {
        return (QualityRatingType) get(8);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.QUALITY_SCORE</code>.
     * Quality Score of Whatsapp Phone Number
     */
    public MessageWhatsappPhoneNumbersRecord setQualityScore(QualityScore value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.QUALITY_SCORE</code>.
     * Quality Score of Whatsapp Phone Number
     */
    public QualityScore getQualityScore() {
        return (QualityScore) get(9);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.VERIFIED_NAME</code>.
     * Verified name associated with the phone number.
     */
    public MessageWhatsappPhoneNumbersRecord setVerifiedName(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.VERIFIED_NAME</code>.
     * Verified name associated with the phone number.
     */
    public String getVerifiedName() {
        return (String) get(10);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.PHONE_NUMBER_ID</code>.
     * WhatsApp phone number ID from Meta.
     */
    public MessageWhatsappPhoneNumbersRecord setPhoneNumberId(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.PHONE_NUMBER_ID</code>.
     * WhatsApp phone number ID from Meta.
     */
    public String getPhoneNumberId() {
        return (String) get(11);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.CODE_VERIFICATION_STATUS</code>.
     * Status of code verification.
     */
    public MessageWhatsappPhoneNumbersRecord setCodeVerificationStatus(CodeVerificationStatus value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.CODE_VERIFICATION_STATUS</code>.
     * Status of code verification.
     */
    public CodeVerificationStatus getCodeVerificationStatus() {
        return (CodeVerificationStatus) get(12);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.NAME_STATUS</code>. Status
     * of the verified name.
     */
    public MessageWhatsappPhoneNumbersRecord setNameStatus(NameStatusType value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.NAME_STATUS</code>. Status
     * of the verified name.
     */
    public NameStatusType getNameStatus() {
        return (NameStatusType) get(13);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.PLATFORM_TYPE</code>.
     * Platform type for WhatsApp Business.
     */
    public MessageWhatsappPhoneNumbersRecord setPlatformType(PlatformType value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.PLATFORM_TYPE</code>.
     * Platform type for WhatsApp Business.
     */
    public PlatformType getPlatformType() {
        return (PlatformType) get(14);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.THROUGHPUT</code>.
     * Throughput of Whatsapp Phone Number
     */
    public MessageWhatsappPhoneNumbersRecord setThroughput(Throughput value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.THROUGHPUT</code>.
     * Throughput of Whatsapp Phone Number
     */
    public Throughput getThroughput() {
        return (Throughput) get(15);
    }

    /**
     * Setter for <code>message.message_whatsapp_phone_numbers.STATUS</code>.
     * Status of the Whatsapp Phone Number
     */
    public MessageWhatsappPhoneNumbersRecord setStatus(Status value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_phone_numbers.STATUS</code>.
     * Status of the Whatsapp Phone Number
     */
    public Status getStatus() {
        return (Status) get(16);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.MESSAGING_LIMIT_TIER</code>.
     * Messaging Limit Tier
     */
    public MessageWhatsappPhoneNumbersRecord setMessagingLimitTier(MessagingLimitTier value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.MESSAGING_LIMIT_TIER</code>.
     * Messaging Limit Tier
     */
    public MessagingLimitTier getMessagingLimitTier() {
        return (MessagingLimitTier) get(17);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.WEBHOOK_CONFIG</code>. Phone
     * Number webhook config
     */
    public MessageWhatsappPhoneNumbersRecord setWebhookConfig(WebhookConfig value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.WEBHOOK_CONFIG</code>. Phone
     * Number webhook config
     */
    public WebhookConfig getWebhookConfig() {
        return (WebhookConfig) get(18);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.IS_DEFAULT</code>. Flag to
     * indicate if this is the default phone number.
     */
    public MessageWhatsappPhoneNumbersRecord setIsDefault(Boolean value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.IS_DEFAULT</code>. Flag to
     * indicate if this is the default phone number.
     */
    public Boolean getIsDefault() {
        return (Boolean) get(19);
    }

    /**
     * Setter for <code>message.message_whatsapp_phone_numbers.IS_ACTIVE</code>.
     * Flag to check if this phone number is active or not.
     */
    public MessageWhatsappPhoneNumbersRecord setIsActive(Boolean value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>message.message_whatsapp_phone_numbers.IS_ACTIVE</code>.
     * Flag to check if this phone number is active or not.
     */
    public Boolean getIsActive() {
        return (Boolean) get(20);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.CREATED_BY</code>. ID of the
     * user who created this row.
     */
    public MessageWhatsappPhoneNumbersRecord setCreatedBy(ULong value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.CREATED_BY</code>. ID of the
     * user who created this row.
     */
    public ULong getCreatedBy() {
        return (ULong) get(21);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.CREATED_AT</code>. Time when
     * this record was created.
     */
    public MessageWhatsappPhoneNumbersRecord setCreatedAt(LocalDateTime value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.CREATED_AT</code>. Time when
     * this record was created.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(22);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.UPDATED_BY</code>. ID of the
     * user who updated this row.
     */
    public MessageWhatsappPhoneNumbersRecord setUpdatedBy(ULong value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.UPDATED_BY</code>. ID of the
     * user who updated this row.
     */
    public ULong getUpdatedBy() {
        return (ULong) get(23);
    }

    /**
     * Setter for
     * <code>message.message_whatsapp_phone_numbers.UPDATED_AT</code>. Time when
     * this record was last updated.
     */
    public MessageWhatsappPhoneNumbersRecord setUpdatedAt(LocalDateTime value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_whatsapp_phone_numbers.UPDATED_AT</code>. Time when
     * this record was last updated.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(24);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageWhatsappPhoneNumbersRecord
     */
    public MessageWhatsappPhoneNumbersRecord() {
        super(MessageWhatsappPhoneNumbers.MESSAGE_WHATSAPP_PHONE_NUMBERS);
    }

    /**
     * Create a detached, initialised MessageWhatsappPhoneNumbersRecord
     */
    public MessageWhatsappPhoneNumbersRecord(ULong id, String appCode, String clientCode, ULong userId, ULong productId, String code, ULong whatsappBusinessAccountId, String displayPhoneNumber, QualityRatingType qualityRating, QualityScore qualityScore, String verifiedName, String phoneNumberId, CodeVerificationStatus codeVerificationStatus, NameStatusType nameStatus, PlatformType platformType, Throughput throughput, Status status, MessagingLimitTier messagingLimitTier, WebhookConfig webhookConfig, Boolean isDefault, Boolean isActive, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(MessageWhatsappPhoneNumbers.MESSAGE_WHATSAPP_PHONE_NUMBERS);

        setId(id);
        setAppCode(appCode);
        setClientCode(clientCode);
        setUserId(userId);
        setProductId(productId);
        setCode(code);
        setWhatsappBusinessAccountId(whatsappBusinessAccountId);
        setDisplayPhoneNumber(displayPhoneNumber);
        setQualityRating(qualityRating);
        setQualityScore(qualityScore);
        setVerifiedName(verifiedName);
        setPhoneNumberId(phoneNumberId);
        setCodeVerificationStatus(codeVerificationStatus);
        setNameStatus(nameStatus);
        setPlatformType(platformType);
        setThroughput(throughput);
        setStatus(status);
        setMessagingLimitTier(messagingLimitTier);
        setWebhookConfig(webhookConfig);
        setIsDefault(isDefault);
        setIsActive(isActive);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
