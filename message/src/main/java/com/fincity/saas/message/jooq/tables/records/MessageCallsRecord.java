/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.message.jooq.tables.records;


import com.fincity.saas.message.enums.call.CallStatus;
import com.fincity.saas.message.jooq.tables.MessageCalls;

import java.time.LocalDateTime;
import java.util.Map;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class MessageCallsRecord extends UpdatableRecordImpl<MessageCallsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>message.message_calls.ID</code>. Primary key.
     */
    public MessageCallsRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.ID</code>. Primary key.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>message.message_calls.APP_CODE</code>. App Code related
     * to this Call.
     */
    public MessageCallsRecord setAppCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.APP_CODE</code>. App Code related
     * to this Call.
     */
    public String getAppCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>message.message_calls.CLIENT_CODE</code>. Client Code
     * related to this Call.
     */
    public MessageCallsRecord setClientCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.CLIENT_CODE</code>. Client Code
     * related to this Call.
     */
    public String getClientCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>message.message_calls.USER_ID</code>. ID of the user
     * associated with this Call.
     */
    public MessageCallsRecord setUserId(ULong value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.USER_ID</code>. ID of the user
     * associated with this Call.
     */
    public ULong getUserId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>message.message_calls.CODE</code>. Unique Code to
     * identify this row.
     */
    public MessageCallsRecord setCode(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.CODE</code>. Unique Code to
     * identify this row.
     */
    public String getCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>message.message_calls.FROM_DIAL_CODE</code>. Dial code
     * of the caller's phone number.
     */
    public MessageCallsRecord setFromDialCode(Short value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.FROM_DIAL_CODE</code>. Dial code
     * of the caller's phone number.
     */
    public Short getFromDialCode() {
        return (Short) get(5);
    }

    /**
     * Setter for <code>message.message_calls.FROM_PHONE</code>. Phone number of
     * the caller.
     */
    public MessageCallsRecord setFromPhone(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.FROM_PHONE</code>. Phone number of
     * the caller.
     */
    public String getFromPhone() {
        return (String) get(6);
    }

    /**
     * Setter for <code>message.message_calls.TO_DIAL_CODE</code>. Dial code of
     * the receiver's phone number.
     */
    public MessageCallsRecord setToDialCode(Short value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.TO_DIAL_CODE</code>. Dial code of
     * the receiver's phone number.
     */
    public Short getToDialCode() {
        return (Short) get(7);
    }

    /**
     * Setter for <code>message.message_calls.TO_PHONE</code>. Phone number of
     * the receiver.
     */
    public MessageCallsRecord setToPhone(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.TO_PHONE</code>. Phone number of
     * the receiver.
     */
    public String getToPhone() {
        return (String) get(8);
    }

    /**
     * Setter for <code>message.message_calls.CALLER_ID</code>. Caller ID
     * configured for this call.
     */
    public MessageCallsRecord setCallerId(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.CALLER_ID</code>. Caller ID
     * configured for this call.
     */
    public String getCallerId() {
        return (String) get(9);
    }

    /**
     * Setter for <code>message.message_calls.CONNECTION_NAME</code>. Name of
     * the connection used for the call.
     */
    public MessageCallsRecord setConnectionName(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.CONNECTION_NAME</code>. Name of
     * the connection used for the call.
     */
    public String getConnectionName() {
        return (String) get(10);
    }

    /**
     * Setter for <code>message.message_calls.CALL_PROVIDER</code>. Name of the
     * call provider (e.g., Exotel or similar).
     */
    public MessageCallsRecord setCallProvider(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.CALL_PROVIDER</code>. Name of the
     * call provider (e.g., Exotel or similar).
     */
    public String getCallProvider() {
        return (String) get(11);
    }

    /**
     * Setter for <code>message.message_calls.IS_OUTBOUND</code>. Indicates
     * whether the call is outbound.
     */
    public MessageCallsRecord setIsOutbound(Byte value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.IS_OUTBOUND</code>. Indicates
     * whether the call is outbound.
     */
    public Byte getIsOutbound() {
        return (Byte) get(12);
    }

    /**
     * Setter for <code>message.message_calls.CALL_STATUS</code>. Status of the
     * call.
     */
    public MessageCallsRecord setCallStatus(CallStatus value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.CALL_STATUS</code>. Status of the
     * call.
     */
    public CallStatus getCallStatus() {
        return (CallStatus) get(13);
    }

    /**
     * Setter for <code>message.message_calls.START_TIME</code>. Timestamp when
     * the call started.
     */
    public MessageCallsRecord setStartTime(LocalDateTime value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.START_TIME</code>. Timestamp when
     * the call started.
     */
    public LocalDateTime getStartTime() {
        return (LocalDateTime) get(14);
    }

    /**
     * Setter for <code>message.message_calls.END_TIME</code>. Timestamp when
     * the call ended.
     */
    public MessageCallsRecord setEndTime(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.END_TIME</code>. Timestamp when
     * the call ended.
     */
    public LocalDateTime getEndTime() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>message.message_calls.DURATION</code>. Duration of the
     * call in seconds.
     */
    public MessageCallsRecord setDuration(Long value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.DURATION</code>. Duration of the
     * call in seconds.
     */
    public Long getDuration() {
        return (Long) get(16);
    }

    /**
     * Setter for <code>message.message_calls.RECORDING_URL</code>. URL of the
     * call recording.
     */
    public MessageCallsRecord setRecordingUrl(String value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.RECORDING_URL</code>. URL of the
     * call recording.
     */
    public String getRecordingUrl() {
        return (String) get(17);
    }

    /**
     * Setter for <code>message.message_calls.EXOTEL_CALL_ID</code>. ID of the
     * associated Exotel call.
     */
    public MessageCallsRecord setExotelCallId(ULong value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.EXOTEL_CALL_ID</code>. ID of the
     * associated Exotel call.
     */
    public ULong getExotelCallId() {
        return (ULong) get(18);
    }

    /**
     * Setter for <code>message.message_calls.METADATA</code>. Additional
     * metadata related to the call.
     */
    public MessageCallsRecord setMetadata(Map value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.METADATA</code>. Additional
     * metadata related to the call.
     */
    public Map getMetadata() {
        return (Map) get(19);
    }

    /**
     * Setter for <code>message.message_calls.IS_ACTIVE</code>. Flag to check if
     * this Call is active or not.
     */
    public MessageCallsRecord setIsActive(Byte value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.IS_ACTIVE</code>. Flag to check if
     * this Call is active or not.
     */
    public Byte getIsActive() {
        return (Byte) get(20);
    }

    /**
     * Setter for <code>message.message_calls.CREATED_BY</code>. ID of the user
     * who created this row.
     */
    public MessageCallsRecord setCreatedBy(ULong value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.CREATED_BY</code>. ID of the user
     * who created this row.
     */
    public ULong getCreatedBy() {
        return (ULong) get(21);
    }

    /**
     * Setter for <code>message.message_calls.CREATED_AT</code>. Time when this
     * record was created.
     */
    public MessageCallsRecord setCreatedAt(LocalDateTime value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.CREATED_AT</code>. Time when this
     * record was created.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(22);
    }

    /**
     * Setter for <code>message.message_calls.UPDATED_BY</code>. ID of the user
     * who updated this row.
     */
    public MessageCallsRecord setUpdatedBy(ULong value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.UPDATED_BY</code>. ID of the user
     * who updated this row.
     */
    public ULong getUpdatedBy() {
        return (ULong) get(23);
    }

    /**
     * Setter for <code>message.message_calls.UPDATED_AT</code>. Time when this
     * record was last updated.
     */
    public MessageCallsRecord setUpdatedAt(LocalDateTime value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.UPDATED_AT</code>. Time when this
     * record was last updated.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(24);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageCallsRecord
     */
    public MessageCallsRecord() {
        super(MessageCalls.MESSAGE_CALLS);
    }

    /**
     * Create a detached, initialised MessageCallsRecord
     */
    public MessageCallsRecord(ULong id, String appCode, String clientCode, ULong userId, String code, Short fromDialCode, String fromPhone, Short toDialCode, String toPhone, String callerId, String connectionName, String callProvider, Byte isOutbound, CallStatus callStatus, LocalDateTime startTime, LocalDateTime endTime, Long duration, String recordingUrl, ULong exotelCallId, Map metadata, Byte isActive, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(MessageCalls.MESSAGE_CALLS);

        setId(id);
        setAppCode(appCode);
        setClientCode(clientCode);
        setUserId(userId);
        setCode(code);
        setFromDialCode(fromDialCode);
        setFromPhone(fromPhone);
        setToDialCode(toDialCode);
        setToPhone(toPhone);
        setCallerId(callerId);
        setConnectionName(connectionName);
        setCallProvider(callProvider);
        setIsOutbound(isOutbound);
        setCallStatus(callStatus);
        setStartTime(startTime);
        setEndTime(endTime);
        setDuration(duration);
        setRecordingUrl(recordingUrl);
        setExotelCallId(exotelCallId);
        setMetadata(metadata);
        setIsActive(isActive);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
