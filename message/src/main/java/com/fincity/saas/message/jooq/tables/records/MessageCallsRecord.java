/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.message.jooq.tables.records;


import com.fincity.saas.message.jooq.tables.MessageCalls;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class MessageCallsRecord extends UpdatableRecordImpl<MessageCallsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>message.message_calls.ID</code>. Primary key.
     */
    public MessageCallsRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.ID</code>. Primary key.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>message.message_calls.APP_CODE</code>. App Code related
     * to this Call.
     */
    public MessageCallsRecord setAppCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.APP_CODE</code>. App Code related
     * to this Call.
     */
    public String getAppCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>message.message_calls.CLIENT_CODE</code>. Client Code
     * related to this Call.
     */
    public MessageCallsRecord setClientCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.CLIENT_CODE</code>. Client Code
     * related to this Call.
     */
    public String getClientCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>message.message_calls.USER_ID</code>. ID of the user
     * associated with this Call.
     */
    public MessageCallsRecord setUserId(ULong value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.USER_ID</code>. ID of the user
     * associated with this Call.
     */
    public ULong getUserId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>message.message_calls.CODE</code>. Unique Code to
     * identify this row.
     */
    public MessageCallsRecord setCode(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.CODE</code>. Unique Code to
     * identify this row.
     */
    public String getCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>message.message_calls.CONNECTION_NAME</code>. Name of
     * the connection used for the call.
     */
    public MessageCallsRecord setConnectionName(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.CONNECTION_NAME</code>. Name of
     * the connection used for the call.
     */
    public String getConnectionName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>message.message_calls.CALL_PROVIDER</code>. Name of the
     * call provider (e.g., Exotel or similar).
     */
    public MessageCallsRecord setCallProvider(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.CALL_PROVIDER</code>. Name of the
     * call provider (e.g., Exotel or similar).
     */
    public String getCallProvider() {
        return (String) get(6);
    }

    /**
     * Setter for <code>message.message_calls.IS_OUTBOUND</code>. Indicates
     * whether the call is outbound.
     */
    public MessageCallsRecord setIsOutbound(Byte value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.IS_OUTBOUND</code>. Indicates
     * whether the call is outbound.
     */
    public Byte getIsOutbound() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>message.message_calls.EXOTEL_CALL_ID</code>. ID of the
     * associated Exotel call.
     */
    public MessageCallsRecord setExotelCallId(ULong value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.EXOTEL_CALL_ID</code>. ID of the
     * associated Exotel call.
     */
    public ULong getExotelCallId() {
        return (ULong) get(8);
    }

    /**
     * Setter for <code>message.message_calls.IS_ACTIVE</code>. Flag to check if
     * this Call is active or not.
     */
    public MessageCallsRecord setIsActive(Byte value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.IS_ACTIVE</code>. Flag to check if
     * this Call is active or not.
     */
    public Byte getIsActive() {
        return (Byte) get(9);
    }

    /**
     * Setter for <code>message.message_calls.CREATED_BY</code>. ID of the user
     * who created this row.
     */
    public MessageCallsRecord setCreatedBy(ULong value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.CREATED_BY</code>. ID of the user
     * who created this row.
     */
    public ULong getCreatedBy() {
        return (ULong) get(10);
    }

    /**
     * Setter for <code>message.message_calls.CREATED_AT</code>. Time when this
     * record was created.
     */
    public MessageCallsRecord setCreatedAt(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.CREATED_AT</code>. Time when this
     * record was created.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>message.message_calls.UPDATED_BY</code>. ID of the user
     * who updated this row.
     */
    public MessageCallsRecord setUpdatedBy(ULong value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.UPDATED_BY</code>. ID of the user
     * who updated this row.
     */
    public ULong getUpdatedBy() {
        return (ULong) get(12);
    }

    /**
     * Setter for <code>message.message_calls.UPDATED_AT</code>. Time when this
     * record was last updated.
     */
    public MessageCallsRecord setUpdatedAt(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>message.message_calls.UPDATED_AT</code>. Time when this
     * record was last updated.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageCallsRecord
     */
    public MessageCallsRecord() {
        super(MessageCalls.MESSAGE_CALLS);
    }

    /**
     * Create a detached, initialised MessageCallsRecord
     */
    public MessageCallsRecord(ULong id, String appCode, String clientCode, ULong userId, String code, String connectionName, String callProvider, Byte isOutbound, ULong exotelCallId, Byte isActive, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(MessageCalls.MESSAGE_CALLS);

        setId(id);
        setAppCode(appCode);
        setClientCode(clientCode);
        setUserId(userId);
        setCode(code);
        setConnectionName(connectionName);
        setCallProvider(callProvider);
        setIsOutbound(isOutbound);
        setExotelCallId(exotelCallId);
        setIsActive(isActive);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
