/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.message.jooq.tables.records;


import com.fincity.saas.message.enums.call.provider.exotel.ExotelCallStatus;
import com.fincity.saas.message.jooq.tables.MessageExotelCalls;
import com.fincity.saas.message.model.request.call.provider.exotel.ExotelCallRequest;
import com.fincity.saas.message.model.request.call.provider.exotel.ExotelConnectAppletRequest;
import com.fincity.saas.message.model.response.call.provider.exotel.ExotelCallResponse;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class MessageExotelCallsRecord extends UpdatableRecordImpl<MessageExotelCallsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>message.message_exotel_calls.ID</code>. Primary key.
     */
    public MessageExotelCallsRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.ID</code>. Primary key.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>message.message_exotel_calls.APP_CODE</code>. App Code
     * related to this Exotel Call.
     */
    public MessageExotelCallsRecord setAppCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.APP_CODE</code>. App Code
     * related to this Exotel Call.
     */
    public String getAppCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>message.message_exotel_calls.CLIENT_CODE</code>. Client
     * Code related to this Exotel Call.
     */
    public MessageExotelCallsRecord setClientCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.CLIENT_CODE</code>. Client
     * Code related to this Exotel Call.
     */
    public String getClientCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>message.message_exotel_calls.USER_ID</code>. ID of the
     * user associated with this Exotel Call.
     */
    public MessageExotelCallsRecord setUserId(ULong value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.USER_ID</code>. ID of the
     * user associated with this Exotel Call.
     */
    public ULong getUserId() {
        return (ULong) get(3);
    }

    /**
     * Setter for <code>message.message_exotel_calls.CODE</code>. Unique Code to
     * identify this row.
     */
    public MessageExotelCallsRecord setCode(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.CODE</code>. Unique Code to
     * identify this row.
     */
    public String getCode() {
        return (String) get(4);
    }

    /**
     * Setter for <code>message.message_exotel_calls.SID</code>. Unique
     * identifier for the call.
     */
    public MessageExotelCallsRecord setSid(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.SID</code>. Unique
     * identifier for the call.
     */
    public String getSid() {
        return (String) get(5);
    }

    /**
     * Setter for <code>message.message_exotel_calls.PARENT_CALL_SID</code>.
     * Identifier for the parent call, if it exists.
     */
    public MessageExotelCallsRecord setParentCallSid(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.PARENT_CALL_SID</code>.
     * Identifier for the parent call, if it exists.
     */
    public String getParentCallSid() {
        return (String) get(6);
    }

    /**
     * Setter for <code>message.message_exotel_calls.ACCOUNT_SID</code>. Exotel
     * account SID for this call.
     */
    public MessageExotelCallsRecord setAccountSid(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.ACCOUNT_SID</code>. Exotel
     * account SID for this call.
     */
    public String getAccountSid() {
        return (String) get(7);
    }

    /**
     * Setter for <code>message.message_exotel_calls.FROM_DIAL_CODE</code>. Dial
     * code of the caller's phone number.
     */
    public MessageExotelCallsRecord setFromDialCode(Short value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.FROM_DIAL_CODE</code>. Dial
     * code of the caller's phone number.
     */
    public Short getFromDialCode() {
        return (Short) get(8);
    }

    /**
     * Setter for <code>message.message_exotel_calls.FROM</code>. Phone number
     * of the caller.
     */
    public MessageExotelCallsRecord setFrom(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.FROM</code>. Phone number
     * of the caller.
     */
    public String getFrom() {
        return (String) get(9);
    }

    /**
     * Setter for <code>message.message_exotel_calls.TO_DIAL_CODE</code>. Dial
     * code of the receiver's phone number.
     */
    public MessageExotelCallsRecord setToDialCode(Short value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.TO_DIAL_CODE</code>. Dial
     * code of the receiver's phone number.
     */
    public Short getToDialCode() {
        return (Short) get(10);
    }

    /**
     * Setter for <code>message.message_exotel_calls.TO</code>. Phone number of
     * the receiver.
     */
    public MessageExotelCallsRecord setTo(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.TO</code>. Phone number of
     * the receiver.
     */
    public String getTo() {
        return (String) get(11);
    }

    /**
     * Setter for <code>message.message_exotel_calls.CALLER_ID</code>. Caller ID
     * configured in Exotel.
     */
    public MessageExotelCallsRecord setCallerId(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.CALLER_ID</code>. Caller ID
     * configured in Exotel.
     */
    public String getCallerId() {
        return (String) get(12);
    }

    /**
     * Setter for <code>message.message_exotel_calls.CUSTOMER_DIAL_CODE</code>.
     * Dial code of the customer phone number.
     */
    public MessageExotelCallsRecord setCustomerDialCode(Short value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.CUSTOMER_DIAL_CODE</code>.
     * Dial code of the customer phone number.
     */
    public Short getCustomerDialCode() {
        return (Short) get(13);
    }

    /**
     * Setter for
     * <code>message.message_exotel_calls.CUSTOMER_PHONE_NUMBER</code>. Phone
     * number of the customer.
     */
    public MessageExotelCallsRecord setCustomerPhoneNumber(String value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_exotel_calls.CUSTOMER_PHONE_NUMBER</code>. Phone
     * number of the customer.
     */
    public String getCustomerPhoneNumber() {
        return (String) get(14);
    }

    /**
     * Setter for <code>message.message_exotel_calls.EXOTEL_CALL_STATUS</code>.
     * Status of the call.
     */
    public MessageExotelCallsRecord setExotelCallStatus(ExotelCallStatus value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.EXOTEL_CALL_STATUS</code>.
     * Status of the call.
     */
    public ExotelCallStatus getExotelCallStatus() {
        return (ExotelCallStatus) get(15);
    }

    /**
     * Setter for <code>message.message_exotel_calls.START_TIME</code>.
     * Timestamp when the call was initiated.
     */
    public MessageExotelCallsRecord setStartTime(LocalDateTime value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.START_TIME</code>.
     * Timestamp when the call was initiated.
     */
    public LocalDateTime getStartTime() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for <code>message.message_exotel_calls.END_TIME</code>. Timestamp
     * when the call ended.
     */
    public MessageExotelCallsRecord setEndTime(LocalDateTime value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.END_TIME</code>. Timestamp
     * when the call ended.
     */
    public LocalDateTime getEndTime() {
        return (LocalDateTime) get(17);
    }

    /**
     * Setter for <code>message.message_exotel_calls.DURATION</code>. Duration
     * of the call in seconds.
     */
    public MessageExotelCallsRecord setDuration(Long value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.DURATION</code>. Duration
     * of the call in seconds.
     */
    public Long getDuration() {
        return (Long) get(18);
    }

    /**
     * Setter for <code>message.message_exotel_calls.PRICE</code>. Cost of the
     * call.
     */
    public MessageExotelCallsRecord setPrice(BigDecimal value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.PRICE</code>. Cost of the
     * call.
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(19);
    }

    /**
     * Setter for <code>message.message_exotel_calls.DIRECTION</code>. Direction
     * of the call (e.g., inbound or outbound).
     */
    public MessageExotelCallsRecord setDirection(String value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.DIRECTION</code>. Direction
     * of the call (e.g., inbound or outbound).
     */
    public String getDirection() {
        return (String) get(20);
    }

    /**
     * Setter for <code>message.message_exotel_calls.ANSWERED_BY</code>. Person
     * or system that answered the call.
     */
    public MessageExotelCallsRecord setAnsweredBy(String value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.ANSWERED_BY</code>. Person
     * or system that answered the call.
     */
    public String getAnsweredBy() {
        return (String) get(21);
    }

    /**
     * Setter for <code>message.message_exotel_calls.RECORDING_URL</code>. URL
     * of the call recording, if available.
     */
    public MessageExotelCallsRecord setRecordingUrl(String value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.RECORDING_URL</code>. URL
     * of the call recording, if available.
     */
    public String getRecordingUrl() {
        return (String) get(22);
    }

    /**
     * Setter for
     * <code>message.message_exotel_calls.CONVERSATION_DURATION</code>.
     * Conversation duration of the call in seconds.
     */
    public MessageExotelCallsRecord setConversationDuration(Long value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_exotel_calls.CONVERSATION_DURATION</code>.
     * Conversation duration of the call in seconds.
     */
    public Long getConversationDuration() {
        return (Long) get(23);
    }

    /**
     * Setter for <code>message.message_exotel_calls.LEG1_STATUS</code>. Status
     * of the first leg of the call.
     */
    public MessageExotelCallsRecord setLeg1Status(ExotelCallStatus value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.LEG1_STATUS</code>. Status
     * of the first leg of the call.
     */
    public ExotelCallStatus getLeg1Status() {
        return (ExotelCallStatus) get(24);
    }

    /**
     * Setter for <code>message.message_exotel_calls.LEG2_STATUS</code>. Status
     * of the second leg of the call.
     */
    public MessageExotelCallsRecord setLeg2Status(ExotelCallStatus value) {
        set(25, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.LEG2_STATUS</code>. Status
     * of the second leg of the call.
     */
    public ExotelCallStatus getLeg2Status() {
        return (ExotelCallStatus) get(25);
    }

    /**
     * Setter for <code>message.message_exotel_calls.EXOTEL_CALL_REQUEST</code>.
     * Entire Exotel Request object send to Exotel.
     */
    public MessageExotelCallsRecord setExotelCallRequest(ExotelCallRequest value) {
        set(26, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.EXOTEL_CALL_REQUEST</code>.
     * Entire Exotel Request object send to Exotel.
     */
    public ExotelCallRequest getExotelCallRequest() {
        return (ExotelCallRequest) get(26);
    }

    /**
     * Setter for
     * <code>message.message_exotel_calls.EXOTEL_CONNECT_APPLET_REQUEST</code>.
     * Entire Exotel Response object Received
     */
    public MessageExotelCallsRecord setExotelConnectAppletRequest(ExotelConnectAppletRequest value) {
        set(27, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_exotel_calls.EXOTEL_CONNECT_APPLET_REQUEST</code>.
     * Entire Exotel Response object Received
     */
    public ExotelConnectAppletRequest getExotelConnectAppletRequest() {
        return (ExotelConnectAppletRequest) get(27);
    }

    /**
     * Setter for
     * <code>message.message_exotel_calls.EXOTEL_CALL_RESPONSE</code>. Entire
     * Exotel Response object send by Exotel.
     */
    public MessageExotelCallsRecord setExotelCallResponse(ExotelCallResponse value) {
        set(28, value);
        return this;
    }

    /**
     * Getter for
     * <code>message.message_exotel_calls.EXOTEL_CALL_RESPONSE</code>. Entire
     * Exotel Response object send by Exotel.
     */
    public ExotelCallResponse getExotelCallResponse() {
        return (ExotelCallResponse) get(28);
    }

    /**
     * Setter for <code>message.message_exotel_calls.IS_ACTIVE</code>. Flag to
     * check if this call is active or not.
     */
    public MessageExotelCallsRecord setIsActive(Byte value) {
        set(29, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.IS_ACTIVE</code>. Flag to
     * check if this call is active or not.
     */
    public Byte getIsActive() {
        return (Byte) get(29);
    }

    /**
     * Setter for <code>message.message_exotel_calls.CREATED_BY</code>. ID of
     * the user who created this row.
     */
    public MessageExotelCallsRecord setCreatedBy(ULong value) {
        set(30, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.CREATED_BY</code>. ID of
     * the user who created this row.
     */
    public ULong getCreatedBy() {
        return (ULong) get(30);
    }

    /**
     * Setter for <code>message.message_exotel_calls.CREATED_AT</code>. Time
     * when this record was created.
     */
    public MessageExotelCallsRecord setCreatedAt(LocalDateTime value) {
        set(31, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.CREATED_AT</code>. Time
     * when this record was created.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(31);
    }

    /**
     * Setter for <code>message.message_exotel_calls.UPDATED_BY</code>. ID of
     * the user who updated this row.
     */
    public MessageExotelCallsRecord setUpdatedBy(ULong value) {
        set(32, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.UPDATED_BY</code>. ID of
     * the user who updated this row.
     */
    public ULong getUpdatedBy() {
        return (ULong) get(32);
    }

    /**
     * Setter for <code>message.message_exotel_calls.UPDATED_AT</code>. Time
     * when this record was last updated.
     */
    public MessageExotelCallsRecord setUpdatedAt(LocalDateTime value) {
        set(33, value);
        return this;
    }

    /**
     * Getter for <code>message.message_exotel_calls.UPDATED_AT</code>. Time
     * when this record was last updated.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(33);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageExotelCallsRecord
     */
    public MessageExotelCallsRecord() {
        super(MessageExotelCalls.MESSAGE_EXOTEL_CALLS);
    }

    /**
     * Create a detached, initialised MessageExotelCallsRecord
     */
    public MessageExotelCallsRecord(ULong id, String appCode, String clientCode, ULong userId, String code, String sid, String parentCallSid, String accountSid, Short fromDialCode, String from, Short toDialCode, String to, String callerId, Short customerDialCode, String customerPhoneNumber, ExotelCallStatus exotelCallStatus, LocalDateTime startTime, LocalDateTime endTime, Long duration, BigDecimal price, String direction, String answeredBy, String recordingUrl, Long conversationDuration, ExotelCallStatus leg1Status, ExotelCallStatus leg2Status, ExotelCallRequest exotelCallRequest, ExotelConnectAppletRequest exotelConnectAppletRequest, ExotelCallResponse exotelCallResponse, Byte isActive, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(MessageExotelCalls.MESSAGE_EXOTEL_CALLS);

        setId(id);
        setAppCode(appCode);
        setClientCode(clientCode);
        setUserId(userId);
        setCode(code);
        setSid(sid);
        setParentCallSid(parentCallSid);
        setAccountSid(accountSid);
        setFromDialCode(fromDialCode);
        setFrom(from);
        setToDialCode(toDialCode);
        setTo(to);
        setCallerId(callerId);
        setCustomerDialCode(customerDialCode);
        setCustomerPhoneNumber(customerPhoneNumber);
        setExotelCallStatus(exotelCallStatus);
        setStartTime(startTime);
        setEndTime(endTime);
        setDuration(duration);
        setPrice(price);
        setDirection(direction);
        setAnsweredBy(answeredBy);
        setRecordingUrl(recordingUrl);
        setConversationDuration(conversationDuration);
        setLeg1Status(leg1Status);
        setLeg2Status(leg2Status);
        setExotelCallRequest(exotelCallRequest);
        setExotelConnectAppletRequest(exotelConnectAppletRequest);
        setExotelCallResponse(exotelCallResponse);
        setIsActive(isActive);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
