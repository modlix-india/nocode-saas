/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.notification.jooq.tables.records;

import com.fincity.saas.notification.jooq.tables.NotificationInAppNotifications;
import com.fincity.saas.notification.model.message.channel.InAppMessage;
import java.time.LocalDateTime;
import java.util.Map;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes", "this-escape"})
public class NotificationInAppNotificationsRecord extends UpdatableRecordImpl<NotificationInAppNotificationsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.ID</code>. Primary
     * key
     */
    public NotificationInAppNotificationsRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.ID</code>. Primary
     * key
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.CODE</code>. Unique
     * Code to identify this row
     */
    public NotificationInAppNotificationsRecord setCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.CODE</code>. Unique
     * Code to identify this row
     */
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.APP_CODE</code>. App
     * Code on which this notification was sent. References security_app table
     */
    public NotificationInAppNotificationsRecord setAppCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.APP_CODE</code>. App
     * Code on which this notification was sent. References security_app table
     */
    public String getAppCode() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.CLIENT_CODE</code>.
     * Client Code to whom this notification we sent. References security_user
     * table
     */
    public NotificationInAppNotificationsRecord setClientCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.CLIENT_CODE</code>.
     * Client Code to whom this notification we sent. References security_user
     * table
     */
    public String getClientCode() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.USER_ID</code>.
     * Identifier for the user. References security_user table
     */
    public NotificationInAppNotificationsRecord setUserId(ULong value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.USER_ID</code>.
     * Identifier for the user. References security_user table
     */
    public ULong getUserId() {
        return (ULong) get(4);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.NOTIFICATION_TYPE</code>.
     * Type of notification that is sent
     */
    public NotificationInAppNotificationsRecord setNotificationType(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.NOTIFICATION_TYPE</code>.
     * Type of notification that is sent
     */
    public String getNotificationType() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.IN_APP_MESSAGE</code>.
     * In-App Notification message that is sent
     */
    public NotificationInAppNotificationsRecord setInAppMessage(InAppMessage value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.IN_APP_MESSAGE</code>.
     * In-App Notification message that is sent
     */
    public InAppMessage getInAppMessage() {
        return (InAppMessage) get(6);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.NOTIFICATION_STAGE</code>.
     * Stage of the notification that is sent
     */
    public NotificationInAppNotificationsRecord setNotificationStage(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.NOTIFICATION_STAGE</code>.
     * Stage of the notification that is sent
     */
    public String getNotificationStage() {
        return (String) get(7);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.NOTIFICATION_DELIVERY_STATUS</code>.
     * Current Delivery status of this notification message
     */
    public NotificationInAppNotificationsRecord setNotificationDeliveryStatus(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.NOTIFICATION_DELIVERY_STATUS</code>.
     * Current Delivery status of this notification message
     */
    public String getNotificationDeliveryStatus() {
        return (String) get(8);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.ACTIONS</code>.
     * Actions to be performed on this notification
     */
    public NotificationInAppNotificationsRecord setActions(Map value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.ACTIONS</code>.
     * Actions to be performed on this notification
     */
    public Map getActions() {
        return (Map) get(9);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.TRIGGER_TIME</code>.
     * Time when the notification was triggered
     */
    public NotificationInAppNotificationsRecord setTriggerTime(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.TRIGGER_TIME</code>.
     * Time when the notification was triggered
     */
    public LocalDateTime getTriggerTime() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.SENT</code>. Is this
     * notification is sent or not
     */
    public NotificationInAppNotificationsRecord setSent(Byte value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.SENT</code>. Is this
     * notification is sent or not
     */
    public Byte getSent() {
        return (Byte) get(11);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.SENT_TIME</code>.
     * Time when this notification was sent
     */
    public NotificationInAppNotificationsRecord setSentTime(LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.SENT_TIME</code>.
     * Time when this notification was sent
     */
    public LocalDateTime getSentTime() {
        return (LocalDateTime) get(12);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.DELIVERED</code>. Is
     * this notification is delivered or not
     */
    public NotificationInAppNotificationsRecord setDelivered(Byte value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.DELIVERED</code>. Is
     * this notification is delivered or not
     */
    public Byte getDelivered() {
        return (Byte) get(13);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.DELIVERED_TIME</code>.
     * Time when this notification was delivered to user
     */
    public NotificationInAppNotificationsRecord setDeliveredTime(LocalDateTime value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.DELIVERED_TIME</code>.
     * Time when this notification was delivered to user
     */
    public LocalDateTime getDeliveredTime() {
        return (LocalDateTime) get(14);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.READ</code>. Is this
     * notification is read or not
     */
    public NotificationInAppNotificationsRecord setRead(Byte value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.READ</code>. Is this
     * notification is read or not
     */
    public Byte getRead() {
        return (Byte) get(15);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.READ_TIME</code>.
     * Time when this notification was read by user
     */
    public NotificationInAppNotificationsRecord setReadTime(LocalDateTime value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.READ_TIME</code>.
     * Time when this notification was read by user
     */
    public LocalDateTime getReadTime() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.FAILED</code>. Is
     * this notification is failed or not
     */
    public NotificationInAppNotificationsRecord setFailed(Byte value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.FAILED</code>. Is
     * this notification is failed or not
     */
    public Byte getFailed() {
        return (Byte) get(17);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.FAILED_TIME</code>.
     * Time when this notification was failed
     */
    public NotificationInAppNotificationsRecord setFailedTime(LocalDateTime value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.FAILED_TIME</code>.
     * Time when this notification was failed
     */
    public LocalDateTime getFailedTime() {
        return (LocalDateTime) get(18);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.CREATED_BY</code>.
     * ID of the user who created this row
     */
    public NotificationInAppNotificationsRecord setCreatedBy(ULong value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.CREATED_BY</code>.
     * ID of the user who created this row
     */
    public ULong getCreatedBy() {
        return (ULong) get(19);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.CREATED_AT</code>.
     * Time when this row is created
     */
    public NotificationInAppNotificationsRecord setCreatedAt(LocalDateTime value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.CREATED_AT</code>.
     * Time when this row is created
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(20);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.UPDATED_BY</code>.
     * ID of the user who updated this row
     */
    public NotificationInAppNotificationsRecord setUpdatedBy(ULong value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.UPDATED_BY</code>.
     * ID of the user who updated this row
     */
    public ULong getUpdatedBy() {
        return (ULong) get(21);
    }

    /**
     * Setter for
     * <code>notification.notification_in_app_notifications.UPDATED_AT</code>.
     * Time when this row is updated
     */
    public NotificationInAppNotificationsRecord setUpdatedAt(LocalDateTime value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_in_app_notifications.UPDATED_AT</code>.
     * Time when this row is updated
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(22);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotificationInAppNotificationsRecord
     */
    public NotificationInAppNotificationsRecord() {
        super(NotificationInAppNotifications.NOTIFICATION_IN_APP_NOTIFICATIONS);
    }

    /**
     * Create a detached, initialised NotificationInAppNotificationsRecord
     */
    public NotificationInAppNotificationsRecord(
            ULong id,
            String code,
            String appCode,
            String clientCode,
            ULong userId,
            String notificationType,
            InAppMessage inAppMessage,
            String notificationStage,
            String notificationDeliveryStatus,
            Map actions,
            LocalDateTime triggerTime,
            Byte sent,
            LocalDateTime sentTime,
            Byte delivered,
            LocalDateTime deliveredTime,
            Byte read,
            LocalDateTime readTime,
            Byte failed,
            LocalDateTime failedTime,
            ULong createdBy,
            LocalDateTime createdAt,
            ULong updatedBy,
            LocalDateTime updatedAt) {
        super(NotificationInAppNotifications.NOTIFICATION_IN_APP_NOTIFICATIONS);

        setId(id);
        setCode(code);
        setAppCode(appCode);
        setClientCode(clientCode);
        setUserId(userId);
        setNotificationType(notificationType);
        setInAppMessage(inAppMessage);
        setNotificationStage(notificationStage);
        setNotificationDeliveryStatus(notificationDeliveryStatus);
        setActions(actions);
        setTriggerTime(triggerTime);
        setSent(sent);
        setSentTime(sentTime);
        setDelivered(delivered);
        setDeliveredTime(deliveredTime);
        setRead(read);
        setReadTime(readTime);
        setFailed(failed);
        setFailedTime(failedTime);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
