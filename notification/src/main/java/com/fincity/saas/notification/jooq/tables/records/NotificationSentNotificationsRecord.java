/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.notification.jooq.tables.records;


import com.fincity.saas.notification.jooq.tables.NotificationSentNotifications;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class NotificationSentNotificationsRecord extends UpdatableRecordImpl<NotificationSentNotificationsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>notification.notification_sent_notifications.ID</code>.
     * Primary key
     */
    public NotificationSentNotificationsRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>notification.notification_sent_notifications.ID</code>.
     * Primary key
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.CODE</code>. Unique
     * Code to identify this row
     */
    public NotificationSentNotificationsRecord setCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.CODE</code>. Unique
     * Code to identify this row
     */
    public String getCode() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.APP_CODE</code>. App
     * Code on which this notification was sent. References security_app table
     */
    public NotificationSentNotificationsRecord setAppCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.APP_CODE</code>. App
     * Code on which this notification was sent. References security_app table
     */
    public String getAppCode() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.CLIENT_CODE</code>.
     * Client Code to whom this notification we sent. References security_user
     * table
     */
    public NotificationSentNotificationsRecord setClientCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.CLIENT_CODE</code>.
     * Client Code to whom this notification we sent. References security_user
     * table
     */
    public String getClientCode() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.USER_ID</code>.
     * Identifier for the user. References security_user table
     */
    public NotificationSentNotificationsRecord setUserId(ULong value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.USER_ID</code>.
     * Identifier for the user. References security_user table
     */
    public ULong getUserId() {
        return (ULong) get(4);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.NOTIFICATION_MESSAGE</code>.
     */
    public NotificationSentNotificationsRecord setNotificationMessage(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.NOTIFICATION_MESSAGE</code>.
     */
    public String getNotificationMessage() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.NOTIFICATION_TYPE</code>.
     * Type of notification that is sent
     */
    public NotificationSentNotificationsRecord setNotificationType(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.NOTIFICATION_TYPE</code>.
     * Type of notification that is sent
     */
    public String getNotificationType() {
        return (String) get(6);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.TRIGGER_TIME</code>.
     * Time when the notification was triggered
     */
    public NotificationSentNotificationsRecord setTriggerTime(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.TRIGGER_TIME</code>.
     * Time when the notification was triggered
     */
    public LocalDateTime getTriggerTime() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.IS_EMAIL</code>. Email
     * notification enabled or not
     */
    public NotificationSentNotificationsRecord setIsEmail(Byte value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.IS_EMAIL</code>. Email
     * notification enabled or not
     */
    public Byte getIsEmail() {
        return (Byte) get(8);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.EMAIL_DELIVERY_STATUS</code>.
     * Email delivery status
     */
    public NotificationSentNotificationsRecord setEmailDeliveryStatus(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.EMAIL_DELIVERY_STATUS</code>.
     * Email delivery status
     */
    public String getEmailDeliveryStatus() {
        return (String) get(9);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.EMAIL_DELIVERY_TIME</code>.
     * Time when the email was delivered
     */
    public NotificationSentNotificationsRecord setEmailDeliveryTime(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.EMAIL_DELIVERY_TIME</code>.
     * Time when the email was delivered
     */
    public LocalDateTime getEmailDeliveryTime() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.IS_IN_APP</code>.
     * In-app notification enabled or not
     */
    public NotificationSentNotificationsRecord setIsInApp(Byte value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.IS_IN_APP</code>.
     * In-app notification enabled or not
     */
    public Byte getIsInApp() {
        return (Byte) get(11);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.IN_APP_DELIVERY_STATUS</code>.
     * In-app delivery status
     */
    public NotificationSentNotificationsRecord setInAppDeliveryStatus(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.IN_APP_DELIVERY_STATUS</code>.
     * In-app delivery status
     */
    public String getInAppDeliveryStatus() {
        return (String) get(12);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.IN_APP_DELIVERY_TIME</code>.
     * Time when the in-app notification was delivered
     */
    public NotificationSentNotificationsRecord setInAppDeliveryTime(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.IN_APP_DELIVERY_TIME</code>.
     * Time when the in-app notification was delivered
     */
    public LocalDateTime getInAppDeliveryTime() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.IS_MOBILE_PUSH</code>.
     * Mobile push notification enabled or not
     */
    public NotificationSentNotificationsRecord setIsMobilePush(Byte value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.IS_MOBILE_PUSH</code>.
     * Mobile push notification enabled or not
     */
    public Byte getIsMobilePush() {
        return (Byte) get(14);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.MOBILE_PUSH_DELIVERY_STATUS</code>.
     * Mobile push delivery status
     */
    public NotificationSentNotificationsRecord setMobilePushDeliveryStatus(String value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.MOBILE_PUSH_DELIVERY_STATUS</code>.
     * Mobile push delivery status
     */
    public String getMobilePushDeliveryStatus() {
        return (String) get(15);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.MOBILE_PUSH_DELIVERY_TIME</code>.
     * Time when the mobile push notification was delivered
     */
    public NotificationSentNotificationsRecord setMobilePushDeliveryTime(LocalDateTime value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.MOBILE_PUSH_DELIVERY_TIME</code>.
     * Time when the mobile push notification was delivered
     */
    public LocalDateTime getMobilePushDeliveryTime() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.IS_WEB_PUSH</code>.
     * Web push notification enabled or not
     */
    public NotificationSentNotificationsRecord setIsWebPush(Byte value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.IS_WEB_PUSH</code>.
     * Web push notification enabled or not
     */
    public Byte getIsWebPush() {
        return (Byte) get(17);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.WEB_PUSH_DELIVERY_STATUS</code>.
     * Web push delivery status
     */
    public NotificationSentNotificationsRecord setWebPushDeliveryStatus(String value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.WEB_PUSH_DELIVERY_STATUS</code>.
     * Web push delivery status
     */
    public String getWebPushDeliveryStatus() {
        return (String) get(18);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.WEB_PUSH_DELIVERY_TIME</code>.
     * Time when the web push notification was delivered
     */
    public NotificationSentNotificationsRecord setWebPushDeliveryTime(LocalDateTime value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.WEB_PUSH_DELIVERY_TIME</code>.
     * Time when the web push notification was delivered
     */
    public LocalDateTime getWebPushDeliveryTime() {
        return (LocalDateTime) get(19);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.IS_SMS</code>. SMS
     * notification enabled or not
     */
    public NotificationSentNotificationsRecord setIsSms(Byte value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.IS_SMS</code>. SMS
     * notification enabled or not
     */
    public Byte getIsSms() {
        return (Byte) get(20);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.SMS_DELIVERY_STATUS</code>.
     * SMS delivery status
     */
    public NotificationSentNotificationsRecord setSmsDeliveryStatus(String value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.SMS_DELIVERY_STATUS</code>.
     * SMS delivery status
     */
    public String getSmsDeliveryStatus() {
        return (String) get(21);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.SMS_DELIVERY_TIME</code>.
     * Time when the SMS was delivered
     */
    public NotificationSentNotificationsRecord setSmsDeliveryTime(LocalDateTime value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.SMS_DELIVERY_TIME</code>.
     * Time when the SMS was delivered
     */
    public LocalDateTime getSmsDeliveryTime() {
        return (LocalDateTime) get(22);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.CREATED_BY</code>. ID
     * of the user who created this row
     */
    public NotificationSentNotificationsRecord setCreatedBy(ULong value) {
        set(23, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.CREATED_BY</code>. ID
     * of the user who created this row
     */
    public ULong getCreatedBy() {
        return (ULong) get(23);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.CREATED_AT</code>.
     * Time when this row is created
     */
    public NotificationSentNotificationsRecord setCreatedAt(LocalDateTime value) {
        set(24, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.CREATED_AT</code>.
     * Time when this row is created
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(24);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.UPDATED_BY</code>. ID
     * of the user who updated this row
     */
    public NotificationSentNotificationsRecord setUpdatedBy(ULong value) {
        set(25, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.UPDATED_BY</code>. ID
     * of the user who updated this row
     */
    public ULong getUpdatedBy() {
        return (ULong) get(25);
    }

    /**
     * Setter for
     * <code>notification.notification_sent_notifications.UPDATED_AT</code>.
     * Time when this row is updated
     */
    public NotificationSentNotificationsRecord setUpdatedAt(LocalDateTime value) {
        set(26, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_sent_notifications.UPDATED_AT</code>.
     * Time when this row is updated
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(26);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotificationSentNotificationsRecord
     */
    public NotificationSentNotificationsRecord() {
        super(NotificationSentNotifications.NOTIFICATION_SENT_NOTIFICATIONS);
    }

    /**
     * Create a detached, initialised NotificationSentNotificationsRecord
     */
    public NotificationSentNotificationsRecord(ULong id, String code, String appCode, String clientCode, ULong userId, String notificationMessage, String notificationType, LocalDateTime triggerTime, Byte isEmail, String emailDeliveryStatus, LocalDateTime emailDeliveryTime, Byte isInApp, String inAppDeliveryStatus, LocalDateTime inAppDeliveryTime, Byte isMobilePush, String mobilePushDeliveryStatus, LocalDateTime mobilePushDeliveryTime, Byte isWebPush, String webPushDeliveryStatus, LocalDateTime webPushDeliveryTime, Byte isSms, String smsDeliveryStatus, LocalDateTime smsDeliveryTime, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(NotificationSentNotifications.NOTIFICATION_SENT_NOTIFICATIONS);

        setId(id);
        setCode(code);
        setAppCode(appCode);
        setClientCode(clientCode);
        setUserId(userId);
        setNotificationMessage(notificationMessage);
        setNotificationType(notificationType);
        setTriggerTime(triggerTime);
        setIsEmail(isEmail);
        setEmailDeliveryStatus(emailDeliveryStatus);
        setEmailDeliveryTime(emailDeliveryTime);
        setIsInApp(isInApp);
        setInAppDeliveryStatus(inAppDeliveryStatus);
        setInAppDeliveryTime(inAppDeliveryTime);
        setIsMobilePush(isMobilePush);
        setMobilePushDeliveryStatus(mobilePushDeliveryStatus);
        setMobilePushDeliveryTime(mobilePushDeliveryTime);
        setIsWebPush(isWebPush);
        setWebPushDeliveryStatus(webPushDeliveryStatus);
        setWebPushDeliveryTime(webPushDeliveryTime);
        setIsSms(isSms);
        setSmsDeliveryStatus(smsDeliveryStatus);
        setSmsDeliveryTime(smsDeliveryTime);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
