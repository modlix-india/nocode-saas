/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.notification.jooq.tables.records;


import com.fincity.saas.notification.enums.NotificationChannelType;
import com.fincity.saas.notification.jooq.tables.NotificationTemplate;

import java.time.LocalDateTime;

import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class NotificationTemplateRecord extends UpdatableRecordImpl<NotificationTemplateRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>notification.notification_template.ID</code>. Primary
     * key
     */
    public NotificationTemplateRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>notification.notification_template.ID</code>. Primary
     * key
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>notification.notification_template.CLIENT_ID</code>.
     * Identifier for the client. References security_client table
     */
    public NotificationTemplateRecord setClientId(ULong value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>notification.notification_template.CLIENT_ID</code>.
     * Identifier for the client. References security_client table
     */
    public ULong getClientId() {
        return (ULong) get(1);
    }

    /**
     * Setter for <code>notification.notification_template.APP_ID</code>.
     * Identifier for the application. References security_app table
     */
    public NotificationTemplateRecord setAppId(ULong value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>notification.notification_template.APP_ID</code>.
     * Identifier for the application. References security_app table
     */
    public ULong getAppId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>notification.notification_template.CODE</code>. Unique
     * Code to identify this row
     */
    public NotificationTemplateRecord setCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>notification.notification_template.CODE</code>. Unique
     * Code to identify this row
     */
    public String getCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>notification.notification_template.NAME</code>. Template
     * name
     */
    public NotificationTemplateRecord setName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>notification.notification_template.NAME</code>. Template
     * name
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>notification.notification_template.DESCRIPTION</code>.
     * Description of notification Template
     */
    public NotificationTemplateRecord setDescription(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>notification.notification_template.DESCRIPTION</code>.
     * Description of notification Template
     */
    public String getDescription() {
        return (String) get(5);
    }

    /**
     * Setter for <code>notification.notification_template.CHANNEL_TYPE</code>.
     * Type of notification channel
     */
    public NotificationTemplateRecord setChannelType(NotificationChannelType value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>notification.notification_template.CHANNEL_TYPE</code>.
     * Type of notification channel
     */
    public NotificationChannelType getChannelType() {
        return (NotificationChannelType) get(6);
    }

    /**
     * Setter for
     * <code>notification.notification_template.TEMPLATE_PARTS</code>.
     * Notification Template parts object
     */
    public NotificationTemplateRecord setTemplateParts(JSON value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_template.TEMPLATE_PARTS</code>.
     * Notification Template parts object
     */
    public JSON getTemplateParts() {
        return (JSON) get(7);
    }

    /**
     * Setter for <code>notification.notification_template.RESOURCES</code>.
     * Notification resources object
     */
    public NotificationTemplateRecord setResources(JSON value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>notification.notification_template.RESOURCES</code>.
     * Notification resources object
     */
    public JSON getResources() {
        return (JSON) get(8);
    }

    /**
     * Setter for <code>notification.notification_template.VARIABLES</code>.
     * Variables for Template
     */
    public NotificationTemplateRecord setVariables(JSON value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>notification.notification_template.VARIABLES</code>.
     * Variables for Template
     */
    public JSON getVariables() {
        return (JSON) get(9);
    }

    /**
     * Setter for <code>notification.notification_template.TEMPLATE_TYPE</code>.
     * Type of template
     */
    public NotificationTemplateRecord setTemplateType(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>notification.notification_template.TEMPLATE_TYPE</code>.
     * Type of template
     */
    public String getTemplateType() {
        return (String) get(10);
    }

    /**
     * Setter for
     * <code>notification.notification_template.DEFAULT_LANGUAGE</code>. The
     * default language for this template
     */
    public NotificationTemplateRecord setDefaultLanguage(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_template.DEFAULT_LANGUAGE</code>. The
     * default language for this template
     */
    public String getDefaultLanguage() {
        return (String) get(11);
    }

    /**
     * Setter for
     * <code>notification.notification_template.LANGUAGE_EXPRESSION</code>.
     * Language Expression for this template
     */
    public NotificationTemplateRecord setLanguageExpression(String value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_template.LANGUAGE_EXPRESSION</code>.
     * Language Expression for this template
     */
    public String getLanguageExpression() {
        return (String) get(12);
    }

    /**
     * Setter for <code>notification.notification_template.CREATED_BY</code>. ID
     * of the user who created this row
     */
    public NotificationTemplateRecord setCreatedBy(ULong value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for <code>notification.notification_template.CREATED_BY</code>. ID
     * of the user who created this row
     */
    public ULong getCreatedBy() {
        return (ULong) get(13);
    }

    /**
     * Setter for <code>notification.notification_template.CREATED_AT</code>.
     * Time when this row is created
     */
    public NotificationTemplateRecord setCreatedAt(LocalDateTime value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for <code>notification.notification_template.CREATED_AT</code>.
     * Time when this row is created
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(14);
    }

    /**
     * Setter for <code>notification.notification_template.UPDATED_BY</code>. ID
     * of the user who updated this row
     */
    public NotificationTemplateRecord setUpdatedBy(ULong value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for <code>notification.notification_template.UPDATED_BY</code>. ID
     * of the user who updated this row
     */
    public ULong getUpdatedBy() {
        return (ULong) get(15);
    }

    /**
     * Setter for <code>notification.notification_template.UPDATED_AT</code>.
     * Time when this row is updated
     */
    public NotificationTemplateRecord setUpdatedAt(LocalDateTime value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for <code>notification.notification_template.UPDATED_AT</code>.
     * Time when this row is updated
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(16);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotificationTemplateRecord
     */
    public NotificationTemplateRecord() {
        super(NotificationTemplate.NOTIFICATION_TEMPLATE);
    }

    /**
     * Create a detached, initialised NotificationTemplateRecord
     */
    public NotificationTemplateRecord(ULong id, ULong clientId, ULong appId, String code, String name, String description, NotificationChannelType channelType, JSON templateParts, JSON resources, JSON variables, String templateType, String defaultLanguage, String languageExpression, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(NotificationTemplate.NOTIFICATION_TEMPLATE);

        setId(id);
        setClientId(clientId);
        setAppId(appId);
        setCode(code);
        setName(name);
        setDescription(description);
        setChannelType(channelType);
        setTemplateParts(templateParts);
        setResources(resources);
        setVariables(variables);
        setTemplateType(templateType);
        setDefaultLanguage(defaultLanguage);
        setLanguageExpression(languageExpression);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
