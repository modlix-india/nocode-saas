/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.notification.jooq.tables.records;


import com.fincity.saas.notification.jooq.tables.NotificationUserPreference;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class NotificationUserPreferenceRecord extends UpdatableRecordImpl<NotificationUserPreferenceRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>notification.notification_user_preference.ID</code>.
     * Primary key
     */
    public NotificationUserPreferenceRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>notification.notification_user_preference.ID</code>.
     * Primary key
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>notification.notification_user_preference.APP_ID</code>.
     * Application identifier
     */
    public NotificationUserPreferenceRecord setAppId(ULong value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>notification.notification_user_preference.APP_ID</code>.
     * Application identifier
     */
    public ULong getAppId() {
        return (ULong) get(1);
    }

    /**
     * Setter for
     * <code>notification.notification_user_preference.USER_ID</code>. User
     * identifier
     */
    public NotificationUserPreferenceRecord setUserId(ULong value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_user_preference.USER_ID</code>. User
     * identifier
     */
    public ULong getUserId() {
        return (ULong) get(2);
    }

    /**
     * Setter for
     * <code>notification.notification_user_preference.NOTIFICATION_TYPE_ID</code>.
     * Reference to notification type
     */
    public NotificationUserPreferenceRecord setNotificationTypeId(ULong value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_user_preference.NOTIFICATION_TYPE_ID</code>.
     * Reference to notification type
     */
    public ULong getNotificationTypeId() {
        return (ULong) get(3);
    }

    /**
     * Setter for
     * <code>notification.notification_user_preference.IS_DISABLED</code>. Flag
     * to disable all notifications for this type
     */
    public NotificationUserPreferenceRecord setIsDisabled(Byte value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_user_preference.IS_DISABLED</code>. Flag
     * to disable all notifications for this type
     */
    public Byte getIsDisabled() {
        return (Byte) get(4);
    }

    /**
     * Setter for
     * <code>notification.notification_user_preference.IS_EMAIL_ENABLED</code>.
     * Flag to enable email notifications
     */
    public NotificationUserPreferenceRecord setIsEmailEnabled(Byte value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_user_preference.IS_EMAIL_ENABLED</code>.
     * Flag to enable email notifications
     */
    public Byte getIsEmailEnabled() {
        return (Byte) get(5);
    }

    /**
     * Setter for
     * <code>notification.notification_user_preference.IS_IN_APP_ENABLED</code>.
     * Flag to enable in-app notifications
     */
    public NotificationUserPreferenceRecord setIsInAppEnabled(Byte value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_user_preference.IS_IN_APP_ENABLED</code>.
     * Flag to enable in-app notifications
     */
    public Byte getIsInAppEnabled() {
        return (Byte) get(6);
    }

    /**
     * Setter for
     * <code>notification.notification_user_preference.IS_SMS_ENABLED</code>.
     * Flag to enable SMS notifications
     */
    public NotificationUserPreferenceRecord setIsSmsEnabled(Byte value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_user_preference.IS_SMS_ENABLED</code>.
     * Flag to enable SMS notifications
     */
    public Byte getIsSmsEnabled() {
        return (Byte) get(7);
    }

    /**
     * Setter for
     * <code>notification.notification_user_preference.IS_PUSH_ENABLED</code>.
     * Flag to enable push notifications
     */
    public NotificationUserPreferenceRecord setIsPushEnabled(Byte value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_user_preference.IS_PUSH_ENABLED</code>.
     * Flag to enable push notifications
     */
    public Byte getIsPushEnabled() {
        return (Byte) get(8);
    }

    /**
     * Setter for
     * <code>notification.notification_user_preference.CREATED_BY</code>. ID of
     * the user who created this row
     */
    public NotificationUserPreferenceRecord setCreatedBy(ULong value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_user_preference.CREATED_BY</code>. ID of
     * the user who created this row
     */
    public ULong getCreatedBy() {
        return (ULong) get(9);
    }

    /**
     * Setter for
     * <code>notification.notification_user_preference.CREATED_AT</code>. Time
     * when this row is created
     */
    public NotificationUserPreferenceRecord setCreatedAt(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_user_preference.CREATED_AT</code>. Time
     * when this row is created
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for
     * <code>notification.notification_user_preference.UPDATED_BY</code>. ID of
     * the user who updated this row
     */
    public NotificationUserPreferenceRecord setUpdatedBy(ULong value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_user_preference.UPDATED_BY</code>. ID of
     * the user who updated this row
     */
    public ULong getUpdatedBy() {
        return (ULong) get(11);
    }

    /**
     * Setter for
     * <code>notification.notification_user_preference.UPDATED_AT</code>. Time
     * when this row is updated
     */
    public NotificationUserPreferenceRecord setUpdatedAt(LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for
     * <code>notification.notification_user_preference.UPDATED_AT</code>. Time
     * when this row is updated
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached NotificationUserPreferenceRecord
     */
    public NotificationUserPreferenceRecord() {
        super(NotificationUserPreference.NOTIFICATION_USER_PREFERENCE);
    }

    /**
     * Create a detached, initialised NotificationUserPreferenceRecord
     */
    public NotificationUserPreferenceRecord(ULong id, ULong appId, ULong userId, ULong notificationTypeId, Byte isDisabled, Byte isEmailEnabled, Byte isInAppEnabled, Byte isSmsEnabled, Byte isPushEnabled, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(NotificationUserPreference.NOTIFICATION_USER_PREFERENCE);

        setId(id);
        setAppId(appId);
        setUserId(userId);
        setNotificationTypeId(notificationTypeId);
        setIsDisabled(isDisabled);
        setIsEmailEnabled(isEmailEnabled);
        setIsInAppEnabled(isInAppEnabled);
        setIsSmsEnabled(isSmsEnabled);
        setIsPushEnabled(isPushEnabled);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
