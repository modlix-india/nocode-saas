/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.entity.collector.jooq.tables.records;


import com.fincity.saas.entity.collector.jooq.enums.EntityCollectorLogStatus;
import com.fincity.saas.entity.collector.jooq.tables.EntityCollectorLog;

import java.time.LocalDateTime;

import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EntityCollectorLogRecord extends UpdatableRecordImpl<EntityCollectorLogRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>entity_collector.entity_collector_log.id</code>. Primary
     * key
     */
    public EntityCollectorLogRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>entity_collector.entity_collector_log.id</code>. Primary
     * key
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for
     * <code>entity_collector.entity_collector_log.entity_integration_id</code>.
     * Entity integration ID
     */
    public EntityCollectorLogRecord setEntityIntegrationId(ULong value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_collector.entity_collector_log.entity_integration_id</code>.
     * Entity integration ID
     */
    public ULong getEntityIntegrationId() {
        return (ULong) get(1);
    }

    /**
     * Setter for
     * <code>entity_collector.entity_collector_log.incoming_lead_data</code>.
     * Lead Data
     */
    public EntityCollectorLogRecord setIncomingLeadData(JSON value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_collector.entity_collector_log.incoming_lead_data</code>.
     * Lead Data
     */
    public JSON getIncomingLeadData() {
        return (JSON) get(2);
    }

    /**
     * Setter for <code>entity_collector.entity_collector_log.ip_address</code>.
     * Ip Address
     */
    public EntityCollectorLogRecord setIpAddress(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>entity_collector.entity_collector_log.ip_address</code>.
     * Ip Address
     */
    public String getIpAddress() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>entity_collector.entity_collector_log.outgoing_lead_data</code>.
     * Lead Data Forwarded to CRM
     */
    public EntityCollectorLogRecord setOutgoingLeadData(JSON value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_collector.entity_collector_log.outgoing_lead_data</code>.
     * Lead Data Forwarded to CRM
     */
    public JSON getOutgoingLeadData() {
        return (JSON) get(4);
    }

    /**
     * Setter for <code>entity_collector.entity_collector_log.status</code>.
     * Status of the Lead Transfer
     */
    public EntityCollectorLogRecord setStatus(EntityCollectorLogStatus value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>entity_collector.entity_collector_log.status</code>.
     * Status of the Lead Transfer
     */
    public EntityCollectorLogStatus getStatus() {
        return (EntityCollectorLogStatus) get(5);
    }

    /**
     * Setter for
     * <code>entity_collector.entity_collector_log.status_message</code>.
     * Message given for the status
     */
    public EntityCollectorLogRecord setStatusMessage(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_collector.entity_collector_log.status_message</code>.
     * Message given for the status
     */
    public String getStatusMessage() {
        return (String) get(6);
    }

    /**
     * Setter for <code>entity_collector.entity_collector_log.created_at</code>.
     * Time when this row is created
     */
    public EntityCollectorLogRecord setCreatedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>entity_collector.entity_collector_log.created_at</code>.
     * Time when this row is created
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EntityCollectorLogRecord
     */
    public EntityCollectorLogRecord() {
        super(EntityCollectorLog.ENTITY_COLLECTOR_LOG);
    }

    /**
     * Create a detached, initialised EntityCollectorLogRecord
     */
    public EntityCollectorLogRecord(ULong id, ULong entityIntegrationId, JSON incomingLeadData, String ipAddress, JSON outgoingLeadData, EntityCollectorLogStatus status, String statusMessage, LocalDateTime createdAt) {
        super(EntityCollectorLog.ENTITY_COLLECTOR_LOG);

        setId(id);
        setEntityIntegrationId(entityIntegrationId);
        setIncomingLeadData(incomingLeadData);
        setIpAddress(ipAddress);
        setOutgoingLeadData(outgoingLeadData);
        setStatus(status);
        setStatusMessage(statusMessage);
        setCreatedAt(createdAt);
        resetChangedOnNotNull();
    }
}
