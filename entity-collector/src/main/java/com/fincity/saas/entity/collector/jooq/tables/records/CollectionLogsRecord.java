/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.entity.collector.jooq.tables.records;


import com.fincity.saas.entity.collector.jooq.enums.CollectionLogsStatus;
import com.fincity.saas.entity.collector.jooq.tables.CollectionLogs;

import java.time.LocalDateTime;

import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CollectionLogsRecord extends UpdatableRecordImpl<CollectionLogsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>entity_collector.collection_logs.id</code>. Primary key
     */
    public CollectionLogsRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>entity_collector.collection_logs.id</code>. Primary key
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for
     * <code>entity_collector.collection_logs.entity_integration_id</code>.
     * Entity integration ID
     */
    public CollectionLogsRecord setEntityIntegrationId(ULong value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_collector.collection_logs.entity_integration_id</code>.
     * Entity integration ID
     */
    public ULong getEntityIntegrationId() {
        return (ULong) get(1);
    }

    /**
     * Setter for
     * <code>entity_collector.collection_logs.incoming_lead_data</code>. Lead
     * Data
     */
    public CollectionLogsRecord setIncomingLeadData(JSON value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_collector.collection_logs.incoming_lead_data</code>. Lead
     * Data
     */
    public JSON getIncomingLeadData() {
        return (JSON) get(2);
    }

    /**
     * Setter for <code>entity_collector.collection_logs.ip_address</code>. Ip
     * Address
     */
    public CollectionLogsRecord setIpAddress(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>entity_collector.collection_logs.ip_address</code>. Ip
     * Address
     */
    public String getIpAddress() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>entity_collector.collection_logs.outgoing_lead_data</code>. Lead
     * Data Forwarded to CRM
     */
    public CollectionLogsRecord setOutgoingLeadData(JSON value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_collector.collection_logs.outgoing_lead_data</code>. Lead
     * Data Forwarded to CRM
     */
    public JSON getOutgoingLeadData() {
        return (JSON) get(4);
    }

    /**
     * Setter for <code>entity_collector.collection_logs.status</code>. Status
     * of the Lead Transfer
     */
    public CollectionLogsRecord setStatus(CollectionLogsStatus value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>entity_collector.collection_logs.status</code>. Status
     * of the Lead Transfer
     */
    public CollectionLogsStatus getStatus() {
        return (CollectionLogsStatus) get(5);
    }

    /**
     * Setter for <code>entity_collector.collection_logs.status_message</code>.
     * Message given for the status
     */
    public CollectionLogsRecord setStatusMessage(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>entity_collector.collection_logs.status_message</code>.
     * Message given for the status
     */
    public String getStatusMessage() {
        return (String) get(6);
    }

    /**
     * Setter for <code>entity_collector.collection_logs.created_at</code>. Time
     * when this row is created
     */
    public CollectionLogsRecord setCreatedAt(LocalDateTime value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>entity_collector.collection_logs.created_at</code>. Time
     * when this row is created
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CollectionLogsRecord
     */
    public CollectionLogsRecord() {
        super(CollectionLogs.COLLECTION_LOGS);
    }

    /**
     * Create a detached, initialised CollectionLogsRecord
     */
    public CollectionLogsRecord(ULong id, ULong entityIntegrationId, JSON incomingLeadData, String ipAddress, JSON outgoingLeadData, CollectionLogsStatus status, String statusMessage, LocalDateTime createdAt) {
        super(CollectionLogs.COLLECTION_LOGS);

        setId(id);
        setEntityIntegrationId(entityIntegrationId);
        setIncomingLeadData(incomingLeadData);
        setIpAddress(ipAddress);
        setOutgoingLeadData(outgoingLeadData);
        setStatus(status);
        setStatusMessage(statusMessage);
        setCreatedAt(createdAt);
        resetChangedOnNotNull();
    }
}
