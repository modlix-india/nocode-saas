<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.4.4</version>
        <relativePath/>
        <!-- lookup parent from repository -->
    </parent>
    <groupId>com.fincity.saas</groupId>
    <artifactId>commons-core</artifactId>
    <version>1.0.0</version>
    <name>Commons-Core</name>
    <description>Commons core package that can be used by anf server to take advantages of core
        functionality
    </description>
    <properties>
        <!-- Package -->
        <base.package>com.fincity.saas</base.package>
        <server.package>commons.core</server.package>
        <jooq.package>${base.package}.${server.package}.jooq</jooq.package>

        <!-- Paths -->
        <base.package.dir>com/fincity/saas</base.package.dir>
        <server.package.dir>commons/core</server.package.dir>
        <main.java.dir>src/main/java</main.java.dir>
        <test.java.dir>src/test/java</test.java.dir>
        <resources.dir>src/main/resources</resources.dir>
        <jooq.dir>${main.java.dir}/${base.package.dir}/${server.package.dir}/jooq</jooq.dir>

        <!-- Database -->
        <database.schema.name>core</database.schema.name>
        <mysql.jdbc.url>jdbc:mysql://localhost:3306/${database.schema.name}</mysql.jdbc.url>
        <mysql.jdbc.user>root</mysql.jdbc.user>
        <mysql.jdbc.password>Vishwas123#</mysql.jdbc.password>

        <!-- Maven Versions -->
        <java.version>21</java.version>
        <spring-cloud.version>2024.0.0-RC1</spring-cloud.version>
        <saas-commons-version>2.0.0</saas-commons-version>
        <saas-commons-jooq-version>2.0.0</saas-commons-jooq-version>
        <saas-commons-security-version>2.0.0</saas-commons-security-version>
        <saas-commons-mongo-version>2.0.0</saas-commons-mongo-version>
        <saas-commons-mq-version>2.0.0</saas-commons-mq-version>
        <feign-reactor.version>4.2.1</feign-reactor.version>
        <openhtml.version>1.0.10</openhtml.version>
        <spotless.version>2.44.3</spotless.version>
        <palantir-java.format.version>2.61.0</palantir-java.format.version>
    </properties>
    <dependencies>
        <!-- Spring Framework Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.amqp</groupId>
            <artifactId>spring-rabbit</artifactId>
        </dependency>
        <!-- Fincity SAAS Commons Dependencies -->
        <dependency>
            <groupId>com.fincity.saas</groupId>
            <artifactId>commons</artifactId>
            <version>${saas-commons-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fincity.saas</groupId>
            <artifactId>commons-jooq</artifactId>
            <version>${saas-commons-jooq-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fincity.saas</groupId>
            <artifactId>commons-security</artifactId>
            <version>${saas-commons-security-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fincity.saas</groupId>
            <artifactId>commons-mongo</artifactId>
            <version>${saas-commons-mongo-version}</version>
        </dependency>
        <dependency>
            <groupId>com.fincity.saas</groupId>
            <artifactId>commons-mq</artifactId>
            <version>${saas-commons-mq-version}</version>
        </dependency>
        <!-- Feign Client Dependencies -->
        <dependency>
            <groupId>com.playtika.reactivefeign</groupId>
            <artifactId>feign-reactor-spring-cloud-starter</artifactId>
            <version>${feign-reactor.version}</version>
            <type>pom</type>
        </dependency>
        <dependency>
            <groupId>com.playtika.reactivefeign</groupId>
            <artifactId>feign-reactor-spring-configuration</artifactId>
            <version>${feign-reactor.version}</version>
        </dependency>
        <!-- Email and Activation Dependencies -->
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>jakarta.mail</artifactId>
            <version>2.0.1</version>
        </dependency>
        <dependency>
            <groupId>com.sun.activation</groupId>
            <artifactId>javax.activation</artifactId>
            <version>1.2.0</version>
        </dependency>
        <dependency>
            <groupId>com.sun.activation</groupId>
            <artifactId>jakarta.activation</artifactId>
            <version>2.0.1</version>
        </dependency>
        <!-- HTML Processing and PDF Generation -->
        <dependency>
            <groupId>com.openhtmltopdf</groupId>
            <artifactId>openhtmltopdf-core</artifactId>
            <version>${openhtml.version}</version>
        </dependency>
        <dependency>
            <groupId>com.openhtmltopdf</groupId>
            <artifactId>openhtmltopdf-pdfbox</artifactId>
            <version>${openhtml.version}</version>
        </dependency>
        <dependency>
            <groupId>com.openhtmltopdf</groupId>
            <artifactId>openhtmltopdf-rtl-support</artifactId>
            <version>${openhtml.version}</version>
        </dependency>
        <dependency>
            <groupId>com.openhtmltopdf</groupId>
            <artifactId>openhtmltopdf-svg-support</artifactId>
            <version>${openhtml.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>1.19.1</version>
        </dependency>
        <!-- Template Engine -->
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker-gae</artifactId>
            <version>2.3.32</version>
        </dependency>
        <!-- Utility Libraries -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- https://mvnrepository.com/artifact/com.openai/openai-java -->
        <dependency>
            <groupId>com.openai</groupId>
            <artifactId>openai-java</artifactId>
            <version>0.31.0</version>
        </dependency>
        <!-- Testing Dependencies -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <repositories>
        <repository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>https://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <profiles>
        <profile>
            <id>jooq</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.jooq</groupId>
                        <artifactId>jooq-codegen-maven</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>generate</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>mysql</groupId>
                                <artifactId>mysql-connector-java</artifactId>
                                <version>8.0.29</version>
                            </dependency>
                            <dependency>
                                <groupId>javax.xml.bind</groupId>
                                <artifactId>jaxb-api</artifactId>
                                <version>2.3.1</version>
                            </dependency>
                            <dependency>
                                <groupId>org.glassfish.jaxb</groupId>
                                <artifactId>jaxb-runtime</artifactId>
                                <version>4.0.0</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <jdbc>
                                <driver>com.mysql.cj.jdbc.Driver</driver>
                                <url>${mysql.jdbc.url}</url>
                                <user>${mysql.jdbc.user}</user>
                                <password>${mysql.jdbc.password}</password>
                            </jdbc>
                            <generator>
                                <database>
                                    <includes>${database.schema.name}_.*</includes>
                                    <inputSchema>${database.schema.name}</inputSchema>
                                    <forcedTypes>
                                        <forcedType>
                                            <userType>java.util.Map</userType>
                                            <converter>
                                                com.fincity.saas.commons.jooq.convertor.JSONMysqlMapConvertor
                                            </converter>
                                            <includeExpression>TOKEN_METADATA</includeExpression>
                                            <includeTypes>JSON</includeTypes>
                                            <genericConverter>false</genericConverter>
                                        </forcedType>
                                    </forcedTypes>
                                </database>
                                <generate>
                                    <deprecated>false</deprecated>
                                    <relations>true</relations>
                                    <records>true</records>
                                    <immutablePojos>false</immutablePojos>
                                    <fluentSetters>true</fluentSetters>
                                </generate>
                                <target>
                                    <packageName>${jooq.package}</packageName>
                                    <directory>${main.java.dir}</directory>
                                </target>
                            </generator>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>spotless</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.diffplug.spotless</groupId>
                        <artifactId>spotless-maven-plugin</artifactId>
                        <version>${spotless.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                    <goal>apply</goal>
                                </goals>
                            </execution>
                        </executions>
                        <dependencies>
                            <dependency>
                                <groupId>com.diffplug.spotless</groupId>
                                <artifactId>spotless-maven-plugin</artifactId>
                                <version>${spotless.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>com.palantir.javaformat</groupId>
                                <artifactId>palantir-java-format</artifactId>
                                <version>${palantir-java.format.version}</version>
                            </dependency>
                        </dependencies>
                        <configuration>
                            <!-- JAVA files -->
                            <java>
                                <includes>
                                    <include>${main.java.dir}/**/*.java</include>
                                    <include>${test.java.dir}/**/*.java</include>
                                </includes>
                                <excludes>
                                    <exclude>${jooq.dir}/**/*.java</exclude>
                                </excludes>
                                <palantirJavaFormat>
                                    <version>${palantir-java.format.version}</version>
                                    <style>PALANTIR</style>
                                </palantirJavaFormat>
                                <importOrder/>
                                <removeUnusedImports/>
                                <formatAnnotations/>
                                <trimTrailingWhitespace/>
                                <endWithNewline/>
                                <toggleOffOn/>
                            </java>
                            <!-- YAML files -->
                            <yaml>
                                <includes>
                                    <include>${resources.dir}/*.yml</include>
                                    <include>${resources.dir}/*.yaml</include>
                                </includes>
                                <jackson>
                                    <features>
                                        <INDENT_OUTPUT>true</INDENT_OUTPUT>
                                        <ORDER_MAP_ENTRIES_BY_KEYS>true</ORDER_MAP_ENTRIES_BY_KEYS>
                                    </features>
                                    <yamlFeatures>
                                        <WRITE_DOC_START_MARKER>true</WRITE_DOC_START_MARKER>
                                        <MINIMIZE_QUOTES>true</MINIMIZE_QUOTES>
                                        <SPLIT_LINES>true</SPLIT_LINES>
                                    </yamlFeatures>
                                </jackson>
                                <trimTrailingWhitespace/>
                                <endWithNewline/>
                            </yaml>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
