/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.files.jooq.tables.records;


import com.fincity.saas.files.jooq.enums.FilesAccessPathResourceType;
import com.fincity.saas.files.jooq.tables.FilesAccessPath;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class FilesAccessPathRecord extends UpdatableRecordImpl<FilesAccessPathRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>files.files_access_path.ID</code>. Primary key
     */
    public FilesAccessPathRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>files.files_access_path.ID</code>. Primary key
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>files.files_access_path.CLIENT_CODE</code>. Client code
     */
    public FilesAccessPathRecord setClientCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>files.files_access_path.CLIENT_CODE</code>. Client code
     */
    public String getClientCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>files.files_access_path.USER_ID</code>. USER ID
     */
    public FilesAccessPathRecord setUserId(ULong value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>files.files_access_path.USER_ID</code>. USER ID
     */
    public ULong getUserId() {
        return (ULong) get(2);
    }

    /**
     * Setter for <code>files.files_access_path.RESOURCE_TYPE</code>. Static or
     * Secured resource
     */
    public FilesAccessPathRecord setResourceType(FilesAccessPathResourceType value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>files.files_access_path.RESOURCE_TYPE</code>. Static or
     * Secured resource
     */
    public FilesAccessPathResourceType getResourceType() {
        return (FilesAccessPathResourceType) get(3);
    }

    /**
     * Setter for <code>files.files_access_path.ACCESS_NAME</code>. Role or
     * Permission Name
     */
    public FilesAccessPathRecord setAccessName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>files.files_access_path.ACCESS_NAME</code>. Role or
     * Permission Name
     */
    public String getAccessName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>files.files_access_path.WRITE_ACCESS</code>. Write
     * access
     */
    public FilesAccessPathRecord setWriteAccess(Byte value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>files.files_access_path.WRITE_ACCESS</code>. Write
     * access
     */
    public Byte getWriteAccess() {
        return (Byte) get(5);
    }

    /**
     * Setter for <code>files.files_access_path.PATH</code>. Path to the
     * resource
     */
    public FilesAccessPathRecord setPath(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>files.files_access_path.PATH</code>. Path to the
     * resource
     */
    public String getPath() {
        return (String) get(6);
    }

    /**
     * Setter for <code>files.files_access_path.ALLOW_SUB_PATH_ACCESS</code>.
     * Allow sub paths with same access
     */
    public FilesAccessPathRecord setAllowSubPathAccess(Byte value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>files.files_access_path.ALLOW_SUB_PATH_ACCESS</code>.
     * Allow sub paths with same access
     */
    public Byte getAllowSubPathAccess() {
        return (Byte) get(7);
    }

    /**
     * Setter for <code>files.files_access_path.CREATED_BY</code>. ID of the
     * user who created this row
     */
    public FilesAccessPathRecord setCreatedBy(ULong value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>files.files_access_path.CREATED_BY</code>. ID of the
     * user who created this row
     */
    public ULong getCreatedBy() {
        return (ULong) get(8);
    }

    /**
     * Setter for <code>files.files_access_path.CREATED_AT</code>. Time when
     * this row is created
     */
    public FilesAccessPathRecord setCreatedAt(LocalDateTime value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>files.files_access_path.CREATED_AT</code>. Time when
     * this row is created
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>files.files_access_path.UPDATED_BY</code>. ID of the
     * user who updated this row
     */
    public FilesAccessPathRecord setUpdatedBy(ULong value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>files.files_access_path.UPDATED_BY</code>. ID of the
     * user who updated this row
     */
    public ULong getUpdatedBy() {
        return (ULong) get(10);
    }

    /**
     * Setter for <code>files.files_access_path.UPDATED_AT</code>. Time when
     * this row is updated
     */
    public FilesAccessPathRecord setUpdatedAt(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>files.files_access_path.UPDATED_AT</code>. Time when
     * this row is updated
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FilesAccessPathRecord
     */
    public FilesAccessPathRecord() {
        super(FilesAccessPath.FILES_ACCESS_PATH);
    }

    /**
     * Create a detached, initialised FilesAccessPathRecord
     */
    public FilesAccessPathRecord(ULong id, String clientCode, ULong userId, FilesAccessPathResourceType resourceType, String accessName, Byte writeAccess, String path, Byte allowSubPathAccess, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(FilesAccessPath.FILES_ACCESS_PATH);

        setId(id);
        setClientCode(clientCode);
        setUserId(userId);
        setResourceType(resourceType);
        setAccessName(accessName);
        setWriteAccess(writeAccess);
        setPath(path);
        setAllowSubPathAccess(allowSubPathAccess);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetTouchedOnNotNull();
    }
}
