/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.files.jooq;


import com.fincity.saas.files.jooq.tables.FilesAccessPath;
import com.fincity.saas.files.jooq.tables.FilesFileSystem;
import com.fincity.saas.files.jooq.tables.FilesSecuredAccessKeys;
import com.fincity.saas.files.jooq.tables.FilesUploadDownload;
import com.fincity.saas.files.jooq.tables.records.FilesAccessPathRecord;
import com.fincity.saas.files.jooq.tables.records.FilesFileSystemRecord;
import com.fincity.saas.files.jooq.tables.records.FilesSecuredAccessKeysRecord;
import com.fincity.saas.files.jooq.tables.records.FilesUploadDownloadRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.QOM.ForeignKeyRule;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * files.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FilesAccessPathRecord> KEY_FILES_ACCESS_PATH_PRIMARY = Internal.createUniqueKey(FilesAccessPath.FILES_ACCESS_PATH, DSL.name("KEY_files_access_path_PRIMARY"), new TableField[] { FilesAccessPath.FILES_ACCESS_PATH.ID }, true);
    public static final UniqueKey<FilesFileSystemRecord> KEY_FILES_FILE_SYSTEM_PRIMARY = Internal.createUniqueKey(FilesFileSystem.FILES_FILE_SYSTEM, DSL.name("KEY_files_file_system_PRIMARY"), new TableField[] { FilesFileSystem.FILES_FILE_SYSTEM.ID }, true);
    public static final UniqueKey<FilesSecuredAccessKeysRecord> KEY_FILES_SECURED_ACCESS_KEYS_PRIMARY = Internal.createUniqueKey(FilesSecuredAccessKeys.FILES_SECURED_ACCESS_KEYS, DSL.name("KEY_files_secured_access_keys_PRIMARY"), new TableField[] { FilesSecuredAccessKeys.FILES_SECURED_ACCESS_KEYS.ID }, true);
    public static final UniqueKey<FilesSecuredAccessKeysRecord> KEY_FILES_SECURED_ACCESS_KEYS_UK1_ACCESS_KEY = Internal.createUniqueKey(FilesSecuredAccessKeys.FILES_SECURED_ACCESS_KEYS, DSL.name("KEY_files_secured_access_keys_UK1_ACCESS_KEY"), new TableField[] { FilesSecuredAccessKeys.FILES_SECURED_ACCESS_KEYS.ACCESS_KEY }, true);
    public static final UniqueKey<FilesUploadDownloadRecord> KEY_FILES_UPLOAD_DOWNLOAD_PRIMARY = Internal.createUniqueKey(FilesUploadDownload.FILES_UPLOAD_DOWNLOAD, DSL.name("KEY_files_upload_download_PRIMARY"), new TableField[] { FilesUploadDownload.FILES_UPLOAD_DOWNLOAD.ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<FilesFileSystemRecord, FilesFileSystemRecord> FILES_FILE_SYSTEM_IBFK_1 = Internal.createForeignKey(FilesFileSystem.FILES_FILE_SYSTEM, DSL.name("files_file_system_ibfk_1"), new TableField[] { FilesFileSystem.FILES_FILE_SYSTEM.PARENT_ID }, Keys.KEY_FILES_FILE_SYSTEM_PRIMARY, new TableField[] { FilesFileSystem.FILES_FILE_SYSTEM.ID }, true, ForeignKeyRule.CASCADE, ForeignKeyRule.NO_ACTION);
}
