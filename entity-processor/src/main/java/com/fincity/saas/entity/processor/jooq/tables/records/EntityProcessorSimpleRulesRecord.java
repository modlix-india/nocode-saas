/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.entity.processor.jooq.tables.records;


import com.fincity.saas.entity.processor.enums.rule.ComparisonOperator;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorSimpleRules;
import com.fincity.saas.entity.processor.model.common.ValueContainer;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EntityProcessorSimpleRulesRecord extends UpdatableRecordImpl<EntityProcessorSimpleRulesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.ID</code>. Primary
     * key.
     */
    public EntityProcessorSimpleRulesRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.ID</code>. Primary
     * key.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.APP_CODE</code>. App
     * Code on which this Simple Rule was created.
     */
    public EntityProcessorSimpleRulesRecord setAppCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.APP_CODE</code>. App
     * Code on which this Simple Rule was created.
     */
    public String getAppCode() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.CLIENT_CODE</code>.
     * Client Code who created this Simple Rule.
     */
    public EntityProcessorSimpleRulesRecord setClientCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.CLIENT_CODE</code>.
     * Client Code who created this Simple Rule.
     */
    public String getClientCode() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.CODE</code>. Unique
     * Code to identify this row.
     */
    public EntityProcessorSimpleRulesRecord setCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.CODE</code>. Unique
     * Code to identify this row.
     */
    public String getCode() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.NAME</code>. Name of
     * the Simple Rule.
     */
    public EntityProcessorSimpleRulesRecord setName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.NAME</code>. Name of
     * the Simple Rule.
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.DESCRIPTION</code>.
     * Description for the Simple Rule.
     */
    public EntityProcessorSimpleRulesRecord setDescription(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.DESCRIPTION</code>.
     * Description for the Simple Rule.
     */
    public String getDescription() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.VERSION</code>.
     * Version of this Simple Rule.
     */
    public EntityProcessorSimpleRulesRecord setVersion(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.VERSION</code>.
     * Version of this Simple Rule.
     */
    public Integer getVersion() {
        return (Integer) get(6);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.PRODUCT_TEMPLATE_RULE_ID</code>.
     * Product Template Rule ID related to this Simple Rule.
     */
    public EntityProcessorSimpleRulesRecord setProductTemplateRuleId(ULong value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.PRODUCT_TEMPLATE_RULE_ID</code>.
     * Product Template Rule ID related to this Simple Rule.
     */
    public ULong getProductTemplateRuleId() {
        return (ULong) get(7);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.PRODUCT_STAGE_RULE_ID</code>.
     * Product Stage Rule ID related to this Simple Rule.
     */
    public EntityProcessorSimpleRulesRecord setProductStageRuleId(ULong value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.PRODUCT_STAGE_RULE_ID</code>.
     * Product Stage Rule ID related to this Simple Rule.
     */
    public ULong getProductStageRuleId() {
        return (ULong) get(8);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.NEGATE</code>. Flag
     * to check if this Simple Rule is negative.
     */
    public EntityProcessorSimpleRulesRecord setNegate(Boolean value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.NEGATE</code>. Flag
     * to check if this Simple Rule is negative.
     */
    public Boolean getNegate() {
        return (Boolean) get(9);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.HAS_PARENT</code>.
     * Flag to tell if this rule has a complex parent or not.
     */
    public EntityProcessorSimpleRulesRecord setHasParent(Boolean value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.HAS_PARENT</code>.
     * Flag to tell if this rule has a complex parent or not.
     */
    public Boolean getHasParent() {
        return (Boolean) get(10);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.FIELD</code>. Field
     * name for this Simple Rule.
     */
    public EntityProcessorSimpleRulesRecord setField(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.FIELD</code>. Field
     * name for this Simple Rule.
     */
    public String getField() {
        return (String) get(11);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.COMPARISON_OPERATOR</code>.
     * Operator for this Simple Rule.
     */
    public EntityProcessorSimpleRulesRecord setComparisonOperator(ComparisonOperator value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.COMPARISON_OPERATOR</code>.
     * Operator for this Simple Rule.
     */
    public ComparisonOperator getComparisonOperator() {
        return (ComparisonOperator) get(12);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.VALUE</code>. Value
     * for this Simple Rule.
     */
    public EntityProcessorSimpleRulesRecord setValue(ValueContainer value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.VALUE</code>. Value
     * for this Simple Rule.
     */
    public ValueContainer getValue() {
        return (ValueContainer) get(13);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.IS_VALUE_FIELD</code>.
     * Flag to check if value is a field.
     */
    public EntityProcessorSimpleRulesRecord setIsValueField(Boolean value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.IS_VALUE_FIELD</code>.
     * Flag to check if value is a field.
     */
    public Boolean getIsValueField() {
        return (Boolean) get(14);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.IS_TO_VALUE_FIELD</code>.
     * Flag to check if to value is a field.
     */
    public EntityProcessorSimpleRulesRecord setIsToValueField(Boolean value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.IS_TO_VALUE_FIELD</code>.
     * Flag to check if to value is a field.
     */
    public Boolean getIsToValueField() {
        return (Boolean) get(15);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.MATCH_OPERATOR</code>.
     * Operator for this Simple Rule.
     */
    public EntityProcessorSimpleRulesRecord setMatchOperator(ComparisonOperator value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.MATCH_OPERATOR</code>.
     * Operator for this Simple Rule.
     */
    public ComparisonOperator getMatchOperator() {
        return (ComparisonOperator) get(16);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.TEMP_ACTIVE</code>.
     * Temporary active flag for this Simple Rule.
     */
    public EntityProcessorSimpleRulesRecord setTempActive(Boolean value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.TEMP_ACTIVE</code>.
     * Temporary active flag for this Simple Rule.
     */
    public Boolean getTempActive() {
        return (Boolean) get(17);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.IS_ACTIVE</code>.
     * Flag to check if this Simple Rule is active or not.
     */
    public EntityProcessorSimpleRulesRecord setIsActive(Boolean value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.IS_ACTIVE</code>.
     * Flag to check if this Simple Rule is active or not.
     */
    public Boolean getIsActive() {
        return (Boolean) get(18);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.CREATED_BY</code>.
     * ID of the user who created this row.
     */
    public EntityProcessorSimpleRulesRecord setCreatedBy(ULong value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.CREATED_BY</code>.
     * ID of the user who created this row.
     */
    public ULong getCreatedBy() {
        return (ULong) get(19);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.CREATED_AT</code>.
     * Time when this row is created.
     */
    public EntityProcessorSimpleRulesRecord setCreatedAt(LocalDateTime value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.CREATED_AT</code>.
     * Time when this row is created.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(20);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.UPDATED_BY</code>.
     * ID of the user who updated this row.
     */
    public EntityProcessorSimpleRulesRecord setUpdatedBy(ULong value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.UPDATED_BY</code>.
     * ID of the user who updated this row.
     */
    public ULong getUpdatedBy() {
        return (ULong) get(21);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_simple_rules.UPDATED_AT</code>.
     * Time when this row is updated.
     */
    public EntityProcessorSimpleRulesRecord setUpdatedAt(LocalDateTime value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_simple_rules.UPDATED_AT</code>.
     * Time when this row is updated.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(22);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EntityProcessorSimpleRulesRecord
     */
    public EntityProcessorSimpleRulesRecord() {
        super(EntityProcessorSimpleRules.ENTITY_PROCESSOR_SIMPLE_RULES);
    }

    /**
     * Create a detached, initialised EntityProcessorSimpleRulesRecord
     */
    public EntityProcessorSimpleRulesRecord(ULong id, String appCode, String clientCode, String code, String name, String description, Integer version, ULong productTemplateRuleId, ULong productStageRuleId, Boolean negate, Boolean hasParent, String field, ComparisonOperator comparisonOperator, ValueContainer value, Boolean isValueField, Boolean isToValueField, ComparisonOperator matchOperator, Boolean tempActive, Boolean isActive, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(EntityProcessorSimpleRules.ENTITY_PROCESSOR_SIMPLE_RULES);

        setId(id);
        setAppCode(appCode);
        setClientCode(clientCode);
        setCode(code);
        setName(name);
        setDescription(description);
        setVersion(version);
        setProductTemplateRuleId(productTemplateRuleId);
        setProductStageRuleId(productStageRuleId);
        setNegate(negate);
        setHasParent(hasParent);
        setField(field);
        setComparisonOperator(comparisonOperator);
        setValue(value);
        setIsValueField(isValueField);
        setIsToValueField(isToValueField);
        setMatchOperator(matchOperator);
        setTempActive(tempActive);
        setIsActive(isActive);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
