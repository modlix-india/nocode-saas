/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.entity.processor.jooq.tables;


import com.fincity.saas.entity.processor.enums.AssignmentType;
import com.fincity.saas.entity.processor.jooq.EntityProcessor;
import com.fincity.saas.entity.processor.jooq.Keys;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorProductTemplates.EntityProcessorProductTemplatesPath;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorStages.EntityProcessorStagesPath;
import com.fincity.saas.entity.processor.jooq.tables.records.EntityProcessorProductTemplatesWalkInFormsRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.InverseForeignKey;
import org.jooq.Name;
import org.jooq.Path;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.Record;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.EnumConverter;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EntityProcessorProductTemplatesWalkInForms extends TableImpl<EntityProcessorProductTemplatesWalkInFormsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms</code>
     */
    public static final EntityProcessorProductTemplatesWalkInForms ENTITY_PROCESSOR_PRODUCT_TEMPLATES_WALK_IN_FORMS = new EntityProcessorProductTemplatesWalkInForms();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EntityProcessorProductTemplatesWalkInFormsRecord> getRecordType() {
        return EntityProcessorProductTemplatesWalkInFormsRecord.class;
    }

    /**
     * The column
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms.ID</code>.
     * Primary key.
     */
    public final TableField<EntityProcessorProductTemplatesWalkInFormsRecord, ULong> ID = createField(DSL.name("ID"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "Primary key.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms.APP_CODE</code>.
     * App Code on which this Product template walk in form was created.
     */
    public final TableField<EntityProcessorProductTemplatesWalkInFormsRecord, String> APP_CODE = createField(DSL.name("APP_CODE"), SQLDataType.CHAR(64).nullable(false), this, "App Code on which this Product template walk in form was created.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms.CLIENT_CODE</code>.
     * Client Code who created this Product template walk in form.
     */
    public final TableField<EntityProcessorProductTemplatesWalkInFormsRecord, String> CLIENT_CODE = createField(DSL.name("CLIENT_CODE"), SQLDataType.CHAR(8).nullable(false), this, "Client Code who created this Product template walk in form.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms.CODE</code>.
     * Unique Code to identify this row.
     */
    public final TableField<EntityProcessorProductTemplatesWalkInFormsRecord, String> CODE = createField(DSL.name("CODE"), SQLDataType.CHAR(22).nullable(false), this, "Unique Code to identify this row.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms.NAME</code>.
     * Name of the Product template walk in form.
     */
    public final TableField<EntityProcessorProductTemplatesWalkInFormsRecord, String> NAME = createField(DSL.name("NAME"), SQLDataType.VARCHAR(512).nullable(false), this, "Name of the Product template walk in form.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms.DESCRIPTION</code>.
     * Description for the Product template walk in form.
     */
    public final TableField<EntityProcessorProductTemplatesWalkInFormsRecord, String> DESCRIPTION = createField(DSL.name("DESCRIPTION"), SQLDataType.CLOB, this, "Description for the Product template walk in form.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms.PRODUCT_TEMPLATE_ID</code>.
     * Product related to this template walk in form.
     */
    public final TableField<EntityProcessorProductTemplatesWalkInFormsRecord, ULong> PRODUCT_TEMPLATE_ID = createField(DSL.name("PRODUCT_TEMPLATE_ID"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "Product related to this template walk in form.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms.STAGE_ID</code>.
     * Status for this Product template walk in form.
     */
    public final TableField<EntityProcessorProductTemplatesWalkInFormsRecord, ULong> STAGE_ID = createField(DSL.name("STAGE_ID"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "Status for this Product template walk in form.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms.STATUS_ID</code>.
     * Sub Status for this template walk in form.
     */
    public final TableField<EntityProcessorProductTemplatesWalkInFormsRecord, ULong> STATUS_ID = createField(DSL.name("STATUS_ID"), SQLDataType.BIGINTUNSIGNED, this, "Sub Status for this template walk in form.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms.ASSIGNMENT_TYPE</code>.
     * Assign type can be Deal flow or Manual
     */
    public final TableField<EntityProcessorProductTemplatesWalkInFormsRecord, AssignmentType> ASSIGNMENT_TYPE = createField(DSL.name("ASSIGNMENT_TYPE"), SQLDataType.VARCHAR(9).nullable(false).defaultValue(DSL.inline("DEAL_FLOW", SQLDataType.VARCHAR)), this, "Assign type can be Deal flow or Manual", new EnumConverter<String, AssignmentType>(String.class, AssignmentType.class));

    /**
     * The column
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms.TEMP_ACTIVE</code>.
     * Temporary active flag for this product template walk in form.
     */
    public final TableField<EntityProcessorProductTemplatesWalkInFormsRecord, Boolean> TEMP_ACTIVE = createField(DSL.name("TEMP_ACTIVE"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BOOLEAN)), this, "Temporary active flag for this product template walk in form.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms.IS_ACTIVE</code>.
     * Flag to check if this product template walk in form is active or not.
     */
    public final TableField<EntityProcessorProductTemplatesWalkInFormsRecord, Boolean> IS_ACTIVE = createField(DSL.name("IS_ACTIVE"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.inline("1", SQLDataType.BOOLEAN)), this, "Flag to check if this product template walk in form is active or not.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms.CREATED_BY</code>.
     * ID of the user who created this row.
     */
    public final TableField<EntityProcessorProductTemplatesWalkInFormsRecord, ULong> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.BIGINTUNSIGNED, this, "ID of the user who created this row.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms.CREATED_AT</code>.
     * Time when this row is created.
     */
    public final TableField<EntityProcessorProductTemplatesWalkInFormsRecord, LocalDateTime> CREATED_AT = createField(DSL.name("CREATED_AT"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field(DSL.raw("CURRENT_TIMESTAMP"), SQLDataType.LOCALDATETIME)), this, "Time when this row is created.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms.UPDATED_BY</code>.
     * ID of the user who updated this row.
     */
    public final TableField<EntityProcessorProductTemplatesWalkInFormsRecord, ULong> UPDATED_BY = createField(DSL.name("UPDATED_BY"), SQLDataType.BIGINTUNSIGNED, this, "ID of the user who updated this row.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms.UPDATED_AT</code>.
     * Time when this row is updated.
     */
    public final TableField<EntityProcessorProductTemplatesWalkInFormsRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("UPDATED_AT"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field(DSL.raw("CURRENT_TIMESTAMP"), SQLDataType.LOCALDATETIME)), this, "Time when this row is updated.");

    private EntityProcessorProductTemplatesWalkInForms(Name alias, Table<EntityProcessorProductTemplatesWalkInFormsRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private EntityProcessorProductTemplatesWalkInForms(Name alias, Table<EntityProcessorProductTemplatesWalkInFormsRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table(), where);
    }

    /**
     * Create an aliased
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms</code>
     * table reference
     */
    public EntityProcessorProductTemplatesWalkInForms(String alias) {
        this(DSL.name(alias), ENTITY_PROCESSOR_PRODUCT_TEMPLATES_WALK_IN_FORMS);
    }

    /**
     * Create an aliased
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms</code>
     * table reference
     */
    public EntityProcessorProductTemplatesWalkInForms(Name alias) {
        this(alias, ENTITY_PROCESSOR_PRODUCT_TEMPLATES_WALK_IN_FORMS);
    }

    /**
     * Create a
     * <code>entity_processor.entity_processor_product_templates_walk_in_forms</code>
     * table reference
     */
    public EntityProcessorProductTemplatesWalkInForms() {
        this(DSL.name("entity_processor_product_templates_walk_in_forms"), null);
    }

    public <O extends Record> EntityProcessorProductTemplatesWalkInForms(Table<O> path, ForeignKey<O, EntityProcessorProductTemplatesWalkInFormsRecord> childPath, InverseForeignKey<O, EntityProcessorProductTemplatesWalkInFormsRecord> parentPath) {
        super(path, childPath, parentPath, ENTITY_PROCESSOR_PRODUCT_TEMPLATES_WALK_IN_FORMS);
    }

    /**
     * A subtype implementing {@link Path} for simplified path-based joins.
     */
    public static class EntityProcessorProductTemplatesWalkInFormsPath extends EntityProcessorProductTemplatesWalkInForms implements Path<EntityProcessorProductTemplatesWalkInFormsRecord> {

        private static final long serialVersionUID = 1L;
        public <O extends Record> EntityProcessorProductTemplatesWalkInFormsPath(Table<O> path, ForeignKey<O, EntityProcessorProductTemplatesWalkInFormsRecord> childPath, InverseForeignKey<O, EntityProcessorProductTemplatesWalkInFormsRecord> parentPath) {
            super(path, childPath, parentPath);
        }
        private EntityProcessorProductTemplatesWalkInFormsPath(Name alias, Table<EntityProcessorProductTemplatesWalkInFormsRecord> aliased) {
            super(alias, aliased);
        }

        @Override
        public EntityProcessorProductTemplatesWalkInFormsPath as(String alias) {
            return new EntityProcessorProductTemplatesWalkInFormsPath(DSL.name(alias), this);
        }

        @Override
        public EntityProcessorProductTemplatesWalkInFormsPath as(Name alias) {
            return new EntityProcessorProductTemplatesWalkInFormsPath(alias, this);
        }

        @Override
        public EntityProcessorProductTemplatesWalkInFormsPath as(Table<?> alias) {
            return new EntityProcessorProductTemplatesWalkInFormsPath(alias.getQualifiedName(), this);
        }
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : EntityProcessor.ENTITY_PROCESSOR;
    }

    @Override
    public Identity<EntityProcessorProductTemplatesWalkInFormsRecord, ULong> getIdentity() {
        return (Identity<EntityProcessorProductTemplatesWalkInFormsRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<EntityProcessorProductTemplatesWalkInFormsRecord> getPrimaryKey() {
        return Keys.KEY_ENTITY_PROCESSOR_PRODUCT_TEMPLATES_WALK_IN_FORMS_PRIMARY;
    }

    @Override
    public List<UniqueKey<EntityProcessorProductTemplatesWalkInFormsRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_ENTITY_PROCESSOR_PRODUCT_TEMPLATES_WALK_IN_FORMS_UK1_PRODUCT_TEMPLATES_WALK_IN_FORMS_CODE, Keys.KEY_ENTITY_PROCESSOR_PRODUCT_TEMPLATES_WALK_IN_FORMS_UK2_PRODUCT_TEMPLATES_WALK_IN_FORMS_PRODUCT_TEMPLATE_ID);
    }

    @Override
    public List<ForeignKey<EntityProcessorProductTemplatesWalkInFormsRecord, ?>> getReferences() {
        return Arrays.asList(Keys.FK1_PRODUCT_TEMPLATES_WALK_IN_FORMS_PRODUCT_ID, Keys.FK2_PRODUCT_TEMPLATES_WALK_IN_FORMS_STAGE_ID, Keys.FK3_PRODUCT_TEMPLATES_WALK_IN_FORMS_STATUS_ID);
    }

    private transient EntityProcessorProductTemplatesPath _entityProcessorProductTemplates;

    /**
     * Get the implicit join path to the
     * <code>entity_processor.entity_processor_product_templates</code> table.
     */
    public EntityProcessorProductTemplatesPath entityProcessorProductTemplates() {
        if (_entityProcessorProductTemplates == null)
            _entityProcessorProductTemplates = new EntityProcessorProductTemplatesPath(this, Keys.FK1_PRODUCT_TEMPLATES_WALK_IN_FORMS_PRODUCT_ID, null);

        return _entityProcessorProductTemplates;
    }

    private transient EntityProcessorStagesPath _fk2ProductTemplatesWalkInFormsStageId;

    /**
     * Get the implicit join path to the
     * <code>entity_processor.entity_processor_stages</code> table, via the
     * <code>FK2_PRODUCT_TEMPLATES_WALK_IN_FORMS_STAGE_ID</code> key.
     */
    public EntityProcessorStagesPath fk2ProductTemplatesWalkInFormsStageId() {
        if (_fk2ProductTemplatesWalkInFormsStageId == null)
            _fk2ProductTemplatesWalkInFormsStageId = new EntityProcessorStagesPath(this, Keys.FK2_PRODUCT_TEMPLATES_WALK_IN_FORMS_STAGE_ID, null);

        return _fk2ProductTemplatesWalkInFormsStageId;
    }

    private transient EntityProcessorStagesPath _fk3ProductTemplatesWalkInFormsStatusId;

    /**
     * Get the implicit join path to the
     * <code>entity_processor.entity_processor_stages</code> table, via the
     * <code>FK3_PRODUCT_TEMPLATES_WALK_IN_FORMS_STATUS_ID</code> key.
     */
    public EntityProcessorStagesPath fk3ProductTemplatesWalkInFormsStatusId() {
        if (_fk3ProductTemplatesWalkInFormsStatusId == null)
            _fk3ProductTemplatesWalkInFormsStatusId = new EntityProcessorStagesPath(this, Keys.FK3_PRODUCT_TEMPLATES_WALK_IN_FORMS_STATUS_ID, null);

        return _fk3ProductTemplatesWalkInFormsStatusId;
    }

    @Override
    public EntityProcessorProductTemplatesWalkInForms as(String alias) {
        return new EntityProcessorProductTemplatesWalkInForms(DSL.name(alias), this);
    }

    @Override
    public EntityProcessorProductTemplatesWalkInForms as(Name alias) {
        return new EntityProcessorProductTemplatesWalkInForms(alias, this);
    }

    @Override
    public EntityProcessorProductTemplatesWalkInForms as(Table<?> alias) {
        return new EntityProcessorProductTemplatesWalkInForms(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityProcessorProductTemplatesWalkInForms rename(String name) {
        return new EntityProcessorProductTemplatesWalkInForms(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityProcessorProductTemplatesWalkInForms rename(Name name) {
        return new EntityProcessorProductTemplatesWalkInForms(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityProcessorProductTemplatesWalkInForms rename(Table<?> name) {
        return new EntityProcessorProductTemplatesWalkInForms(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public EntityProcessorProductTemplatesWalkInForms where(Condition condition) {
        return new EntityProcessorProductTemplatesWalkInForms(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public EntityProcessorProductTemplatesWalkInForms where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public EntityProcessorProductTemplatesWalkInForms where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public EntityProcessorProductTemplatesWalkInForms where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public EntityProcessorProductTemplatesWalkInForms where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public EntityProcessorProductTemplatesWalkInForms where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public EntityProcessorProductTemplatesWalkInForms where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public EntityProcessorProductTemplatesWalkInForms where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public EntityProcessorProductTemplatesWalkInForms whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public EntityProcessorProductTemplatesWalkInForms whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
