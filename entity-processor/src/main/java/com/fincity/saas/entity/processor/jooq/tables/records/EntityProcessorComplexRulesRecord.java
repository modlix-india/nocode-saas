/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.entity.processor.jooq.tables.records;


import com.fincity.saas.entity.processor.enums.rule.LogicalOperator;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorComplexRules;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EntityProcessorComplexRulesRecord extends UpdatableRecordImpl<EntityProcessorComplexRulesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>entity_processor.entity_processor_complex_rules.ID</code>. Primary
     * key.
     */
    public EntityProcessorComplexRulesRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_complex_rules.ID</code>. Primary
     * key.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_complex_rules.APP_CODE</code>.
     * App Code on which this Complex Rule was created.
     */
    public EntityProcessorComplexRulesRecord setAppCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_complex_rules.APP_CODE</code>.
     * App Code on which this Complex Rule was created.
     */
    public String getAppCode() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_complex_rules.CLIENT_CODE</code>.
     * Client Code who created this Complex Rule.
     */
    public EntityProcessorComplexRulesRecord setClientCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_complex_rules.CLIENT_CODE</code>.
     * Client Code who created this Complex Rule.
     */
    public String getClientCode() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_complex_rules.CODE</code>. Unique
     * Code to identify this row.
     */
    public EntityProcessorComplexRulesRecord setCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_complex_rules.CODE</code>. Unique
     * Code to identify this row.
     */
    public String getCode() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_complex_rules.NAME</code>. Name
     * of the Complex Rule.
     */
    public EntityProcessorComplexRulesRecord setName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_complex_rules.NAME</code>. Name
     * of the Complex Rule.
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_complex_rules.DESCRIPTION</code>.
     * Description for the Complex Rule.
     */
    public EntityProcessorComplexRulesRecord setDescription(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_complex_rules.DESCRIPTION</code>.
     * Description for the Complex Rule.
     */
    public String getDescription() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_complex_rules.VERSION</code>.
     * Version of this Complex Rule.
     */
    public EntityProcessorComplexRulesRecord setVersion(Integer value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_complex_rules.VERSION</code>.
     * Version of this Complex Rule.
     */
    public Integer getVersion() {
        return (Integer) get(6);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_complex_rules.PRODUCT_TEMPLATE_RULE_ID</code>.
     * Product Template Rule ID related to this Complex Rule.
     */
    public EntityProcessorComplexRulesRecord setProductTemplateRuleId(ULong value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_complex_rules.PRODUCT_TEMPLATE_RULE_ID</code>.
     * Product Template Rule ID related to this Complex Rule.
     */
    public ULong getProductTemplateRuleId() {
        return (ULong) get(7);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_complex_rules.PRODUCT_STAGE_RULE_ID</code>.
     * Product Stage Rule ID related to this Complex Rule.
     */
    public EntityProcessorComplexRulesRecord setProductStageRuleId(ULong value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_complex_rules.PRODUCT_STAGE_RULE_ID</code>.
     * Product Stage Rule ID related to this Complex Rule.
     */
    public ULong getProductStageRuleId() {
        return (ULong) get(8);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_complex_rules.NEGATE</code>. Flag
     * to check if this Complex Rule is negative.
     */
    public EntityProcessorComplexRulesRecord setNegate(Byte value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_complex_rules.NEGATE</code>. Flag
     * to check if this Complex Rule is negative.
     */
    public Byte getNegate() {
        return (Byte) get(9);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_complex_rules.PARENT_CONDITION_ID</code>.
     * Parent Rule ID for this Complex Rule.
     */
    public EntityProcessorComplexRulesRecord setParentConditionId(ULong value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_complex_rules.PARENT_CONDITION_ID</code>.
     * Parent Rule ID for this Complex Rule.
     */
    public ULong getParentConditionId() {
        return (ULong) get(10);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_complex_rules.LOGICAL_OPERATOR</code>.
     * Logical operator for this Complex Rule.
     */
    public EntityProcessorComplexRulesRecord setLogicalOperator(LogicalOperator value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_complex_rules.LOGICAL_OPERATOR</code>.
     * Logical operator for this Complex Rule.
     */
    public LogicalOperator getLogicalOperator() {
        return (LogicalOperator) get(11);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_complex_rules.TEMP_ACTIVE</code>.
     * Temporary active flag for this Complex Rule.
     */
    public EntityProcessorComplexRulesRecord setTempActive(Byte value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_complex_rules.TEMP_ACTIVE</code>.
     * Temporary active flag for this Complex Rule.
     */
    public Byte getTempActive() {
        return (Byte) get(12);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_complex_rules.IS_ACTIVE</code>.
     * Flag to check if this Complex Rule is active or not.
     */
    public EntityProcessorComplexRulesRecord setIsActive(Byte value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_complex_rules.IS_ACTIVE</code>.
     * Flag to check if this Complex Rule is active or not.
     */
    public Byte getIsActive() {
        return (Byte) get(13);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_complex_rules.CREATED_BY</code>.
     * ID of the user who created this row.
     */
    public EntityProcessorComplexRulesRecord setCreatedBy(ULong value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_complex_rules.CREATED_BY</code>.
     * ID of the user who created this row.
     */
    public ULong getCreatedBy() {
        return (ULong) get(14);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_complex_rules.CREATED_AT</code>.
     * Time when this row is created.
     */
    public EntityProcessorComplexRulesRecord setCreatedAt(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_complex_rules.CREATED_AT</code>.
     * Time when this row is created.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_complex_rules.UPDATED_BY</code>.
     * ID of the user who updated this row.
     */
    public EntityProcessorComplexRulesRecord setUpdatedBy(ULong value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_complex_rules.UPDATED_BY</code>.
     * ID of the user who updated this row.
     */
    public ULong getUpdatedBy() {
        return (ULong) get(16);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_complex_rules.UPDATED_AT</code>.
     * Time when this row is updated.
     */
    public EntityProcessorComplexRulesRecord setUpdatedAt(LocalDateTime value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_complex_rules.UPDATED_AT</code>.
     * Time when this row is updated.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(17);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EntityProcessorComplexRulesRecord
     */
    public EntityProcessorComplexRulesRecord() {
        super(EntityProcessorComplexRules.ENTITY_PROCESSOR_COMPLEX_RULES);
    }

    /**
     * Create a detached, initialised EntityProcessorComplexRulesRecord
     */
    public EntityProcessorComplexRulesRecord(ULong id, String appCode, String clientCode, String code, String name, String description, Integer version, ULong productTemplateRuleId, ULong productStageRuleId, Byte negate, ULong parentConditionId, LogicalOperator logicalOperator, Byte tempActive, Byte isActive, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(EntityProcessorComplexRules.ENTITY_PROCESSOR_COMPLEX_RULES);

        setId(id);
        setAppCode(appCode);
        setClientCode(clientCode);
        setCode(code);
        setName(name);
        setDescription(description);
        setVersion(version);
        setProductTemplateRuleId(productTemplateRuleId);
        setProductStageRuleId(productStageRuleId);
        setNegate(negate);
        setParentConditionId(parentConditionId);
        setLogicalOperator(logicalOperator);
        setTempActive(tempActive);
        setIsActive(isActive);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetTouchedOnNotNull();
    }
}
