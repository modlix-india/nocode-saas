/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.entity.processor.jooq.tables.records;


import com.fincity.saas.entity.processor.enums.Platform;
import com.fincity.saas.entity.processor.enums.rule.DistributionType;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorProductRules;

import java.time.LocalDateTime;
import java.util.Map;

import org.jooq.JSON;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EntityProcessorProductRulesRecord extends UpdatableRecordImpl<EntityProcessorProductRulesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.ID</code>. Primary
     * key.
     */
    public EntityProcessorProductRulesRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.ID</code>. Primary
     * key.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.APP_CODE</code>.
     * App Code on which this Product Rule Config was created.
     */
    public EntityProcessorProductRulesRecord setAppCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.APP_CODE</code>.
     * App Code on which this Product Rule Config was created.
     */
    public String getAppCode() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.CLIENT_CODE</code>.
     * Client Code who created this Product Rule Config.
     */
    public EntityProcessorProductRulesRecord setClientCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.CLIENT_CODE</code>.
     * Client Code who created this Product Rule Config.
     */
    public String getClientCode() {
        return (String) get(2);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.CODE</code>. Unique
     * Code to identify this row.
     */
    public EntityProcessorProductRulesRecord setCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.CODE</code>. Unique
     * Code to identify this row.
     */
    public String getCode() {
        return (String) get(3);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.NAME</code>. Name
     * of the Product Rule Config.
     */
    public EntityProcessorProductRulesRecord setName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.NAME</code>. Name
     * of the Product Rule Config.
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.DESCRIPTION</code>.
     * Description for the Product Rule Config.
     */
    public EntityProcessorProductRulesRecord setDescription(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.DESCRIPTION</code>.
     * Description for the Product Rule Config.
     */
    public String getDescription() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.ADDED_BY_USER_ID</code>.
     * User which added this Product Rule Config.
     */
    public EntityProcessorProductRulesRecord setAddedByUserId(ULong value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.ADDED_BY_USER_ID</code>.
     * User which added this Product Rule Config.
     */
    public ULong getAddedByUserId() {
        return (ULong) get(6);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.PRODUCT_ID</code>.
     * Product Rule ID related to this Product Rule Config.
     */
    public EntityProcessorProductRulesRecord setProductId(ULong value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.PRODUCT_ID</code>.
     * Product Rule ID related to this Product Rule Config.
     */
    public ULong getProductId() {
        return (ULong) get(7);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.PLATFORM</code>.
     * Platform is where this stage will be displayed in CRM, can be GLOBAL,
     * PRE_QUALIFICATION, QUALIFICATION or MAIN.
     */
    public EntityProcessorProductRulesRecord setPlatform(Platform value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.PLATFORM</code>.
     * Platform is where this stage will be displayed in CRM, can be GLOBAL,
     * PRE_QUALIFICATION, QUALIFICATION or MAIN.
     */
    public Platform getPlatform() {
        return (Platform) get(8);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.BREAK_AT_FIRST_MATCH</code>.
     * Flag to check if execution should break at first match.
     */
    public EntityProcessorProductRulesRecord setBreakAtFirstMatch(Byte value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.BREAK_AT_FIRST_MATCH</code>.
     * Flag to check if execution should break at first match.
     */
    public Byte getBreakAtFirstMatch() {
        return (Byte) get(9);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.EXECUTE_ONLY_IF_ALL_PREVIOUS_MATCH</code>.
     * Flag to check if execution should only happen if all previous rules
     * match.
     */
    public EntityProcessorProductRulesRecord setExecuteOnlyIfAllPreviousMatch(Byte value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.EXECUTE_ONLY_IF_ALL_PREVIOUS_MATCH</code>.
     * Flag to check if execution should only happen if all previous rules
     * match.
     */
    public Byte getExecuteOnlyIfAllPreviousMatch() {
        return (Byte) get(10);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.EXECUTE_ONLY_IF_ALL_PREVIOUS_NOT_MATCH</code>.
     * Flag to check if execution should only happen if all previous rules do
     * not match.
     */
    public EntityProcessorProductRulesRecord setExecuteOnlyIfAllPreviousNotMatch(Byte value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.EXECUTE_ONLY_IF_ALL_PREVIOUS_NOT_MATCH</code>.
     * Flag to check if execution should only happen if all previous rules do
     * not match.
     */
    public Byte getExecuteOnlyIfAllPreviousNotMatch() {
        return (Byte) get(11);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.CONTINUE_ON_NO_MATCH</code>.
     * Flag to check if execution should continue on no match.
     */
    public EntityProcessorProductRulesRecord setContinueOnNoMatch(Byte value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.CONTINUE_ON_NO_MATCH</code>.
     * Flag to check if execution should continue on no match.
     */
    public Byte getContinueOnNoMatch() {
        return (Byte) get(12);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.RULES</code>. Rules
     * for this Product Rule Config.
     */
    public EntityProcessorProductRulesRecord setRules(Map value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.RULES</code>. Rules
     * for this Product Rule Config.
     */
    public Map getRules() {
        return (Map) get(13);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.USER_DISTRIBUTION_TYPE</code>.
     * User distribution strategy for this rule.
     */
    public EntityProcessorProductRulesRecord setUserDistributionType(DistributionType value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.USER_DISTRIBUTION_TYPE</code>.
     * User distribution strategy for this rule.
     */
    public DistributionType getUserDistributionType() {
        return (DistributionType) get(14);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.USER_DISTRIBUTIONS</code>.
     * User distributions for this rule.
     */
    public EntityProcessorProductRulesRecord setUserDistributions(JSON value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.USER_DISTRIBUTIONS</code>.
     * User distributions for this rule.
     */
    public JSON getUserDistributions() {
        return (JSON) get(15);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.LAST_USED_USER_ID</code>.
     * Last User id used in this rule.
     */
    public EntityProcessorProductRulesRecord setLastUsedUserId(ULong value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.LAST_USED_USER_ID</code>.
     * Last User id used in this rule.
     */
    public ULong getLastUsedUserId() {
        return (ULong) get(16);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.TEMP_ACTIVE</code>.
     * Temporary active flag for this product rule config.
     */
    public EntityProcessorProductRulesRecord setTempActive(Byte value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.TEMP_ACTIVE</code>.
     * Temporary active flag for this product rule config.
     */
    public Byte getTempActive() {
        return (Byte) get(17);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.IS_ACTIVE</code>.
     * Flag to check if this product rule config is active or not.
     */
    public EntityProcessorProductRulesRecord setIsActive(Byte value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.IS_ACTIVE</code>.
     * Flag to check if this product rule config is active or not.
     */
    public Byte getIsActive() {
        return (Byte) get(18);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.CREATED_BY</code>.
     * ID of the user who created this row.
     */
    public EntityProcessorProductRulesRecord setCreatedBy(ULong value) {
        set(19, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.CREATED_BY</code>.
     * ID of the user who created this row.
     */
    public ULong getCreatedBy() {
        return (ULong) get(19);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.CREATED_AT</code>.
     * Time when this row is created.
     */
    public EntityProcessorProductRulesRecord setCreatedAt(LocalDateTime value) {
        set(20, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.CREATED_AT</code>.
     * Time when this row is created.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(20);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.UPDATED_BY</code>.
     * ID of the user who updated this row.
     */
    public EntityProcessorProductRulesRecord setUpdatedBy(ULong value) {
        set(21, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.UPDATED_BY</code>.
     * ID of the user who updated this row.
     */
    public ULong getUpdatedBy() {
        return (ULong) get(21);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_product_rules.UPDATED_AT</code>.
     * Time when this row is updated.
     */
    public EntityProcessorProductRulesRecord setUpdatedAt(LocalDateTime value) {
        set(22, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_product_rules.UPDATED_AT</code>.
     * Time when this row is updated.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(22);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EntityProcessorProductRulesRecord
     */
    public EntityProcessorProductRulesRecord() {
        super(EntityProcessorProductRules.ENTITY_PROCESSOR_PRODUCT_RULES);
    }

    /**
     * Create a detached, initialised EntityProcessorProductRulesRecord
     */
    public EntityProcessorProductRulesRecord(ULong id, String appCode, String clientCode, String code, String name, String description, ULong addedByUserId, ULong productId, Platform platform, Byte breakAtFirstMatch, Byte executeOnlyIfAllPreviousMatch, Byte executeOnlyIfAllPreviousNotMatch, Byte continueOnNoMatch, Map rules, DistributionType userDistributionType, JSON userDistributions, ULong lastUsedUserId, Byte tempActive, Byte isActive, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(EntityProcessorProductRules.ENTITY_PROCESSOR_PRODUCT_RULES);

        setId(id);
        setAppCode(appCode);
        setClientCode(clientCode);
        setCode(code);
        setName(name);
        setDescription(description);
        setAddedByUserId(addedByUserId);
        setProductId(productId);
        setPlatform(platform);
        setBreakAtFirstMatch(breakAtFirstMatch);
        setExecuteOnlyIfAllPreviousMatch(executeOnlyIfAllPreviousMatch);
        setExecuteOnlyIfAllPreviousNotMatch(executeOnlyIfAllPreviousNotMatch);
        setContinueOnNoMatch(continueOnNoMatch);
        setRules(rules);
        setUserDistributionType(userDistributionType);
        setUserDistributions(userDistributions);
        setLastUsedUserId(lastUsedUserId);
        setTempActive(tempActive);
        setIsActive(isActive);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetTouchedOnNotNull();
    }
}
