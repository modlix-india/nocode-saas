/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.entity.processor.jooq.tables.records;


import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorOwners;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EntityProcessorOwnersRecord extends UpdatableRecordImpl<EntityProcessorOwnersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>entity_processor.entity_processor_owners.ID</code>.
     * Primary key.
     */
    public EntityProcessorOwnersRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>entity_processor.entity_processor_owners.ID</code>.
     * Primary key.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_owners.APP_CODE</code>. App Code
     * on which this notification was sent.
     */
    public EntityProcessorOwnersRecord setAppCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_owners.APP_CODE</code>. App Code
     * on which this notification was sent.
     */
    public String getAppCode() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_owners.CLIENT_CODE</code>. Client
     * Code to whom this notification we sent.
     */
    public EntityProcessorOwnersRecord setClientCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_owners.CLIENT_CODE</code>. Client
     * Code to whom this notification we sent.
     */
    public String getClientCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>entity_processor.entity_processor_owners.CODE</code>.
     * Unique Code to identify this row.
     */
    public EntityProcessorOwnersRecord setCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>entity_processor.entity_processor_owners.CODE</code>.
     * Unique Code to identify this row.
     */
    public String getCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>entity_processor.entity_processor_owners.NAME</code>.
     * Name of the Owner. Owner can be anything which will have entities. For
     * Example, Lead and opportunity, Epic and Task, Account and lead.
     */
    public EntityProcessorOwnersRecord setName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>entity_processor.entity_processor_owners.NAME</code>.
     * Name of the Owner. Owner can be anything which will have entities. For
     * Example, Lead and opportunity, Epic and Task, Account and lead.
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_owners.DESCRIPTION</code>.
     * Description for the Owner.
     */
    public EntityProcessorOwnersRecord setDescription(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_owners.DESCRIPTION</code>.
     * Description for the Owner.
     */
    public String getDescription() {
        return (String) get(5);
    }

    /**
     * Setter for <code>entity_processor.entity_processor_owners.VERSION</code>.
     * Version of this row.
     */
    public EntityProcessorOwnersRecord setVersion(ULong value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>entity_processor.entity_processor_owners.VERSION</code>.
     * Version of this row.
     */
    public ULong getVersion() {
        return (ULong) get(6);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_owners.DIAL_CODE</code>. Dial
     * code of the phone number this owner has.
     */
    public EntityProcessorOwnersRecord setDialCode(Short value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_owners.DIAL_CODE</code>. Dial
     * code of the phone number this owner has.
     */
    public Short getDialCode() {
        return (Short) get(7);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_owners.PHONE_NUMBER</code>. Phone
     * number related to this owner.
     */
    public EntityProcessorOwnersRecord setPhoneNumber(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_owners.PHONE_NUMBER</code>. Phone
     * number related to this owner.
     */
    public String getPhoneNumber() {
        return (String) get(8);
    }

    /**
     * Setter for <code>entity_processor.entity_processor_owners.EMAIL</code>.
     * Email related to this owner.
     */
    public EntityProcessorOwnersRecord setEmail(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>entity_processor.entity_processor_owners.EMAIL</code>.
     * Email related to this owner.
     */
    public String getEmail() {
        return (String) get(9);
    }

    /**
     * Setter for <code>entity_processor.entity_processor_owners.SOURCE</code>.
     * Source of this owner
     */
    public EntityProcessorOwnersRecord setSource(String value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>entity_processor.entity_processor_owners.SOURCE</code>.
     * Source of this owner
     */
    public String getSource() {
        return (String) get(10);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_owners.SUB_SOURCE</code>. Sub
     * Source of this owner.
     */
    public EntityProcessorOwnersRecord setSubSource(String value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_owners.SUB_SOURCE</code>. Sub
     * Source of this owner.
     */
    public String getSubSource() {
        return (String) get(11);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_owners.TEMP_ACTIVE</code>.
     * Temporary active flag for this product.
     */
    public EntityProcessorOwnersRecord setTempActive(Byte value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_owners.TEMP_ACTIVE</code>.
     * Temporary active flag for this product.
     */
    public Byte getTempActive() {
        return (Byte) get(12);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_owners.IS_ACTIVE</code>. Flag to
     * check if this product is active or not.
     */
    public EntityProcessorOwnersRecord setIsActive(Byte value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_owners.IS_ACTIVE</code>. Flag to
     * check if this product is active or not.
     */
    public Byte getIsActive() {
        return (Byte) get(13);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_owners.CLIENT_ID</code>. Id of
     * client who created this owner.
     */
    public EntityProcessorOwnersRecord setClientId(ULong value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_owners.CLIENT_ID</code>. Id of
     * client who created this owner.
     */
    public ULong getClientId() {
        return (ULong) get(14);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_owners.CREATED_BY</code>. ID of
     * the user who created this row.
     */
    public EntityProcessorOwnersRecord setCreatedBy(ULong value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_owners.CREATED_BY</code>. ID of
     * the user who created this row.
     */
    public ULong getCreatedBy() {
        return (ULong) get(15);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_owners.CREATED_AT</code>. Time
     * when this row is created.
     */
    public EntityProcessorOwnersRecord setCreatedAt(LocalDateTime value) {
        set(16, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_owners.CREATED_AT</code>. Time
     * when this row is created.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_owners.UPDATED_BY</code>. ID of
     * the user who updated this row.
     */
    public EntityProcessorOwnersRecord setUpdatedBy(ULong value) {
        set(17, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_owners.UPDATED_BY</code>. ID of
     * the user who updated this row.
     */
    public ULong getUpdatedBy() {
        return (ULong) get(17);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_owners.UPDATED_AT</code>. Time
     * when this row is updated.
     */
    public EntityProcessorOwnersRecord setUpdatedAt(LocalDateTime value) {
        set(18, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_owners.UPDATED_AT</code>. Time
     * when this row is updated.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(18);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EntityProcessorOwnersRecord
     */
    public EntityProcessorOwnersRecord() {
        super(EntityProcessorOwners.ENTITY_PROCESSOR_OWNERS);
    }

    /**
     * Create a detached, initialised EntityProcessorOwnersRecord
     */
    public EntityProcessorOwnersRecord(ULong id, String appCode, String clientCode, String code, String name, String description, ULong version, Short dialCode, String phoneNumber, String email, String source, String subSource, Byte tempActive, Byte isActive, ULong clientId, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(EntityProcessorOwners.ENTITY_PROCESSOR_OWNERS);

        setId(id);
        setAppCode(appCode);
        setClientCode(clientCode);
        setCode(code);
        setName(name);
        setDescription(description);
        setVersion(version);
        setDialCode(dialCode);
        setPhoneNumber(phoneNumber);
        setEmail(email);
        setSource(source);
        setSubSource(subSource);
        setTempActive(tempActive);
        setIsActive(isActive);
        setClientId(clientId);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }
}
