/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.entity.processor.jooq;


import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorEntities;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorModels;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorProducts;
import com.fincity.saas.entity.processor.jooq.tables.records.EntityProcessorEntitiesRecord;
import com.fincity.saas.entity.processor.jooq.tables.records.EntityProcessorModelsRecord;
import com.fincity.saas.entity.processor.jooq.tables.records.EntityProcessorProductsRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;
import org.jooq.impl.QOM.ForeignKeyRule;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * entity_processor.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<EntityProcessorEntitiesRecord> KEY_ENTITY_PROCESSOR_ENTITIES_PRIMARY = Internal.createUniqueKey(EntityProcessorEntities.ENTITY_PROCESSOR_ENTITIES, DSL.name("KEY_entity_processor_entities_PRIMARY"), new TableField[] { EntityProcessorEntities.ENTITY_PROCESSOR_ENTITIES.ID }, true);
    public static final UniqueKey<EntityProcessorEntitiesRecord> KEY_ENTITY_PROCESSOR_ENTITIES_UK1_ENTITIES_CODE = Internal.createUniqueKey(EntityProcessorEntities.ENTITY_PROCESSOR_ENTITIES, DSL.name("KEY_entity_processor_entities_UK1_ENTITIES_CODE"), new TableField[] { EntityProcessorEntities.ENTITY_PROCESSOR_ENTITIES.CODE }, true);
    public static final UniqueKey<EntityProcessorModelsRecord> KEY_ENTITY_PROCESSOR_MODELS_PRIMARY = Internal.createUniqueKey(EntityProcessorModels.ENTITY_PROCESSOR_MODELS, DSL.name("KEY_entity_processor_models_PRIMARY"), new TableField[] { EntityProcessorModels.ENTITY_PROCESSOR_MODELS.ID }, true);
    public static final UniqueKey<EntityProcessorModelsRecord> KEY_ENTITY_PROCESSOR_MODELS_UK1_MODELS_CODE = Internal.createUniqueKey(EntityProcessorModels.ENTITY_PROCESSOR_MODELS, DSL.name("KEY_entity_processor_models_UK1_modelS_CODE"), new TableField[] { EntityProcessorModels.ENTITY_PROCESSOR_MODELS.CODE }, true);
    public static final UniqueKey<EntityProcessorProductsRecord> KEY_ENTITY_PROCESSOR_PRODUCTS_PRIMARY = Internal.createUniqueKey(EntityProcessorProducts.ENTITY_PROCESSOR_PRODUCTS, DSL.name("KEY_entity_processor_products_PRIMARY"), new TableField[] { EntityProcessorProducts.ENTITY_PROCESSOR_PRODUCTS.ID }, true);
    public static final UniqueKey<EntityProcessorProductsRecord> KEY_ENTITY_PROCESSOR_PRODUCTS_UK1_PRODUCTS_CODE = Internal.createUniqueKey(EntityProcessorProducts.ENTITY_PROCESSOR_PRODUCTS, DSL.name("KEY_entity_processor_products_UK1_PRODUCTS_CODE"), new TableField[] { EntityProcessorProducts.ENTITY_PROCESSOR_PRODUCTS.CODE }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<EntityProcessorEntitiesRecord, EntityProcessorModelsRecord> FK1_ENTITIES_MODEL_ID = Internal.createForeignKey(EntityProcessorEntities.ENTITY_PROCESSOR_ENTITIES, DSL.name("FK1_ENTITIES_MODEL_ID"), new TableField[] { EntityProcessorEntities.ENTITY_PROCESSOR_ENTITIES.MODEL_ID }, Keys.KEY_ENTITY_PROCESSOR_MODELS_PRIMARY, new TableField[] { EntityProcessorModels.ENTITY_PROCESSOR_MODELS.ID }, true, ForeignKeyRule.CASCADE, ForeignKeyRule.CASCADE);
    public static final ForeignKey<EntityProcessorEntitiesRecord, EntityProcessorProductsRecord> FK2_ENTITIES_PRODUCT_ID = Internal.createForeignKey(EntityProcessorEntities.ENTITY_PROCESSOR_ENTITIES, DSL.name("FK2_ENTITIES_PRODUCT_ID"), new TableField[] { EntityProcessorEntities.ENTITY_PROCESSOR_ENTITIES.PRODUCT_ID }, Keys.KEY_ENTITY_PROCESSOR_PRODUCTS_PRIMARY, new TableField[] { EntityProcessorProducts.ENTITY_PROCESSOR_PRODUCTS.ID }, true, ForeignKeyRule.RESTRICT, ForeignKeyRule.CASCADE);
}
