/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.entity.processor.jooq.tables;


import com.fincity.saas.commons.jooq.convertor.jooq.converters.JSONtoClassConverter;
import com.fincity.saas.entity.processor.enums.rule.DistributionType;
import com.fincity.saas.entity.processor.jooq.EntityProcessor;
import com.fincity.saas.entity.processor.jooq.Indexes;
import com.fincity.saas.entity.processor.jooq.Keys;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorComplexRules.EntityProcessorComplexRulesPath;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorProductTemplates.EntityProcessorProductTemplatesPath;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorSimpleRules.EntityProcessorSimpleRulesPath;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorStages.EntityProcessorStagesPath;
import com.fincity.saas.entity.processor.jooq.tables.records.EntityProcessorProductTemplateRulesRecord;
import com.fincity.saas.entity.processor.model.common.UserDistribution;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.InverseForeignKey;
import org.jooq.JSON;
import org.jooq.Name;
import org.jooq.Path;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.Record;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.EnumConverter;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EntityProcessorProductTemplateRules extends TableImpl<EntityProcessorProductTemplateRulesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>entity_processor.entity_processor_product_template_rules</code>
     */
    public static final EntityProcessorProductTemplateRules ENTITY_PROCESSOR_PRODUCT_TEMPLATE_RULES = new EntityProcessorProductTemplateRules();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EntityProcessorProductTemplateRulesRecord> getRecordType() {
        return EntityProcessorProductTemplateRulesRecord.class;
    }

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.ID</code>.
     * Primary key.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, ULong> ID = createField(DSL.name("ID"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "Primary key.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.APP_CODE</code>.
     * App Code on which this Product Template Rule Config was created.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, String> APP_CODE = createField(DSL.name("APP_CODE"), SQLDataType.CHAR(64).nullable(false), this, "App Code on which this Product Template Rule Config was created.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.CLIENT_CODE</code>.
     * Client Code who created this Product Template Rule Config.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, String> CLIENT_CODE = createField(DSL.name("CLIENT_CODE"), SQLDataType.CHAR(8).nullable(false), this, "Client Code who created this Product Template Rule Config.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.CODE</code>.
     * Unique Code to identify this row.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, String> CODE = createField(DSL.name("CODE"), SQLDataType.CHAR(22).nullable(false), this, "Unique Code to identify this row.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.NAME</code>.
     * Name of the Product Template Rule Config.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, String> NAME = createField(DSL.name("NAME"), SQLDataType.VARCHAR(64).nullable(false), this, "Name of the Product Template Rule Config.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.DESCRIPTION</code>.
     * Description for the Product Template Rule Config.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, String> DESCRIPTION = createField(DSL.name("DESCRIPTION"), SQLDataType.CLOB, this, "Description for the Product Template Rule Config.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.PRODUCT_TEMPLATE_ID</code>.
     * Product Template ID related to this Product Template Rule Config.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, ULong> PRODUCT_TEMPLATE_ID = createField(DSL.name("PRODUCT_TEMPLATE_ID"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "Product Template ID related to this Product Template Rule Config.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.STAGE_ID</code>.
     * Stage Id to which this Product Template rule config is assigned
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, ULong> STAGE_ID = createField(DSL.name("STAGE_ID"), SQLDataType.BIGINTUNSIGNED, this, "Stage Id to which this Product Template rule config is assigned");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.ORDER</code>.
     * Order of execution of this rule for a stage
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, UInteger> ORDER = createField(DSL.name("ORDER"), SQLDataType.INTEGERUNSIGNED.nullable(false), this, "Order of execution of this rule for a stage");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.IS_DEFAULT</code>.
     * Flag to tell weather for this stage this is default rule or not.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, Boolean> IS_DEFAULT = createField(DSL.name("IS_DEFAULT"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BOOLEAN)), this, "Flag to tell weather for this stage this is default rule or not.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.BREAK_AT_FIRST_MATCH</code>.
     * Flag to check if execution should break at first match.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, Boolean> BREAK_AT_FIRST_MATCH = createField(DSL.name("BREAK_AT_FIRST_MATCH"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BOOLEAN)), this, "Flag to check if execution should break at first match.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.IS_SIMPLE</code>.
     * Flag to tell weather for this is a simple rule or not.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, Boolean> IS_SIMPLE = createField(DSL.name("IS_SIMPLE"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.inline("1", SQLDataType.BOOLEAN)), this, "Flag to tell weather for this is a simple rule or not.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.IS_COMPLEX</code>.
     * Flag to tell weather for this is a complex rule or not.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, Boolean> IS_COMPLEX = createField(DSL.name("IS_COMPLEX"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BOOLEAN)), this, "Flag to tell weather for this is a complex rule or not.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.USER_DISTRIBUTION_TYPE</code>.
     * User distribution strategy for this rule.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, DistributionType> USER_DISTRIBUTION_TYPE = createField(DSL.name("USER_DISTRIBUTION_TYPE"), SQLDataType.VARCHAR(14).nullable(false).defaultValue(DSL.inline("ROUND_ROBIN", SQLDataType.VARCHAR)), this, "User distribution strategy for this rule.", new EnumConverter<String, DistributionType>(String.class, DistributionType.class));

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.USER_DISTRIBUTION</code>.
     * User distributions for this rule.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, UserDistribution> USER_DISTRIBUTION = createField(DSL.name("USER_DISTRIBUTION"), SQLDataType.JSON, this, "User distributions for this rule.", new JSONtoClassConverter<JSON, UserDistribution>(JSON.class, UserDistribution.class));

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.LAST_ASSIGNED_USER_ID</code>.
     * Last User id used in this rule.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, ULong> LAST_ASSIGNED_USER_ID = createField(DSL.name("LAST_ASSIGNED_USER_ID"), SQLDataType.BIGINTUNSIGNED, this, "Last User id used in this rule.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.TEMP_ACTIVE</code>.
     * Temporary active flag for this Product Template rule config.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, Boolean> TEMP_ACTIVE = createField(DSL.name("TEMP_ACTIVE"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.inline("0", SQLDataType.BOOLEAN)), this, "Temporary active flag for this Product Template rule config.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.IS_ACTIVE</code>.
     * Flag to check if this Product Template rule config is active or not.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, Boolean> IS_ACTIVE = createField(DSL.name("IS_ACTIVE"), SQLDataType.BOOLEAN.nullable(false).defaultValue(DSL.inline("1", SQLDataType.BOOLEAN)), this, "Flag to check if this Product Template rule config is active or not.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.CREATED_BY</code>.
     * ID of the user who created this row.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, ULong> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.BIGINTUNSIGNED, this, "ID of the user who created this row.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.CREATED_AT</code>.
     * Time when this row is created.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, LocalDateTime> CREATED_AT = createField(DSL.name("CREATED_AT"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field(DSL.raw("CURRENT_TIMESTAMP"), SQLDataType.LOCALDATETIME)), this, "Time when this row is created.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.UPDATED_BY</code>.
     * ID of the user who updated this row.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, ULong> UPDATED_BY = createField(DSL.name("UPDATED_BY"), SQLDataType.BIGINTUNSIGNED, this, "ID of the user who updated this row.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_template_rules.UPDATED_AT</code>.
     * Time when this row is updated.
     */
    public final TableField<EntityProcessorProductTemplateRulesRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("UPDATED_AT"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field(DSL.raw("CURRENT_TIMESTAMP"), SQLDataType.LOCALDATETIME)), this, "Time when this row is updated.");

    private EntityProcessorProductTemplateRules(Name alias, Table<EntityProcessorProductTemplateRulesRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private EntityProcessorProductTemplateRules(Name alias, Table<EntityProcessorProductTemplateRulesRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table(), where);
    }

    /**
     * Create an aliased
     * <code>entity_processor.entity_processor_product_template_rules</code>
     * table reference
     */
    public EntityProcessorProductTemplateRules(String alias) {
        this(DSL.name(alias), ENTITY_PROCESSOR_PRODUCT_TEMPLATE_RULES);
    }

    /**
     * Create an aliased
     * <code>entity_processor.entity_processor_product_template_rules</code>
     * table reference
     */
    public EntityProcessorProductTemplateRules(Name alias) {
        this(alias, ENTITY_PROCESSOR_PRODUCT_TEMPLATE_RULES);
    }

    /**
     * Create a
     * <code>entity_processor.entity_processor_product_template_rules</code>
     * table reference
     */
    public EntityProcessorProductTemplateRules() {
        this(DSL.name("entity_processor_product_template_rules"), null);
    }

    public <O extends Record> EntityProcessorProductTemplateRules(Table<O> path, ForeignKey<O, EntityProcessorProductTemplateRulesRecord> childPath, InverseForeignKey<O, EntityProcessorProductTemplateRulesRecord> parentPath) {
        super(path, childPath, parentPath, ENTITY_PROCESSOR_PRODUCT_TEMPLATE_RULES);
    }

    /**
     * A subtype implementing {@link Path} for simplified path-based joins.
     */
    public static class EntityProcessorProductTemplateRulesPath extends EntityProcessorProductTemplateRules implements Path<EntityProcessorProductTemplateRulesRecord> {

        private static final long serialVersionUID = 1L;
        public <O extends Record> EntityProcessorProductTemplateRulesPath(Table<O> path, ForeignKey<O, EntityProcessorProductTemplateRulesRecord> childPath, InverseForeignKey<O, EntityProcessorProductTemplateRulesRecord> parentPath) {
            super(path, childPath, parentPath);
        }
        private EntityProcessorProductTemplateRulesPath(Name alias, Table<EntityProcessorProductTemplateRulesRecord> aliased) {
            super(alias, aliased);
        }

        @Override
        public EntityProcessorProductTemplateRulesPath as(String alias) {
            return new EntityProcessorProductTemplateRulesPath(DSL.name(alias), this);
        }

        @Override
        public EntityProcessorProductTemplateRulesPath as(Name alias) {
            return new EntityProcessorProductTemplateRulesPath(alias, this);
        }

        @Override
        public EntityProcessorProductTemplateRulesPath as(Table<?> alias) {
            return new EntityProcessorProductTemplateRulesPath(alias.getQualifiedName(), this);
        }
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : EntityProcessor.ENTITY_PROCESSOR;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.asList(Indexes.ENTITY_PROCESSOR_PRODUCT_TEMPLATE_RULES_IDX0_PRODUCT_TEMPLATE_RULES_AC_CC);
    }

    @Override
    public Identity<EntityProcessorProductTemplateRulesRecord, ULong> getIdentity() {
        return (Identity<EntityProcessorProductTemplateRulesRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<EntityProcessorProductTemplateRulesRecord> getPrimaryKey() {
        return Keys.KEY_ENTITY_PROCESSOR_PRODUCT_TEMPLATE_RULES_PRIMARY;
    }

    @Override
    public List<UniqueKey<EntityProcessorProductTemplateRulesRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_ENTITY_PROCESSOR_PRODUCT_TEMPLATE_RULES_UK1_PRODUCT_TEMPLATE_RULES_CODE, Keys.KEY_ENTITY_PROCESSOR_PRODUCT_TEMPLATE_RULES_UK2_PRODUCT_TEMPLATE_RULES_PRODUCT_TEMPLATE_ID_STAGE_ID_ORDER);
    }

    @Override
    public List<ForeignKey<EntityProcessorProductTemplateRulesRecord, ?>> getReferences() {
        return Arrays.asList(Keys.FK1_PRODUCT_TEMPLATE_RULES_PRODUCT_TEMPLATE_ID, Keys.FK2_PRODUCT_TEMPLATE_RULES_STAGE_ID);
    }

    private transient EntityProcessorProductTemplatesPath _entityProcessorProductTemplates;

    /**
     * Get the implicit join path to the
     * <code>entity_processor.entity_processor_product_templates</code> table.
     */
    public EntityProcessorProductTemplatesPath entityProcessorProductTemplates() {
        if (_entityProcessorProductTemplates == null)
            _entityProcessorProductTemplates = new EntityProcessorProductTemplatesPath(this, Keys.FK1_PRODUCT_TEMPLATE_RULES_PRODUCT_TEMPLATE_ID, null);

        return _entityProcessorProductTemplates;
    }

    private transient EntityProcessorStagesPath _entityProcessorStages;

    /**
     * Get the implicit join path to the
     * <code>entity_processor.entity_processor_stages</code> table.
     */
    public EntityProcessorStagesPath entityProcessorStages() {
        if (_entityProcessorStages == null)
            _entityProcessorStages = new EntityProcessorStagesPath(this, Keys.FK2_PRODUCT_TEMPLATE_RULES_STAGE_ID, null);

        return _entityProcessorStages;
    }

    private transient EntityProcessorComplexRulesPath _entityProcessorComplexRules;

    /**
     * Get the implicit to-many join path to the
     * <code>entity_processor.entity_processor_complex_rules</code> table
     */
    public EntityProcessorComplexRulesPath entityProcessorComplexRules() {
        if (_entityProcessorComplexRules == null)
            _entityProcessorComplexRules = new EntityProcessorComplexRulesPath(this, null, Keys.FK1_COMPLEX_RULES_PRODUCT_TEMPLATE_RULE_ID.getInverseKey());

        return _entityProcessorComplexRules;
    }

    private transient EntityProcessorSimpleRulesPath _entityProcessorSimpleRules;

    /**
     * Get the implicit to-many join path to the
     * <code>entity_processor.entity_processor_simple_rules</code> table
     */
    public EntityProcessorSimpleRulesPath entityProcessorSimpleRules() {
        if (_entityProcessorSimpleRules == null)
            _entityProcessorSimpleRules = new EntityProcessorSimpleRulesPath(this, null, Keys.FK1_SIMPLE_RULES_PRODUCT_TEMPLATE_RULE_ID.getInverseKey());

        return _entityProcessorSimpleRules;
    }

    @Override
    public EntityProcessorProductTemplateRules as(String alias) {
        return new EntityProcessorProductTemplateRules(DSL.name(alias), this);
    }

    @Override
    public EntityProcessorProductTemplateRules as(Name alias) {
        return new EntityProcessorProductTemplateRules(alias, this);
    }

    @Override
    public EntityProcessorProductTemplateRules as(Table<?> alias) {
        return new EntityProcessorProductTemplateRules(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityProcessorProductTemplateRules rename(String name) {
        return new EntityProcessorProductTemplateRules(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityProcessorProductTemplateRules rename(Name name) {
        return new EntityProcessorProductTemplateRules(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityProcessorProductTemplateRules rename(Table<?> name) {
        return new EntityProcessorProductTemplateRules(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public EntityProcessorProductTemplateRules where(Condition condition) {
        return new EntityProcessorProductTemplateRules(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public EntityProcessorProductTemplateRules where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public EntityProcessorProductTemplateRules where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public EntityProcessorProductTemplateRules where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public EntityProcessorProductTemplateRules where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public EntityProcessorProductTemplateRules where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public EntityProcessorProductTemplateRules where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public EntityProcessorProductTemplateRules where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public EntityProcessorProductTemplateRules whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public EntityProcessorProductTemplateRules whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
