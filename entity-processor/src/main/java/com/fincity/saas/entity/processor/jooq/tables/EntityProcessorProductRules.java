/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.entity.processor.jooq.tables;


import com.fincity.saas.entity.processor.enums.rule.RuleType;
import com.fincity.saas.entity.processor.jooq.EntityProcessor;
import com.fincity.saas.entity.processor.jooq.Keys;
import com.fincity.saas.entity.processor.jooq.enums.EntityProcessorProductRulesRuleType;
import com.fincity.saas.entity.processor.jooq.tables.records.EntityProcessorProductRulesRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.Collection;
import java.util.List;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.PlainSQL;
import org.jooq.QueryPart;
import org.jooq.SQL;
import org.jooq.Schema;
import org.jooq.Select;
import org.jooq.Stringly;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.AutoConverter;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EntityProcessorProductRules extends TableImpl<EntityProcessorProductRulesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of
     * <code>entity_processor.entity_processor_product_rules</code>
     */
    public static final EntityProcessorProductRules ENTITY_PROCESSOR_PRODUCT_RULES = new EntityProcessorProductRules();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EntityProcessorProductRulesRecord> getRecordType() {
        return EntityProcessorProductRulesRecord.class;
    }

    /**
     * The column
     * <code>entity_processor.entity_processor_product_rules.ID</code>. Primary
     * key.
     */
    public final TableField<EntityProcessorProductRulesRecord, ULong> ID = createField(DSL.name("ID"), SQLDataType.BIGINTUNSIGNED.nullable(false).identity(true), this, "Primary key.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_rules.APP_CODE</code>.
     * App Code on which this Product Rule was created.
     */
    public final TableField<EntityProcessorProductRulesRecord, String> APP_CODE = createField(DSL.name("APP_CODE"), SQLDataType.CHAR(64).nullable(false), this, "App Code on which this Product Rule was created.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_rules.CLIENT_CODE</code>.
     * Client Code who created this Product Rule.
     */
    public final TableField<EntityProcessorProductRulesRecord, String> CLIENT_CODE = createField(DSL.name("CLIENT_CODE"), SQLDataType.CHAR(8).nullable(false), this, "Client Code who created this Product Rule.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_rules.CODE</code>. Unique
     * Code to identify this row.
     */
    public final TableField<EntityProcessorProductRulesRecord, String> CODE = createField(DSL.name("CODE"), SQLDataType.CHAR(22).nullable(false), this, "Unique Code to identify this row.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_rules.NAME</code>. Name
     * of the Product Rule.
     */
    public final TableField<EntityProcessorProductRulesRecord, String> NAME = createField(DSL.name("NAME"), SQLDataType.VARCHAR(64).nullable(false), this, "Name of the Product Rule.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_rules.DESCRIPTION</code>.
     * Description for the Product Rule.
     */
    public final TableField<EntityProcessorProductRulesRecord, String> DESCRIPTION = createField(DSL.name("DESCRIPTION"), SQLDataType.CLOB, this, "Description for the Product Rule.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_rules.ADDED_BY_USER_ID</code>.
     * User which added this Product Rule.
     */
    public final TableField<EntityProcessorProductRulesRecord, ULong> ADDED_BY_USER_ID = createField(DSL.name("ADDED_BY_USER_ID"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "User which added this Product Rule.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_rules.ENTITY_ID</code>.
     * Entity ID related to this Product Rule.
     */
    public final TableField<EntityProcessorProductRulesRecord, ULong> ENTITY_ID = createField(DSL.name("ENTITY_ID"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "Entity ID related to this Product Rule.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_rules.RULE_ID</code>.
     * Rule ID related to this Product Rule.
     */
    public final TableField<EntityProcessorProductRulesRecord, ULong> RULE_ID = createField(DSL.name("RULE_ID"), SQLDataType.BIGINTUNSIGNED.nullable(false), this, "Rule ID related to this Product Rule.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_rules.RULE_ORDER</code>.
     * Order of the rule.
     */
    public final TableField<EntityProcessorProductRulesRecord, Integer> RULE_ORDER = createField(DSL.name("RULE_ORDER"), SQLDataType.INTEGER.nullable(false), this, "Order of the rule.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_rules.RULE_TYPE</code>.
     * Type of the Product Rule.
     */
    public final TableField<EntityProcessorProductRulesRecord, RuleType> RULE_TYPE = createField(DSL.name("RULE_TYPE"), SQLDataType.VARCHAR(5).nullable(false).asEnumDataType(EntityProcessorProductRulesRuleType.class), this, "Type of the Product Rule.", new AutoConverter<EntityProcessorProductRulesRuleType, RuleType>(EntityProcessorProductRulesRuleType.class, RuleType.class));

    /**
     * The column
     * <code>entity_processor.entity_processor_product_rules.TEMP_ACTIVE</code>.
     * Temporary active flag for this product rule.
     */
    public final TableField<EntityProcessorProductRulesRecord, Byte> TEMP_ACTIVE = createField(DSL.name("TEMP_ACTIVE"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("0", SQLDataType.TINYINT)), this, "Temporary active flag for this product rule.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_rules.IS_ACTIVE</code>.
     * Flag to check if this product rule is active or not.
     */
    public final TableField<EntityProcessorProductRulesRecord, Byte> IS_ACTIVE = createField(DSL.name("IS_ACTIVE"), SQLDataType.TINYINT.nullable(false).defaultValue(DSL.inline("1", SQLDataType.TINYINT)), this, "Flag to check if this product rule is active or not.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_rules.CREATED_BY</code>.
     * ID of the user who created this row.
     */
    public final TableField<EntityProcessorProductRulesRecord, ULong> CREATED_BY = createField(DSL.name("CREATED_BY"), SQLDataType.BIGINTUNSIGNED, this, "ID of the user who created this row.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_rules.CREATED_AT</code>.
     * Time when this row is created.
     */
    public final TableField<EntityProcessorProductRulesRecord, LocalDateTime> CREATED_AT = createField(DSL.name("CREATED_AT"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field(DSL.raw("CURRENT_TIMESTAMP"), SQLDataType.LOCALDATETIME)), this, "Time when this row is created.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_rules.UPDATED_BY</code>.
     * ID of the user who updated this row.
     */
    public final TableField<EntityProcessorProductRulesRecord, ULong> UPDATED_BY = createField(DSL.name("UPDATED_BY"), SQLDataType.BIGINTUNSIGNED, this, "ID of the user who updated this row.");

    /**
     * The column
     * <code>entity_processor.entity_processor_product_rules.UPDATED_AT</code>.
     * Time when this row is updated.
     */
    public final TableField<EntityProcessorProductRulesRecord, LocalDateTime> UPDATED_AT = createField(DSL.name("UPDATED_AT"), SQLDataType.LOCALDATETIME(0).nullable(false).defaultValue(DSL.field(DSL.raw("CURRENT_TIMESTAMP"), SQLDataType.LOCALDATETIME)), this, "Time when this row is updated.");

    private EntityProcessorProductRules(Name alias, Table<EntityProcessorProductRulesRecord> aliased) {
        this(alias, aliased, (Field<?>[]) null, null);
    }

    private EntityProcessorProductRules(Name alias, Table<EntityProcessorProductRulesRecord> aliased, Field<?>[] parameters, Condition where) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table(), where);
    }

    /**
     * Create an aliased
     * <code>entity_processor.entity_processor_product_rules</code> table
     * reference
     */
    public EntityProcessorProductRules(String alias) {
        this(DSL.name(alias), ENTITY_PROCESSOR_PRODUCT_RULES);
    }

    /**
     * Create an aliased
     * <code>entity_processor.entity_processor_product_rules</code> table
     * reference
     */
    public EntityProcessorProductRules(Name alias) {
        this(alias, ENTITY_PROCESSOR_PRODUCT_RULES);
    }

    /**
     * Create a <code>entity_processor.entity_processor_product_rules</code>
     * table reference
     */
    public EntityProcessorProductRules() {
        this(DSL.name("entity_processor_product_rules"), null);
    }

    @Override
    public Schema getSchema() {
        return aliased() ? null : EntityProcessor.ENTITY_PROCESSOR;
    }

    @Override
    public Identity<EntityProcessorProductRulesRecord, ULong> getIdentity() {
        return (Identity<EntityProcessorProductRulesRecord, ULong>) super.getIdentity();
    }

    @Override
    public UniqueKey<EntityProcessorProductRulesRecord> getPrimaryKey() {
        return Keys.KEY_ENTITY_PROCESSOR_PRODUCT_RULES_PRIMARY;
    }

    @Override
    public List<UniqueKey<EntityProcessorProductRulesRecord>> getUniqueKeys() {
        return Arrays.asList(Keys.KEY_ENTITY_PROCESSOR_PRODUCT_RULES_UK1_PRODUCT_RULES_CODE);
    }

    @Override
    public EntityProcessorProductRules as(String alias) {
        return new EntityProcessorProductRules(DSL.name(alias), this);
    }

    @Override
    public EntityProcessorProductRules as(Name alias) {
        return new EntityProcessorProductRules(alias, this);
    }

    @Override
    public EntityProcessorProductRules as(Table<?> alias) {
        return new EntityProcessorProductRules(alias.getQualifiedName(), this);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityProcessorProductRules rename(String name) {
        return new EntityProcessorProductRules(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityProcessorProductRules rename(Name name) {
        return new EntityProcessorProductRules(name, null);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityProcessorProductRules rename(Table<?> name) {
        return new EntityProcessorProductRules(name.getQualifiedName(), null);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public EntityProcessorProductRules where(Condition condition) {
        return new EntityProcessorProductRules(getQualifiedName(), aliased() ? this : null, null, condition);
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public EntityProcessorProductRules where(Collection<? extends Condition> conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public EntityProcessorProductRules where(Condition... conditions) {
        return where(DSL.and(conditions));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public EntityProcessorProductRules where(Field<Boolean> condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public EntityProcessorProductRules where(SQL condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public EntityProcessorProductRules where(@Stringly.SQL String condition) {
        return where(DSL.condition(condition));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public EntityProcessorProductRules where(@Stringly.SQL String condition, Object... binds) {
        return where(DSL.condition(condition, binds));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    @PlainSQL
    public EntityProcessorProductRules where(@Stringly.SQL String condition, QueryPart... parts) {
        return where(DSL.condition(condition, parts));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public EntityProcessorProductRules whereExists(Select<?> select) {
        return where(DSL.exists(select));
    }

    /**
     * Create an inline derived table from this table
     */
    @Override
    public EntityProcessorProductRules whereNotExists(Select<?> select) {
        return where(DSL.notExists(select));
    }
}
