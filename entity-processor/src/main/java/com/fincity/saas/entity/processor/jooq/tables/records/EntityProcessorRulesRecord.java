/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.entity.processor.jooq.tables.records;


import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorRules;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EntityProcessorRulesRecord extends UpdatableRecordImpl<EntityProcessorRulesRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>entity_processor.entity_processor_rules.ID</code>.
     * Primary key.
     */
    public EntityProcessorRulesRecord setId(ULong value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>entity_processor.entity_processor_rules.ID</code>.
     * Primary key.
     */
    public ULong getId() {
        return (ULong) get(0);
    }

    /**
     * Setter for <code>entity_processor.entity_processor_rules.APP_CODE</code>.
     * App Code on which this Rule was created.
     */
    public EntityProcessorRulesRecord setAppCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>entity_processor.entity_processor_rules.APP_CODE</code>.
     * App Code on which this Rule was created.
     */
    public String getAppCode() {
        return (String) get(1);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_rules.CLIENT_CODE</code>. Client
     * Code who created this Rule.
     */
    public EntityProcessorRulesRecord setClientCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_rules.CLIENT_CODE</code>. Client
     * Code who created this Rule.
     */
    public String getClientCode() {
        return (String) get(2);
    }

    /**
     * Setter for <code>entity_processor.entity_processor_rules.CODE</code>.
     * Unique Code to identify this row.
     */
    public EntityProcessorRulesRecord setCode(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>entity_processor.entity_processor_rules.CODE</code>.
     * Unique Code to identify this row.
     */
    public String getCode() {
        return (String) get(3);
    }

    /**
     * Setter for <code>entity_processor.entity_processor_rules.NAME</code>.
     * Name of the Rule.
     */
    public EntityProcessorRulesRecord setName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>entity_processor.entity_processor_rules.NAME</code>.
     * Name of the Rule.
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_rules.DESCRIPTION</code>.
     * Description for the Rule.
     */
    public EntityProcessorRulesRecord setDescription(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_rules.DESCRIPTION</code>.
     * Description for the Rule.
     */
    public String getDescription() {
        return (String) get(5);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_rules.ADDED_BY_USER_ID</code>.
     * User which added this Rule.
     */
    public EntityProcessorRulesRecord setAddedByUserId(ULong value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_rules.ADDED_BY_USER_ID</code>.
     * User which added this Rule.
     */
    public ULong getAddedByUserId() {
        return (ULong) get(6);
    }

    /**
     * Setter for <code>entity_processor.entity_processor_rules.VERSION</code>.
     * Version of this rule.
     */
    public EntityProcessorRulesRecord setVersion(Integer value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>entity_processor.entity_processor_rules.VERSION</code>.
     * Version of this rule.
     */
    public Integer getVersion() {
        return (Integer) get(7);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_rules.IS_SIMPLE</code>. Flag to
     * check if this rule is simple.
     */
    public EntityProcessorRulesRecord setIsSimple(Byte value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_rules.IS_SIMPLE</code>. Flag to
     * check if this rule is simple.
     */
    public Byte getIsSimple() {
        return (Byte) get(8);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_rules.IS_COMPLEX</code>. Flag to
     * check if this rule is complex.
     */
    public EntityProcessorRulesRecord setIsComplex(Byte value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_rules.IS_COMPLEX</code>. Flag to
     * check if this rule is complex.
     */
    public Byte getIsComplex() {
        return (Byte) get(9);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_rules.TEMP_ACTIVE</code>.
     * Temporary active flag for this rule.
     */
    public EntityProcessorRulesRecord setTempActive(Byte value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_rules.TEMP_ACTIVE</code>.
     * Temporary active flag for this rule.
     */
    public Byte getTempActive() {
        return (Byte) get(10);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_rules.IS_ACTIVE</code>. Flag to
     * check if this rule is active or not.
     */
    public EntityProcessorRulesRecord setIsActive(Byte value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_rules.IS_ACTIVE</code>. Flag to
     * check if this rule is active or not.
     */
    public Byte getIsActive() {
        return (Byte) get(11);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_rules.CREATED_BY</code>. ID of
     * the user who created this row.
     */
    public EntityProcessorRulesRecord setCreatedBy(ULong value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_rules.CREATED_BY</code>. ID of
     * the user who created this row.
     */
    public ULong getCreatedBy() {
        return (ULong) get(12);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_rules.CREATED_AT</code>. Time
     * when this row is created.
     */
    public EntityProcessorRulesRecord setCreatedAt(LocalDateTime value) {
        set(13, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_rules.CREATED_AT</code>. Time
     * when this row is created.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(13);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_rules.UPDATED_BY</code>. ID of
     * the user who updated this row.
     */
    public EntityProcessorRulesRecord setUpdatedBy(ULong value) {
        set(14, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_rules.UPDATED_BY</code>. ID of
     * the user who updated this row.
     */
    public ULong getUpdatedBy() {
        return (ULong) get(14);
    }

    /**
     * Setter for
     * <code>entity_processor.entity_processor_rules.UPDATED_AT</code>. Time
     * when this row is updated.
     */
    public EntityProcessorRulesRecord setUpdatedAt(LocalDateTime value) {
        set(15, value);
        return this;
    }

    /**
     * Getter for
     * <code>entity_processor.entity_processor_rules.UPDATED_AT</code>. Time
     * when this row is updated.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(15);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<ULong> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EntityProcessorRulesRecord
     */
    public EntityProcessorRulesRecord() {
        super(EntityProcessorRules.ENTITY_PROCESSOR_RULES);
    }

    /**
     * Create a detached, initialised EntityProcessorRulesRecord
     */
    public EntityProcessorRulesRecord(ULong id, String appCode, String clientCode, String code, String name, String description, ULong addedByUserId, Integer version, Byte isSimple, Byte isComplex, Byte tempActive, Byte isActive, ULong createdBy, LocalDateTime createdAt, ULong updatedBy, LocalDateTime updatedAt) {
        super(EntityProcessorRules.ENTITY_PROCESSOR_RULES);

        setId(id);
        setAppCode(appCode);
        setClientCode(clientCode);
        setCode(code);
        setName(name);
        setDescription(description);
        setAddedByUserId(addedByUserId);
        setVersion(version);
        setIsSimple(isSimple);
        setIsComplex(isComplex);
        setTempActive(tempActive);
        setIsActive(isActive);
        setCreatedBy(createdBy);
        setCreatedAt(createdAt);
        setUpdatedBy(updatedBy);
        setUpdatedAt(updatedAt);
        resetTouchedOnNotNull();
    }
}
