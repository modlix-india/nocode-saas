/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.entity.processor.jooq;


import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorComplexRules;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorOwners;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorProductRules;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorProductTemplateRules;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorProductTemplates;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorProducts;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorSimpleComplexRuleRelations;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorSimpleRules;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorStages;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorTickets;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.DSL;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EntityProcessor extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>entity_processor</code>
     */
    public static final EntityProcessor ENTITY_PROCESSOR = new EntityProcessor();

    /**
     * The table <code>entity_processor.entity_processor_complex_rules</code>.
     */
    public final EntityProcessorComplexRules ENTITY_PROCESSOR_COMPLEX_RULES = EntityProcessorComplexRules.ENTITY_PROCESSOR_COMPLEX_RULES;

    /**
     * The table <code>entity_processor.entity_processor_owners</code>.
     */
    public final EntityProcessorOwners ENTITY_PROCESSOR_OWNERS = EntityProcessorOwners.ENTITY_PROCESSOR_OWNERS;

    /**
     * The table <code>entity_processor.entity_processor_product_rules</code>.
     */
    public final EntityProcessorProductRules ENTITY_PROCESSOR_PRODUCT_RULES = EntityProcessorProductRules.ENTITY_PROCESSOR_PRODUCT_RULES;

    /**
     * The table
     * <code>entity_processor.entity_processor_product_template_rules</code>.
     */
    public final EntityProcessorProductTemplateRules ENTITY_PROCESSOR_PRODUCT_TEMPLATE_RULES = EntityProcessorProductTemplateRules.ENTITY_PROCESSOR_PRODUCT_TEMPLATE_RULES;

    /**
     * The table
     * <code>entity_processor.entity_processor_product_templates</code>.
     */
    public final EntityProcessorProductTemplates ENTITY_PROCESSOR_PRODUCT_TEMPLATES = EntityProcessorProductTemplates.ENTITY_PROCESSOR_PRODUCT_TEMPLATES;

    /**
     * The table <code>entity_processor.entity_processor_products</code>.
     */
    public final EntityProcessorProducts ENTITY_PROCESSOR_PRODUCTS = EntityProcessorProducts.ENTITY_PROCESSOR_PRODUCTS;

    /**
     * The table
     * <code>entity_processor.entity_processor_simple_complex_rule_relations</code>.
     */
    public final EntityProcessorSimpleComplexRuleRelations ENTITY_PROCESSOR_SIMPLE_COMPLEX_RULE_RELATIONS = EntityProcessorSimpleComplexRuleRelations.ENTITY_PROCESSOR_SIMPLE_COMPLEX_RULE_RELATIONS;

    /**
     * The table <code>entity_processor.entity_processor_simple_rules</code>.
     */
    public final EntityProcessorSimpleRules ENTITY_PROCESSOR_SIMPLE_RULES = EntityProcessorSimpleRules.ENTITY_PROCESSOR_SIMPLE_RULES;

    /**
     * The table <code>entity_processor.entity_processor_stages</code>.
     */
    public final EntityProcessorStages ENTITY_PROCESSOR_STAGES = EntityProcessorStages.ENTITY_PROCESSOR_STAGES;

    /**
     * The table <code>entity_processor.entity_processor_tickets</code>.
     */
    public final EntityProcessorTickets ENTITY_PROCESSOR_TICKETS = EntityProcessorTickets.ENTITY_PROCESSOR_TICKETS;

    /**
     * No further instances allowed
     */
    private EntityProcessor() {
        super(DSL.name("entity_processor"), null, DSL.comment(""));
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            EntityProcessorComplexRules.ENTITY_PROCESSOR_COMPLEX_RULES,
            EntityProcessorOwners.ENTITY_PROCESSOR_OWNERS,
            EntityProcessorProductRules.ENTITY_PROCESSOR_PRODUCT_RULES,
            EntityProcessorProductTemplateRules.ENTITY_PROCESSOR_PRODUCT_TEMPLATE_RULES,
            EntityProcessorProductTemplates.ENTITY_PROCESSOR_PRODUCT_TEMPLATES,
            EntityProcessorProducts.ENTITY_PROCESSOR_PRODUCTS,
            EntityProcessorSimpleComplexRuleRelations.ENTITY_PROCESSOR_SIMPLE_COMPLEX_RULE_RELATIONS,
            EntityProcessorSimpleRules.ENTITY_PROCESSOR_SIMPLE_RULES,
            EntityProcessorStages.ENTITY_PROCESSOR_STAGES,
            EntityProcessorTickets.ENTITY_PROCESSOR_TICKETS
        );
    }
}
