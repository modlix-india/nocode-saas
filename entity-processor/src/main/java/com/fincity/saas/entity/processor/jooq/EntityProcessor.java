/*
 * This file is generated by jOOQ.
 */
package com.fincity.saas.entity.processor.jooq;


import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorActivities;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorCampaigns;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorComplexRules;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorFlowSchema;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorNotes;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorOwners;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorPartners;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorProductComms;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorProductStageRules;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorProductTemplateRules;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorProductTemplateWalkInForms;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorProductTemplates;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorProductWalkInForms;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorProducts;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorSimpleComplexRuleRelations;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorSimpleRules;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorStages;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorTaskTypes;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorTasks;
import com.fincity.saas.entity.processor.jooq.tables.EntityProcessorTickets;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EntityProcessor extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>entity_processor</code>
     */
    public static final EntityProcessor ENTITY_PROCESSOR = new EntityProcessor();

    /**
     * The table <code>entity_processor.entity_processor_activities</code>.
     */
    public final EntityProcessorActivities ENTITY_PROCESSOR_ACTIVITIES = EntityProcessorActivities.ENTITY_PROCESSOR_ACTIVITIES;

    /**
     * The table <code>entity_processor.entity_processor_campaigns</code>.
     */
    public final EntityProcessorCampaigns ENTITY_PROCESSOR_CAMPAIGNS = EntityProcessorCampaigns.ENTITY_PROCESSOR_CAMPAIGNS;

    /**
     * The table <code>entity_processor.entity_processor_complex_rules</code>.
     */
    public final EntityProcessorComplexRules ENTITY_PROCESSOR_COMPLEX_RULES = EntityProcessorComplexRules.ENTITY_PROCESSOR_COMPLEX_RULES;

    /**
     * The table <code>entity_processor.entity_processor_flow_schema</code>.
     */
    public final EntityProcessorFlowSchema ENTITY_PROCESSOR_FLOW_SCHEMA = EntityProcessorFlowSchema.ENTITY_PROCESSOR_FLOW_SCHEMA;

    /**
     * The table <code>entity_processor.entity_processor_notes</code>.
     */
    public final EntityProcessorNotes ENTITY_PROCESSOR_NOTES = EntityProcessorNotes.ENTITY_PROCESSOR_NOTES;

    /**
     * The table <code>entity_processor.entity_processor_owners</code>.
     */
    public final EntityProcessorOwners ENTITY_PROCESSOR_OWNERS = EntityProcessorOwners.ENTITY_PROCESSOR_OWNERS;

    /**
     * The table <code>entity_processor.entity_processor_partners</code>.
     */
    public final EntityProcessorPartners ENTITY_PROCESSOR_PARTNERS = EntityProcessorPartners.ENTITY_PROCESSOR_PARTNERS;

    /**
     * The table <code>entity_processor.entity_processor_product_comms</code>.
     */
    public final EntityProcessorProductComms ENTITY_PROCESSOR_PRODUCT_COMMS = EntityProcessorProductComms.ENTITY_PROCESSOR_PRODUCT_COMMS;

    /**
     * The table
     * <code>entity_processor.entity_processor_product_stage_rules</code>.
     */
    public final EntityProcessorProductStageRules ENTITY_PROCESSOR_PRODUCT_STAGE_RULES = EntityProcessorProductStageRules.ENTITY_PROCESSOR_PRODUCT_STAGE_RULES;

    /**
     * The table
     * <code>entity_processor.entity_processor_product_template_rules</code>.
     */
    public final EntityProcessorProductTemplateRules ENTITY_PROCESSOR_PRODUCT_TEMPLATE_RULES = EntityProcessorProductTemplateRules.ENTITY_PROCESSOR_PRODUCT_TEMPLATE_RULES;

    /**
     * The table
     * <code>entity_processor.entity_processor_product_template_walk_in_forms</code>.
     */
    public final EntityProcessorProductTemplateWalkInForms ENTITY_PROCESSOR_PRODUCT_TEMPLATE_WALK_IN_FORMS = EntityProcessorProductTemplateWalkInForms.ENTITY_PROCESSOR_PRODUCT_TEMPLATE_WALK_IN_FORMS;

    /**
     * The table
     * <code>entity_processor.entity_processor_product_templates</code>.
     */
    public final EntityProcessorProductTemplates ENTITY_PROCESSOR_PRODUCT_TEMPLATES = EntityProcessorProductTemplates.ENTITY_PROCESSOR_PRODUCT_TEMPLATES;

    /**
     * The table
     * <code>entity_processor.entity_processor_product_walk_in_forms</code>.
     */
    public final EntityProcessorProductWalkInForms ENTITY_PROCESSOR_PRODUCT_WALK_IN_FORMS = EntityProcessorProductWalkInForms.ENTITY_PROCESSOR_PRODUCT_WALK_IN_FORMS;

    /**
     * The table <code>entity_processor.entity_processor_products</code>.
     */
    public final EntityProcessorProducts ENTITY_PROCESSOR_PRODUCTS = EntityProcessorProducts.ENTITY_PROCESSOR_PRODUCTS;

    /**
     * The table
     * <code>entity_processor.entity_processor_simple_complex_rule_relations</code>.
     */
    public final EntityProcessorSimpleComplexRuleRelations ENTITY_PROCESSOR_SIMPLE_COMPLEX_RULE_RELATIONS = EntityProcessorSimpleComplexRuleRelations.ENTITY_PROCESSOR_SIMPLE_COMPLEX_RULE_RELATIONS;

    /**
     * The table <code>entity_processor.entity_processor_simple_rules</code>.
     */
    public final EntityProcessorSimpleRules ENTITY_PROCESSOR_SIMPLE_RULES = EntityProcessorSimpleRules.ENTITY_PROCESSOR_SIMPLE_RULES;

    /**
     * The table <code>entity_processor.entity_processor_stages</code>.
     */
    public final EntityProcessorStages ENTITY_PROCESSOR_STAGES = EntityProcessorStages.ENTITY_PROCESSOR_STAGES;

    /**
     * The table <code>entity_processor.entity_processor_task_types</code>.
     */
    public final EntityProcessorTaskTypes ENTITY_PROCESSOR_TASK_TYPES = EntityProcessorTaskTypes.ENTITY_PROCESSOR_TASK_TYPES;

    /**
     * The table <code>entity_processor.entity_processor_tasks</code>.
     */
    public final EntityProcessorTasks ENTITY_PROCESSOR_TASKS = EntityProcessorTasks.ENTITY_PROCESSOR_TASKS;

    /**
     * The table <code>entity_processor.entity_processor_tickets</code>.
     */
    public final EntityProcessorTickets ENTITY_PROCESSOR_TICKETS = EntityProcessorTickets.ENTITY_PROCESSOR_TICKETS;

    /**
     * No further instances allowed
     */
    private EntityProcessor() {
        super("entity_processor", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            EntityProcessorActivities.ENTITY_PROCESSOR_ACTIVITIES,
            EntityProcessorCampaigns.ENTITY_PROCESSOR_CAMPAIGNS,
            EntityProcessorComplexRules.ENTITY_PROCESSOR_COMPLEX_RULES,
            EntityProcessorFlowSchema.ENTITY_PROCESSOR_FLOW_SCHEMA,
            EntityProcessorNotes.ENTITY_PROCESSOR_NOTES,
            EntityProcessorOwners.ENTITY_PROCESSOR_OWNERS,
            EntityProcessorPartners.ENTITY_PROCESSOR_PARTNERS,
            EntityProcessorProductComms.ENTITY_PROCESSOR_PRODUCT_COMMS,
            EntityProcessorProductStageRules.ENTITY_PROCESSOR_PRODUCT_STAGE_RULES,
            EntityProcessorProductTemplateRules.ENTITY_PROCESSOR_PRODUCT_TEMPLATE_RULES,
            EntityProcessorProductTemplateWalkInForms.ENTITY_PROCESSOR_PRODUCT_TEMPLATE_WALK_IN_FORMS,
            EntityProcessorProductTemplates.ENTITY_PROCESSOR_PRODUCT_TEMPLATES,
            EntityProcessorProductWalkInForms.ENTITY_PROCESSOR_PRODUCT_WALK_IN_FORMS,
            EntityProcessorProducts.ENTITY_PROCESSOR_PRODUCTS,
            EntityProcessorSimpleComplexRuleRelations.ENTITY_PROCESSOR_SIMPLE_COMPLEX_RULE_RELATIONS,
            EntityProcessorSimpleRules.ENTITY_PROCESSOR_SIMPLE_RULES,
            EntityProcessorStages.ENTITY_PROCESSOR_STAGES,
            EntityProcessorTaskTypes.ENTITY_PROCESSOR_TASK_TYPES,
            EntityProcessorTasks.ENTITY_PROCESSOR_TASKS,
            EntityProcessorTickets.ENTITY_PROCESSOR_TICKETS
        );
    }
}
